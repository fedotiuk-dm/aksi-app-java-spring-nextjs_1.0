#!/bin/bash

# AKSI Dev Environment Reset Script
# –ü–æ–≤–Ω–∞ –æ—á–∏—Å—Ç–∫–∞ —Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ä–æ–∑—Ä–æ–±–Ω–∏—Ü—å–∫–æ–≥–æ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞

echo "üîÑ –°–∫–∏–¥–∞–Ω–Ω—è AKSI Dev Environment..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é Docker
cd "$(dirname "$0")"

echo "üìÅ –†–æ–±–æ—á–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $(pwd)"

# –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo "üõë –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ dev –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏..."
docker-compose -f docker-compose.dev.yml down

# –í–∏–¥–∞–ª—è—î–º–æ –æ–±—Ä–∞–∑–∏ –ø—Ä–æ–µ–∫—Ç—É
echo "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ –æ–±—Ä–∞–∑–∏ –ø—Ä–æ–µ–∫—Ç—É..."
docker image rm -f docker_backend 2>/dev/null || true
docker image rm -f docker_frontend 2>/dev/null || true

# –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –æ–±—Ä–∞–∑–∏
echo "üßπ –û—á–∏—â—É—î–º–æ –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –æ–±—Ä–∞–∑–∏..."
docker image prune -f

# –û—á–∏—â—É—î–º–æ Maven –∫–µ—à (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
read -p "ü§î –û—á–∏—Å—Ç–∏—Ç–∏ Maven –∫–µ—à? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è –û—á–∏—â—É—î–º–æ Maven –∫–µ—à..."
    docker volume rm backend_m2_cache 2>/dev/null || true
fi

# –û—á–∏—â—É—î–º–æ Node.js –∫–µ—à (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
read -p "ü§î –û—á–∏—Å—Ç–∏—Ç–∏ Node.js –∫–µ—à? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è –û—á–∏—â—É—î–º–æ Node.js –∫–µ—à..."
    docker volume rm frontend_node_modules 2>/dev/null || true
    docker volume rm frontend_next_cache 2>/dev/null || true
fi

# –û—á–∏—â—É—î–º–æ –¥–∞–Ω—ñ –ë–î (–∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º)
echo "‚ö†Ô∏è –£–í–ê–ì–ê: –¶–µ –≤–∏–¥–∞–ª–∏—Ç—å –≤—Å—ñ –¥–∞–Ω—ñ –∑ –ë–î!"
read -p "ü§î –û—á–∏—Å—Ç–∏—Ç–∏ –¥–∞–Ω—ñ PostgreSQL? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üóëÔ∏è –û—á–∏—â—É—î–º–æ –¥–∞–Ω—ñ PostgreSQL..."
    docker volume rm docker_postgres_data_dev 2>/dev/null || true
    docker volume rm docker_pgadmin_data_dev 2>/dev/null || true
    echo "‚úÖ –î–∞–Ω—ñ –ë–î –æ—á–∏—â–µ–Ω—ñ"
else
    echo "‚ÑπÔ∏è –î–∞–Ω—ñ –ë–î –∑–±–µ—Ä–µ–∂–µ–Ω—ñ"
fi

# –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ volumes
echo "üì¶ –°—Ç–≤–æ—Ä—é—î–º–æ volumes..."
docker volume create backend_m2_cache 2>/dev/null || true
# postgres_data_dev —Ç–∞ pgadmin_data_dev —Å—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ Docker Compose –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
# docker volume create postgres_data_dev 2>/dev/null || true
# docker volume create pgadmin_data_dev 2>/dev/null || true
docker volume create frontend_node_modules 2>/dev/null || true
docker volume create frontend_next_cache 2>/dev/null || true

echo "‚úÖ –°–∫–∏–¥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üöÄ –¢–µ–ø–µ—Ä –∑–∞–ø—É—Å—Ç—ñ—Ç—å dev —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ:"
echo "   ./start-dev.sh"
echo ""
echo "   –∞–±–æ"
echo ""
echo "   docker-compose -f docker-compose.dev.yml up --build"
