# Docker Compose –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è —Ä–æ–∑—Ä–æ–±–∫–∏ –∑ –±–µ–∫–µ–Ω–¥–æ–º –Ω–∞ —Ö–æ—Å—Ç —Å–∏—Å—Ç–µ–º—ñ
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: docker-compose -f docker-compose.host-backend.yml up
#
# –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–µ–∫–µ–Ω–¥ –ª–æ–∫–∞–ª—å–Ω–æ –∑ —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
# SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/aksi_cleaners_db_v5
# SPRING_DATASOURCE_USERNAME=aksi_user
# SPRING_DATASOURCE_PASSWORD=1911
# SPRING_PROFILES_ACTIVE=dev
#
# –ê–±–æ —á–µ—Ä–µ–∑ IntelliJ IDEA / VS Code –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é –¥–ª—è Spring Boot

services:
  # Traefik - –∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø—Ä–æ–∫—Å—ñ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—ó
  traefik:
    image: traefik:v3.4
    container_name: traefik-host-backend
    ports:
      - "80:80" # HTTP –ø–æ—Ä—Ç
      - "9090:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Docker –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–æ—á–æ–∫ –≤—Ö–æ–¥—É
      - "--entrypoints.web.address=:80"
      # –í–∫–ª—é—á–µ–Ω–Ω—è API Dashboard
      - "--api.dashboard=true"
      - "--api.insecure=true"
      # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
      - "--log.level=INFO"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - aksi-network-host
    restart: unless-stopped

  # PostgreSQL - –±–∞–∑–∞ –¥–∞–Ω–∏—Ö
  postgres:
    image: postgres:17
    container_name: postgres-host-backend
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: aksi_user
      POSTGRES_PASSWORD: 1911
      POSTGRES_DB: aksi_cleaners_db_v5
      POSTGRES_SCHEMA: public
    volumes:
      - postgres_data_host:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aksi_user -d aksi_cleaners_db_v5"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aksi-network-host

  # PgAdmin - –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
  pgadmin:
    image: dpage/pgadmin4:9.5
    container_name: aksi-pgadmin-host-backend
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aksi.com
      PGADMIN_DEFAULT_PASSWORD: admin
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - pgadmin_data_host:/var/lib/pgadmin
      - ./pgadmin/config/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgpass
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aksi-network-host

  # Frontend (Next.js) - —Ä–æ–∑—Ä–æ–±–∫–∞
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: frontend-host-backend
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      # API URL –¥–ª—è –∫–ª—ñ—î–Ω—Ç—Å—å–∫–æ—ó —á–∞—Å—Ç–∏–Ω–∏ (browser) - —á–µ—Ä–µ–∑ —Ö–æ—Å—Ç —Å–∏—Å—Ç–µ–º—É
      NEXT_PUBLIC_API_URL: http://localhost:8080/api
      # API URL –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ—ó —á–∞—Å—Ç–∏–Ω–∏ (SSR) - –ø—Ä—è–º–æ –¥–æ —Ö–æ—Å—Ç —Å–∏—Å—Ç–µ–º–∏
      NEXT_SERVER_API_URL: http://host.docker.internal:8080/api
      NEXT_TELEMETRY_DISABLED: 1
      # Orval –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó API
      ORVAL_API_URL: http://host.docker.internal:8080/api/v3/api-docs
      # üöÄ NPM –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–Ø –¥–ª—è –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è
      npm_config_audit: "false"
      npm_config_fund: "false"
      npm_config_progress: "false"
      npm_config_cache_max: "86400000"
      npm_config_maxsockets: "20"
      npm_config_audit_level: "none"
    volumes:
      - ../frontend:/app # –ú–æ–Ω—Ç—É—î–º–æ –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      - frontend_node_modules_host:/app/node_modules # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ node_modules —É volume
      - frontend_next_cache_host:/app/.next # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ .next –∫–µ—à —É volume
      - frontend_npm_cache_host:/home/node/.npm # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ npm –∫–µ—à —É volume
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_started
    restart: unless-stopped
    networks:
      - aksi-network-host
    # –î–æ–¥–∞—î–º–æ healthcheck –¥–ª—è Next.js
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s # –î–∞—î–º–æ —á–∞—Å –Ω–∞ –∑–∞–ø—É—Å–∫ Next.js
    labels:
      # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Traefik
      - "traefik.enable=true"
      # –ü—Ä–∞–≤–∏–ª–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—ó - –≤—Å—ñ –∑–∞–ø–∏—Ç–∏, —è–∫—ñ –Ω–µ –ø–æ—á–∏–Ω–∞—é—Ç—å—Å—è –∑ /api
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      # –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç - –Ω–∏–∑—å–∫–∏–π, —â–æ–± –¥–æ–∑–≤–æ–ª–∏—Ç–∏ —Å–ø–æ—á–∞—Ç–∫—É –æ–±—Ä–æ–±–∏—Ç–∏ /api –∑–∞–ø–∏—Ç–∏
      - "traefik.http.routers.frontend.priority=1"
      # –í–∫–∞–∑—É—î–º–æ –Ω–∞ —è–∫–æ–º—É –ø–æ—Ä—Ç—ñ –ø—Ä–∞—Ü—é—î —Å–µ—Ä–≤—ñ—Å
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  # Portainer - —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer-host-backend
    restart: unless-stopped
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data_host:/data
    networks:
      - aksi-network-host
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

networks:
  aksi-network-host:
    driver: bridge

volumes:
  postgres_data_host:
  pgadmin_data_host:
  frontend_node_modules_host:
  frontend_next_cache_host:
  frontend_npm_cache_host:
  portainer_data_host:
