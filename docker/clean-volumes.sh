#!/bin/bash

# üßπ –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö Docker volumes
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./clean-volumes.sh

set -e

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –≤–∏–≤–æ–¥—É
log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
log_error() { echo -e "${RED}‚ùå $1${NC}"; }

COMPOSE_FILE="docker-compose.dev.yml"

log_warning "üßπ –£–í–ê–ì–ê! –¶–µ–π —Å–∫—Ä–∏–ø—Ç –≤–∏–¥–∞–ª–∏—Ç—å –≤—Å—ñ Docker volumes –¥–ª—è –ø—Ä–æ–µ–∫—Ç—É!"
echo "–í—Å—ñ –¥–∞–Ω—ñ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –±—É–¥—É—Ç—å –≤—Ç—Ä–∞—á–µ–Ω—ñ. –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ? (y/N)"
read -r CONFIRM

if [[ ! $CONFIRM =~ ^[Yy]$ ]]; then
    log_info "–û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ."
    exit 0
fi

log_info "üõë –ó—É–ø–∏–Ω—è—î–º–æ –≤—Å—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏..."
docker-compose -f $COMPOSE_FILE down

log_info "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ project volumes —á–µ—Ä–µ–∑ docker-compose..."
docker-compose -f $COMPOSE_FILE down -v

log_info "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ volumes –≤—Ä—É—á–Ω—É..."
docker volume rm docker_postgres_data_dev 2>/dev/null || true
docker volume rm docker_pgadmin_data_dev 2>/dev/null || true
docker volume rm docker_backend_m2_cache 2>/dev/null || true
docker volume rm docker_frontend_node_modules 2>/dev/null || true
docker volume rm docker_frontend_next_cache 2>/dev/null || true
docker volume rm docker_frontend_npm_cache 2>/dev/null || true

log_info "üóëÔ∏è –í–∏–¥–∞–ª—è—î–º–æ volumes –±–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å–∞..."
docker volume rm postgres_data_dev 2>/dev/null || true
docker volume rm pgadmin_data_dev 2>/dev/null || true
docker volume rm backend_m2_cache 2>/dev/null || true
docker volume rm frontend_node_modules 2>/dev/null || true
docker volume rm frontend_next_cache 2>/dev/null || true
docker volume rm frontend_npm_cache 2>/dev/null || true

log_info "üßπ –û—á–∏—â–∞—î–º–æ unused volumes..."
docker volume prune -f

log_success "‚úÖ –í—Å—ñ volumes –æ—á–∏—â–µ–Ω–æ!"
log_info "–¢–µ–ø–µ—Ä –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–∏—Å—Ç–µ–º—É –±–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å:"
echo "   ./start-dev.sh fast"
