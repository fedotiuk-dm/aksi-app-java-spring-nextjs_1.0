services:
  postgres:
    image: postgres:17
    container_name: postgres-dev
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: aksi_user
      POSTGRES_PASSWORD: 1911
      POSTGRES_DB: aksi_cleaners_db_v5
      POSTGRES_SCHEMA: public
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aksi_user -d aksi_cleaners_db_v5"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aksi-network-dev

  # Redis for session management
  redis:
    image: redis:8-alpine
    container_name: redis-dev
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - aksi-network-dev

  # Backend (Spring Boot) - розробка
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    container_name: backend-dev
    expose:
      - "8080"
      - "5005"
    ports:
      - "8080:8080"
      - "5005:5005" # Debug port
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/aksi_cleaners_db_v5
      SPRING_DATASOURCE_USERNAME: aksi_user
      SPRING_DATASOURCE_PASSWORD: 1911
      SPRING_PROFILES_ACTIVE: dev
      # Redis configuration
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      # Відключаємо поштовий сервер для розробки
      SPRING_MAIL_HOST: localhost
      SPRING_MAIL_PORT: 3025
      SPRING_MAIL_TEST-CONNECTION: "false"
      # Вимикаємо health checks для різних сервісів
      MANAGEMENT_HEALTH_MAIL_ENABLED: "false"
      # DevTools налаштування для hot reload
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: "true"
      # Рівень логування (ERROR для максимально чистих логів, DEBUG для детальної діагностики)
      AKSI_LOG_LEVEL: "DEBUG"
      LOGGING_LEVEL_COM_AKSI: "DEBUG"
    volumes:
      - ../backend/src:/app/src # Монтуємо тільки src для hot reload
      - ../backend/target:/app/target # Монтуємо target для збереження compiled класів
      - backend_m2_cache:/home/appuser/.m2 # Кеш Maven для non-root користувача
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    networks:
      - aksi-network-dev
    # Відключаємо healthcheck, оскільки Actuator видалено
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "wget",
    #       "-q",
    #       "--spider",
    #       "http://localhost:8080/management/health",
    #     ]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s # Даємо більше часу на запуск Spring Boot

networks:
  aksi-network-dev:
    driver: bridge

volumes:
  postgres_data_dev:
  backend_m2_cache:
