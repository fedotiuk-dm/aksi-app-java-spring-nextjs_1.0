openapi: 3.0.4
info:
  title: Customer API
  description: Customer management API for dry cleaning service
  version: 1.0.0
  contact:
    name: API Support
    email: support@dryclean.example.com

servers:
  - url: http://localhost:8080
    description: Local development
  - url: https://api.dryclean.example.com
    description: Production

tags:
  - name: customer
    description: Customer management operations

paths:
  /api/customers:
    get:
      operationId: listCustomers
      summary: List customers
      description: Search and list customers with optional filters
      tags:
        - customer
      security:
        - cookieAuth: []
      parameters:
        - $ref: "../openapi/common.yaml#/components/parameters/Search"
        - name: phone
          in: query
          description: Filter by phone number
          schema:
            type: string
        - name: email
          in: query
          description: Filter by email
          schema:
            type: string
        - name: discountCard
          in: query
          description: Filter by discount card number
          schema:
            type: string
        - name: offset
          in: query
          description: Number of items to skip
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: Number of items to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20

      responses:
        "200":
          description: List of customers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerListResponse"
        "401":
          $ref: "../openapi/common.yaml#/components/responses/Unauthorized"

    post:
      operationId: createCustomer
      summary: Create customer
      description: Create a new customer
      tags:
        - customer
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerRequest"
      responses:
        "201":
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerInfo"
        "400":
          $ref: "../openapi/common.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../openapi/common.yaml#/components/responses/Unauthorized"

  /api/customers/{customerId}:
    parameters:
      - name: customerId
        in: path
        required: true
        description: Customer ID
        schema:
          type: string
          format: uuid

    get:
      operationId: getCustomer
      summary: Get customer
      description: Get customer details by ID
      tags:
        - customer
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Customer details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerInfo"
        "401":
          $ref: "../openapi/common.yaml#/components/responses/Unauthorized"
        "404":
          $ref: "../openapi/common.yaml#/components/responses/NotFound"

    put:
      operationId: updateCustomer
      summary: Update customer
      description: Update customer information
      tags:
        - customer
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomerRequest"
      responses:
        "200":
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerInfo"
        "400":
          $ref: "../openapi/common.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../openapi/common.yaml#/components/responses/Unauthorized"
        "404":
          $ref: "../openapi/common.yaml#/components/responses/NotFound"

  /api/customers/{customerId}/exists:
    parameters:
      - name: customerId
        in: path
        required: true
        description: Customer ID
        schema:
          type: string
          format: uuid

    head:
      operationId: checkCustomerExists
      summary: Check if customer exists
      description: Check if customer exists by ID
      tags:
        - customer
      security:
        - cookieAuth: []
      responses:
        "204":
          description: Customer exists
        "401":
          $ref: "../openapi/common.yaml#/components/responses/Unauthorized"
        "404":
          $ref: "../openapi/common.yaml#/components/responses/NotFound"

components:
  securitySchemes:
    cookieAuth:
      $ref: "../openapi/common.yaml#/components/securitySchemes/cookieAuth"
  schemas:
    CustomerInfo:
      type: object
      required:
        - id
        - firstName
        - lastName
        - phonePrimary
        - active
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: Customer ID
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        phonePrimary:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/PhoneNumber"
          description: Primary phone number (must be unique for active customers)
          x-unique-active: true
        email:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/Email"
          description: Email address (must be unique for active customers)
          x-unique-active: true
        address:
          type: string
          description: Address
        contactPreferences:
          type: array
          items:
            $ref: "../openapi/common.yaml#/components/schemas/ContactPreference"
          description: Preferred contact methods
        infoSource:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/InfoSource"
          description: How customer learned about the service
        infoSourceOther:
          type: string
          description: Other info source details
        notes:
          type: string
          description: Internal notes about customer
        discountCardNumber:
          type: string
          description: Discount card number (unique)
        active:
          type: boolean
          description: Whether customer is active
        createdAt:
          type: string
          format: date-time
          description: Registration date (UTC)
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp (UTC)
        version:
          type: integer
          format: int64
          description: Version for optimistic locking

    CreateCustomerRequest:
      type: object
      required:
        - firstName
        - lastName
        - phonePrimary
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 100
          description: First name
        lastName:
          type: string
          minLength: 1
          maxLength: 100
          description: Last name
        phonePrimary:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/PhoneNumber"
          description: Primary phone number (must be unique for active customers)
          x-unique-active: true
        email:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/Email"
          description: Email address (must be unique for active customers)
          x-unique-active: true
        address:
          type: string
          maxLength: 500
          description: Address
        contactPreferences:
          type: array
          items:
            $ref: "../openapi/common.yaml#/components/schemas/ContactPreference"
          description: Preferred contact methods
        infoSource:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/InfoSource"
          description: How customer learned about the service
        infoSourceOther:
          type: string
          maxLength: 200
          description: Other info source details (required if infoSource is OTHER)
        notes:
          type: string
          maxLength: 1000
          description: Internal notes about customer
        discountCardNumber:
          type: string
          maxLength: 20
          description: Discount card number (must be unique)
          x-unique: true

    UpdateCustomerRequest:
      type: object
      properties:
        firstName:
          type: string
          minLength: 1
          maxLength: 100
          description: First name
        lastName:
          type: string
          minLength: 1
          maxLength: 100
          description: Last name
        phonePrimary:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/PhoneNumber"
          description: Primary phone number (must be unique for active customers)
          x-unique-active: true
        email:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/Email"
          description: Email address (must be unique for active customers)
          x-unique-active: true
        address:
          type: string
          maxLength: 500
          description: Address
        contactPreferences:
          type: array
          items:
            $ref: "../openapi/common.yaml#/components/schemas/ContactPreference"
          description: Preferred contact methods
        infoSource:
          allOf:
            - $ref: "../openapi/common.yaml#/components/schemas/InfoSource"
          description: How customer learned about the service
        infoSourceOther:
          type: string
          maxLength: 200
          description: Other info source details
        notes:
          type: string
          maxLength: 1000
          description: Internal notes about customer
        discountCardNumber:
          type: string
          maxLength: 20
          description: Discount card number (must be unique)
          x-unique: true
        active:
          type: boolean
          description: Whether customer is active

    CustomerListResponse:
      allOf:
        - $ref: "../openapi/common.yaml#/components/schemas/PaginatedResponse"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/CustomerInfo"

  # Security schemes and error responses centralized in common.yaml
