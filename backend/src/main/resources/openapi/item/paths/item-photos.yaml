# Endpoints для управління фотографіями предметів
/api/items/{itemId}/photos:
  get:
    tags:
      - item-photos
    summary: Отримати фотографії предмета
    operationId: getItemPhotos
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Список фотографій
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../schemas/item-responses.yaml#/ItemPhotoResponse"
      404:
        description: Предмет не знайдено
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"

  post:
    tags:
      - item-photos
    summary: Завантажити фотографію предмета
    operationId: uploadItemPhoto
    parameters:
      - name: itemId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: "../schemas/item-requests.yaml#/UploadItemPhotoRequest"
    responses:
      201:
        description: Фотографія завантажена
        content:
          application/json:
            schema:
              $ref: "../schemas/item-responses.yaml#/ItemPhotoResponse"
      400:
        description: Помилка валідації
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ValidationErrorResponse"
      404:
        description: Предмет не знайдено
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"
      413:
        description: Файл занадто великий
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"

/api/photos/{photoId}:
  get:
    tags:
      - item-photos
    summary: Отримати фотографію за ID
    operationId: getPhotoById
    parameters:
      - name: photoId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      200:
        description: Фотографія знайдена
        content:
          application/json:
            schema:
              $ref: "../schemas/item-responses.yaml#/ItemPhotoResponse"
      404:
        description: Фотографія не знайдена
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"

  put:
    tags:
      - item-photos
    summary: Оновити метадані фотографії
    operationId: updatePhotoMetadata
    parameters:
      - name: photoId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "../schemas/item-requests.yaml#/UpdatePhotoMetadataRequest"
    responses:
      200:
        description: Метадані оновлено
        content:
          application/json:
            schema:
              $ref: "../schemas/item-responses.yaml#/ItemPhotoResponse"
      404:
        description: Фотографія не знайдена
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"

  delete:
    tags:
      - item-photos
    summary: Видалити фотографію
    operationId: deletePhoto
    parameters:
      - name: photoId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    responses:
      204:
        description: Фотографія видалена
      404:
        description: Фотографія не знайдена
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"

/api/photos/{photoId}/file:
  get:
    tags:
      - item-photos
    summary: Завантажити файл фотографії
    operationId: downloadPhotoFile
    parameters:
      - name: photoId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: thumbnail
        in: query
        description: Чи повернути мініатюру
        required: false
        schema:
          type: boolean
          default: false
    responses:
      200:
        description: Файл фотографії
        content:
          image/jpeg:
            schema:
              type: string
              format: binary
            example: "[Binary JPEG data]"
          image/png:
            schema:
              type: string
              format: binary
            example: "[Binary PNG data]"
          image/webp:
            schema:
              type: string
              format: binary
            example: "[Binary WebP data]"
          application/json:
            schema:
              $ref: "../schemas/item-responses.yaml#/PhotoDownloadResponse"
            example:
              url: "http://localhost:8080/api/photos/123e4567-e89b-12d3-a456-426614174000/file"
              contentType: "image/jpeg"
              size: 102400
              thumbnail: false
      404:
        description: Фотографія не знайдена
        content:
          application/json:
            schema:
              $ref: "../../common/schemas/errors.yaml#/ErrorResponse"
