openapi: 3.1.1
info:
  title: Branch API
  description: Branch management API for dry cleaning locations
  version: 1.0.0
  contact:
    name: API Support
    email: support@dryclean.example.com

servers:
  - url: http://localhost:8080
    description: Local development
  - url: https://api.dryclean.example.com
    description: Production

tags:
  - name: branches
    description: Branch operations

paths:
  /api/branches:
    get:
      operationId: listBranches
      summary: List branches
      description: Get list of branches
      tags:
        - branches
      security:
        - cookieAuth: []
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/SortBy'
        - $ref: '#/components/parameters/SortOrder'
        - name: active
          in: query
          description: Filter by active status
          required: false
          schema:
            type: boolean
            default: true
        - name: search
          in: query
          description: Search by name or address
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of branches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchesResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
    
    post:
      operationId: createBranch
      summary: Create new branch
      description: Create a new branch (admin only)
      tags:
        - branches
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBranchRequest'
      responses:
        '201':
          description: Branch created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/branches/active:
    get:
      operationId: getAllActiveBranches
      summary: Get all active branches
      description: Get all active branches for dropdowns (no pagination)
      tags:
        - branches
      security:
        - cookieAuth: []
      responses:
        '200':
          description: List of active branches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/branches/{branchId}:
    parameters:
      - name: branchId
        in: path
        required: true
        description: Branch ID
        schema:
          type: string
          format: uuid
    
    get:
      operationId: getBranchById
      summary: Get branch details
      description: Get detailed branch information
      tags:
        - branches
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Branch details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    
    put:
      operationId: updateBranch
      summary: Update branch
      description: Update an existing branch (admin only)
      tags:
        - branches
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBranchRequest'
      responses:
        '200':
          description: Branch updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    
    delete:
      operationId: deleteBranch
      summary: Delete branch
      description: Delete a branch (admin only)
      tags:
        - branches
      security:
        - cookieAuth: []
      responses:
        '204':
          description: Branch deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/branches/{branchId}/activate:
    parameters:
      - name: branchId
        in: path
        required: true
        description: Branch ID
        schema:
          type: string
          format: uuid
    
    post:
      operationId: activateBranch
      summary: Activate branch
      description: Activate a deactivated branch (admin only)
      tags:
        - branches
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Branch activated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Conflict - branch is already active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/branches/{branchId}/deactivate:
    parameters:
      - name: branchId
        in: path
        required: true
        description: Branch ID
        schema:
          type: string
          format: uuid
    
    post:
      operationId: deactivateBranch
      summary: Deactivate branch
      description: Deactivate an active branch (admin only)
      tags:
        - branches
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Branch deactivated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BranchInfo'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Conflict - branch is already inactive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  parameters:
    PageNumber:
      name: page
      in: query
      description: Page number (0-based)
      schema:
        type: integer
        minimum: 0
        default: 0
    
    PageSize:
      name: size
      in: query
      description: Page size (number of items per page)
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    
    SortBy:
      name: sortBy
      in: query
      description: Sort field
      schema:
        type: string
        default: name
        enum:
          - name
          - createdAt
          - sortOrder
    
    SortOrder:
      name: sortOrder
      in: query
      description: Sort direction
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    Forbidden:
      description: Forbidden access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    BranchInfo:
      type: object
      required:
        - id
        - name
        - address
        - phone
        - active
      properties:
        id:
          type: string
          format: uuid
          description: Branch ID
        name:
          type: string
          description: Branch name
        address:
          type: string
          description: Branch address
        phone:
          type: string
          description: Branch phone number
        email:
          type: string
          format: email
          description: Branch email
        workingHours:
          type: string
          description: Working hours (e.g., "Пн-Пт 8:00-20:00, Сб 9:00-18:00")
        active:
          type: boolean
          description: Is branch active
        description:
          type: string
          description: Branch description
        sortOrder:
          type: integer
          description: Sort order for display
          default: 0

    CreateBranchRequest:
      type: object
      required:
        - name
        - address
        - phone
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Branch name
        address:
          type: string
          minLength: 1
          maxLength: 500
          description: Branch address
        phone:
          type: string
          minLength: 10
          maxLength: 20
          description: Branch phone number
        email:
          type: string
          format: email
          maxLength: 255
          description: Branch email
        workingHours:
          type: string
          maxLength: 255
          description: Working hours
        active:
          type: boolean
          description: Is branch active
          default: true
        description:
          type: string
          maxLength: 1000
          description: Branch description
        sortOrder:
          type: integer
          description: Sort order for display
          default: 0

    UpdateBranchRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: Branch name
        address:
          type: string
          minLength: 1
          maxLength: 500
          description: Branch address
        phone:
          type: string
          minLength: 10
          maxLength: 20
          description: Branch phone number
        email:
          type: string
          format: email
          maxLength: 255
          description: Branch email
        workingHours:
          type: string
          maxLength: 255
          description: Working hours
        active:
          type: boolean
          description: Is branch active
        description:
          type: string
          maxLength: 1000
          description: Branch description
        sortOrder:
          type: integer
          description: Sort order for display

    BranchesResponse:
      type: object
      required:
        - branches
        - totalItems
        - hasMore
      properties:
        branches:
          type: array
          items:
            $ref: '#/components/schemas/BranchInfo'
          description: List of branches
        totalItems:
          type: integer
          description: Total number of items matching the filter
        hasMore:
          type: boolean
          description: Whether there are more items to load

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        details:
          type: object
          additionalProperties: true
          description: Additional error details

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: SESSION
      description: Session-based authentication using httpOnly cookies