openapi: 3.0.4
info:
  title: Games API
  description: Game management operations
  version: 1.0.0

paths:
  /game-services/games:
    get:
      tags: [games]
      operationId: listGames
      summary: Get all games
      parameters:
        - $ref: "../common.yaml#/components/parameters/PageNumber"
        - $ref: "../common.yaml#/components/parameters/PageSize"
        - $ref: "../common.yaml#/components/parameters/Search"
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by active status
      responses:
        "200":
          description: List of games
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameListResponse"

    post:
      tags: [games]
      operationId: createGame
      summary: Create new game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGameRequest"
      responses:
        "201":
          description: Game created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

  /game-services/games/{id}:
    get:
      tags: [games]
      operationId: getGameById
      summary: Get game by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Game found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

    put:
      tags: [games]
      operationId: updateGame
      summary: Update game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGameRequest"
      responses:
        "200":
          description: Game updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

    delete:
      tags: [games]
      operationId: deleteGame
      summary: Delete game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Game deleted

  /game-services/games/{id}/activate:
    patch:
      tags: [games]
      operationId: activateGame
      summary: Activate game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Game activated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

  /game-services/games/{id}/deactivate:
    patch:
      tags: [games]
      operationId: deactivateGame
      summary: Deactivate game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Game deactivated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[A-Z0-9_-]+$"
        category:
          type: string
          enum:
            [
              MMORPG,
              FPS,
              MOBA,
              BATTLE_ROYALE,
              STRATEGY,
              ACTION,
              SIMULATION,
              SPORTS,
              RACING,
              PUZZLE,
              OTHER,
            ]
        description:
          type: string
          maxLength: 1000
        active:
          type: boolean
          default: true
        sortOrder:
          type: integer
          minimum: 0
          default: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - code
        - category
        - active
        - sortOrder

    CreateGameRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[A-Z0-9_-]+$"
        category:
          type: string
          enum:
            [
              MMORPG,
              FPS,
              MOBA,
              BATTLE_ROYALE,
              STRATEGY,
              ACTION,
              SIMULATION,
              SPORTS,
              RACING,
              PUZZLE,
              OTHER,
            ]
        description:
          type: string
          maxLength: 1000
        sortOrder:
          type: integer
          minimum: 0
          default: 0
      required:
        - name
        - code
        - category

    UpdateGameRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        code:
          type: string
          minLength: 1
          maxLength: 50
          pattern: "^[A-Z0-9_-]+$"
        category:
          type: string
          enum:
            [
              MMORPG,
              FPS,
              MOBA,
              BATTLE_ROYALE,
              STRATEGY,
              ACTION,
              SIMULATION,
              SPORTS,
              RACING,
              PUZZLE,
              OTHER,
            ]
        description:
          type: string
          maxLength: 1000
        sortOrder:
          type: integer
          minimum: 0
        active:
          type: boolean
      required: []

    GameListResponse:
      type: object
      required:
        - data
        - totalElements
        - totalPages
        - size
        - number
        - numberOfElements
        - first
        - last
        - empty
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Game"
          description: Page content
        totalElements:
          type: integer
          format: int64
          description: Total number of elements
        totalPages:
          type: integer
          description: Total number of pages
        size:
          type: integer
          description: Page size
        number:
          type: integer
          description: Page number (0-based)
        numberOfElements:
          type: integer
          description: Number of elements in current page
        first:
          type: boolean
          description: Is first page
        last:
          type: boolean
          description: Is last page
        empty:
          type: boolean
          description: Is empty
