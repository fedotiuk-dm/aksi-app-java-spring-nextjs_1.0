openapi: 3.0.4
info:
  title: Game Services API
  description: |
    Game boosting services management API for dynamic price calculation.

    ## Features
    - Dynamic price calculation based on stored formulas
    - Flexible modifier system (express, premium, placement matches)
    - Multi-level configuration for different games and difficulty levels
    - Real-time calculation with detailed breakdowns
    - Full CRUD operations for all entities
    - Integer-based pricing (cents) for precision
  version: 1.0.0
  contact:
    name: API Support
    email: support@gameservices.example.com

servers:
  - url: http://localhost:8080
    description: Local development
  - url: https://api.gameservices.example.com
    description: Production

tags:
  - name: games
    description: Game management operations
  - name: difficulty-levels
    description: Difficulty level management
  - name: service-types
    description: Service type management
  - name: price-configurations
    description: Price configuration management
  - name: boosters
    description: Booster management
  - name: calculator
    description: Price calculation operations

paths:
  # Games Management (from games.yaml)
  /game-services/games:
    get:
      tags: [games]
      operationId: listGames
      summary: Get all games
      parameters:
        - $ref: "common.yaml#/components/parameters/PageNumber"
        - $ref: "common.yaml#/components/parameters/PageSize"
        - $ref: "common.yaml#/components/parameters/Search"
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by active status
      responses:
        "200":
          description: List of games
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameListResponse"

    post:
      tags: [games]
      operationId: createGame
      summary: Create new game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGameRequest"
      responses:
        "201":
          description: Game created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

  /game-services/games/{id}:
    get:
      tags: [games]
      operationId: getGameById
      summary: Get game by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Game found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

    put:
      tags: [games]
      operationId: updateGame
      summary: Update game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGameRequest"
      responses:
        "200":
          description: Game updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"

    delete:
      tags: [games]
      operationId: deleteGame
      summary: Delete game
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Game deleted

  # Difficulty Levels (from difficulty-levels.yaml)
  /game-services/difficulty-levels:
    get:
      tags: [difficulty-levels]
      operationId: listDifficultyLevels
      summary: Get difficulty levels
      parameters:
        - $ref: "common.yaml#/components/parameters/PageNumber"
        - $ref: "common.yaml#/components/parameters/PageSize"
        - name: gameId
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by game ID
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by active status
      responses:
        "200":
          description: List of difficulty levels
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifficultyLevelListResponse"

    post:
      tags: [difficulty-levels]
      operationId: createDifficultyLevel
      summary: Create difficulty level
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDifficultyLevelRequest"
      responses:
        "201":
          description: Difficulty level created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifficultyLevel"

  /game-services/difficulty-levels/{id}:
    get:
      tags: [difficulty-levels]
      operationId: getDifficultyLevelById
      summary: Get difficulty level by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Difficulty level found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifficultyLevel"

    put:
      tags: [difficulty-levels]
      operationId: updateDifficultyLevel
      summary: Update difficulty level
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDifficultyLevelRequest"
      responses:
        "200":
          description: Difficulty level updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DifficultyLevel"

    delete:
      tags: [difficulty-levels]
      operationId: deleteDifficultyLevel
      summary: Delete difficulty level
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Difficulty level deleted

  # Service Types (from service-types.yaml)
  /game-services/service-types:
    get:
      tags: [service-types]
      operationId: listServiceTypes
      summary: Get service types
      parameters:
        - $ref: "common.yaml#/components/parameters/PageNumber"
        - $ref: "common.yaml#/components/parameters/PageSize"
        - name: gameId
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by game ID
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by active status
      responses:
        "200":
          description: List of service types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceTypeListResponse"

    post:
      tags: [service-types]
      operationId: createServiceType
      summary: Create service type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceTypeRequest"
      responses:
        "201":
          description: Service type created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceType"

  /game-services/service-types/{id}:
    get:
      tags: [service-types]
      operationId: getServiceTypeById
      summary: Get service type by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Service type found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceType"

    put:
      tags: [service-types]
      operationId: updateServiceType
      summary: Update service type
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceTypeRequest"
      responses:
        "200":
          description: Service type updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceType"

    delete:
      tags: [service-types]
      operationId: deleteServiceType
      summary: Delete service type
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Service type deleted

  # Price Configurations (from price-configurations.yaml)
  /game-services/price-configurations:
    get:
      tags: [price-configurations]
      operationId: listPriceConfigurations
      summary: Get price configurations
      parameters:
        - $ref: "common.yaml#/components/parameters/PageNumber"
        - $ref: "common.yaml#/components/parameters/PageSize"
        - name: gameId
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by game ID
        - name: serviceTypeId
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by service type ID
        - name: difficultyLevelId
          in: query
          schema:
            type: string
            format: uuid
          description: Filter by difficulty level ID
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by active status
      responses:
        "200":
          description: List of price configurations
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceConfigurationListResponse"

    post:
      tags: [price-configurations]
      operationId: createPriceConfiguration
      summary: Create price configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePriceConfigurationRequest"
      responses:
        "201":
          description: Price configuration created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceConfiguration"

  /game-services/price-configurations/{id}:
    get:
      tags: [price-configurations]
      operationId: getPriceConfigurationById
      summary: Get price configuration by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Price configuration found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceConfiguration"

    put:
      tags: [price-configurations]
      operationId: updatePriceConfiguration
      summary: Update price configuration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePriceConfigurationRequest"
      responses:
        "200":
          description: Price configuration updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PriceConfiguration"

    delete:
      tags: [price-configurations]
      operationId: deletePriceConfiguration
      summary: Delete price configuration
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Price configuration deleted

  # Boosters (from boosters.yaml)
  /game-services/boosters:
    get:
      tags: [boosters]
      operationId: listBoosters
      summary: Get all boosters
      parameters:
        - $ref: "common.yaml#/components/parameters/PageNumber"
        - $ref: "common.yaml#/components/parameters/PageSize"
        - $ref: "common.yaml#/components/parameters/Search"
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by active status
      responses:
        "200":
          description: List of boosters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoosterListResponse"

    post:
      tags: [boosters]
      operationId: createBooster
      summary: Create new booster
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBoosterRequest"
      responses:
        "201":
          description: Booster created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booster"

  /game-services/boosters/{id}:
    get:
      tags: [boosters]
      operationId: getBoosterById
      summary: Get booster by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Booster found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booster"

    put:
      tags: [boosters]
      operationId: updateBooster
      summary: Update booster
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBoosterRequest"
      responses:
        "200":
          description: Booster updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booster"

    delete:
      tags: [boosters]
      operationId: deleteBooster
      summary: Delete booster
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Booster deleted

  # Calculator (from calculator.yaml)
  /game-services/calculate:
    post:
      tags: [calculator]
      operationId: calculatePrice
      summary: Calculate service price
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CalculationRequest"
      responses:
        "200":
          description: Calculation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalculationResult"

components:
  schemas:
    # Import schemas from domain-specific files
    # Games
    Game:
      $ref: "schemas/games.yaml#/components/schemas/Game"
    CreateGameRequest:
      $ref: "schemas/games.yaml#/components/schemas/CreateGameRequest"
    UpdateGameRequest:
      $ref: "schemas/games.yaml#/components/schemas/UpdateGameRequest"
    GameListResponse:
      $ref: "schemas/games.yaml#/components/schemas/GameListResponse"

    # Difficulty Levels
    DifficultyLevel:
      $ref: "schemas/difficulty-levels.yaml#/components/schemas/DifficultyLevel"
    CreateDifficultyLevelRequest:
      $ref: "schemas/difficulty-levels.yaml#/components/schemas/CreateDifficultyLevelRequest"
    UpdateDifficultyLevelRequest:
      $ref: "schemas/difficulty-levels.yaml#/components/schemas/UpdateDifficultyLevelRequest"
    DifficultyLevelListResponse:
      $ref: "schemas/difficulty-levels.yaml#/components/schemas/DifficultyLevelListResponse"

    # Service Types
    ServiceType:
      $ref: "schemas/service-types.yaml#/components/schemas/ServiceType"
    CreateServiceTypeRequest:
      $ref: "schemas/service-types.yaml#/components/schemas/CreateServiceTypeRequest"
    UpdateServiceTypeRequest:
      $ref: "schemas/service-types.yaml#/components/schemas/UpdateServiceTypeRequest"
    ServiceTypeListResponse:
      $ref: "schemas/service-types.yaml#/components/schemas/ServiceTypeListResponse"

    # Price Configurations
    PriceConfiguration:
      $ref: "schemas/price-configurations.yaml#/components/schemas/PriceConfiguration"
    CreatePriceConfigurationRequest:
      $ref: "schemas/price-configurations.yaml#/components/schemas/CreatePriceConfigurationRequest"
    UpdatePriceConfigurationRequest:
      $ref: "schemas/price-configurations.yaml#/components/schemas/UpdatePriceConfigurationRequest"
    PriceConfigurationListResponse:
      $ref: "schemas/price-configurations.yaml#/components/schemas/PriceConfigurationListResponse"

    # Boosters
    Booster:
      $ref: "schemas/boosters.yaml#/components/schemas/Booster"
    CreateBoosterRequest:
      $ref: "schemas/boosters.yaml#/components/schemas/CreateBoosterRequest"
    UpdateBoosterRequest:
      $ref: "schemas/boosters.yaml#/components/schemas/UpdateBoosterRequest"
    BoosterListResponse:
      $ref: "schemas/boosters.yaml#/components/schemas/BoosterListResponse"

    # Calculator
    CalculationRequest:
      $ref: "schemas/calculator.yaml#/components/schemas/CalculationRequest"
    CalculationResult:
      $ref: "schemas/calculator.yaml#/components/schemas/CalculationResult"
    CalculationBreakdown:
      $ref: "schemas/calculator.yaml#/components/schemas/CalculationBreakdown"
