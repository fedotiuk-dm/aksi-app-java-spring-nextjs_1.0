spring:
  application:
    name: aksi-backend
  profiles:
    include: files
  main:
    allow-circular-references: true
    banner-mode: console
  output:
    ansi:
      enabled: always
      console-available: true
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: false
  session:
    store-type: none
  mail:
    host: smtp.gmail.com
    port: 587
    username: aksi.vn.ua@gmail.com
    password: ${MAIL_PASSWORD:your_password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    test-connection: false
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: public
    contexts: default
    clear-checksums: true
    # Тільки валідні Spring Boot Liquibase властивості
    drop-first: false
    parameters:
      create-uuid-extension: CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
  datasource:
    url: jdbc:postgresql://postgres:5432/aksi_cleaners_db_v5
    username: aksi_user
    password: 1911
    driver-class-name: org.postgresql.Driver
    schema: public
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          time_zone: UTC
    open-in-view: false
  web:
    cors:
      allowed-origins: "http://localhost:3000,http://127.0.0.1:3000"
      allowed-methods: "GET,POST,PUT,DELETE,OPTIONS,PATCH"
      allowed-headers: "*"
      allow-credentials: true

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
  vaadin:
    devmode:
      liveReload:
        enabled: true
      # Налаштування для запобігання проблем серіалізації
      sessionSerialization:
        enabled: false
    frontend:
      hotdeploy: true
    pnpm:
      enable: true
    npm:
      enable: false
    url-mapping: /*
    exclude-urls: /swagger-ui/**,/v3/api-docs/**,/swagger-resources/**,/webjars/**,/docs/**
    # Режим розробки
    productionMode: false
    # Увімкнення режиму розробки
    servlet:
      dev-mode: true

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false
  tomcat:
    connection-timeout: 30000 # 30 секунд
    max-http-header-size: 65536 # 64KB
    max-swallow-size: 10485760 # 10MB
    # Налаштування для dev-режиму
    basedir: ${java.io.tmpdir}/tomcat-aksi
    accesslog:
      enabled: false
  compression:
    enabled: true # Увімкнути стиснення відповідей
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 2048 # Стискати відповіді більше 2KB
  servlet:
    session:
      # Налаштування сесій для dev-режиму
      persistent: false # Вимкнути збереження сесій між перезапусками
      timeout: 30m
      store-dir: ${java.io.tmpdir}/aksi-sessions

# Налаштування JWT
jwt:
  secret: 7Jl7CMvDgZaYWEr3ZsRMRi1CJG3vjYXm0QFrDHB3z1WGMhsQ+yWgYMwzM6MqkVEM3J40TxOFsYyyvmFkh76WDQ==
  expiration: 86400000 # 24 години у мілісекундах
  refresh:
    expiration: 604800000 # 7 днів у мілісекундах

# Налаштування адміністратора за замовчуванням
admin:
  username: admin
  password: Aksi1911
  email: admin@aksi.com

# Налаштування Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    loggers:
      enabled: true
    logfile:
      enabled: true
      path: logs/aksi-app.log
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    web:
      server:
        request:
          autotime:
            enabled: true

logging:
  level:
    root: WARN
    org.springframework: WARN
    org.springframework.web: WARN
    com.aksi: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    com.aksi.config: INFO
    org.springframework.security: WARN
    org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: ERROR
    org.mapstruct: INFO
    com.vaadin: WARN
    org.atmosphere: WARN
  file:
    name: logs/aksi-app.log
  ansi:
    enabled: always
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n%wEx"

# Налаштування OpenAPI/Swagger
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    try-it-out-enabled: true
    filter: true
    display-request-duration: true
  packages-to-scan: com.aksi.api
  cache:
    disabled: true
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
