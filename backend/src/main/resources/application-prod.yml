# Production profile configuration
spring:
  # Application name
  application:
    name: AKSI-Dry-Cleaning-Backend

  # Database configuration for production
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/aksi_cleaners_db_v5}
    username: ${DB_USERNAME:aksi_user}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000 # Production leak detection

  # JPA configuration for production
  jpa:
    hibernate:
      ddl-auto: validate # Use Liquibase for schema management
    properties:
      hibernate:
        format_sql: false # Disable SQL formatting in production
        show_sql: false
        default_schema: public
        jdbc:
          lob:
            non_contextual_creation: true
        # Production optimizations
        jdbc.batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    open-in-view: false

  # Liquibase configuration for production
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: public
    enabled: true
    contexts: production
    drop-first: false
    validate-on-migrate: true

  # Redis configuration for production
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

# Logging configuration for production with structured logging
logging:
  level:
    root: WARN
    com.aksi: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    org.springframework.data: WARN
    SECURITY_AUDIT: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{correlationId}] [%X{traceId}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} [%X{correlationId}] [%X{traceId}] - %msg%n"
  file:
    name: logs/aksi-prod.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30

# Security configuration for production
app:
  cors:
    allowed-origins: ${CORS_ORIGINS:https://aksi-cleaners.com}

  # File storage configuration for production
  file-storage:
    upload-dir: ${FILE_UPLOAD_DIR:/app/uploads}
    base-url: ${FILE_BASE_URL:https://api.aksi-cleaners.com}
    api-path: ${FILE_API_PATH:/api/files}

  # Structured logging configuration for production
  logging:
    structured:
      enabled: true # Enable JSON format for production (better for log aggregation)
    include-stack-trace: false # Exclude stack traces in production for security
    correlation:
      generate-request-id: true
      include-client-ip: true
      include-user-agent: true # More context in production for troubleshooting

  security:
    # Rate limiting settings - STRICT for production
    rate-limiting:
      enabled: true
    max-attempts-per-user: 5
    max-attempts-per-ip: 10
    lockout-duration-minutes: 30 # 30 minutes lockout
    attempt-window-minutes: 60

    # Password policy settings - STRICT for production
    password:
      min-length: 12
      require-uppercase: true
      require-lowercase: true
      require-numbers: true
      require-special-chars: true
      allowed-special-chars: "@$!%*?&"

    # Session management settings - SECURE for production
    session:
      default-timeout-minutes: 30 # 30 minutes timeout
      max-concurrent-sessions: 3 # Max 3 concurrent sessions
      remember-me-timeout-days: 7 # 7 days for remember me
      session-fixation-protection: true

# Server configuration for production
server:
  port: ${SERVER_PORT:8080}
  servlet:
    session:
      cookie:
        secure: true # HTTPS only
        same-site: strict
        http-only: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Disable unnecessary endpoints in production
springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false

# Spring Actuator configuration for production monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env,configprops
      base-path: /management
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
    loggers:
      enabled: true
    env:
      enabled: true
    configprops:
      enabled: true
  health:
    # Enable custom health indicators for production monitoring
    redis:
      enabled: true
    db:
      enabled: true
    # Custom application health indicator
    application:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: production
