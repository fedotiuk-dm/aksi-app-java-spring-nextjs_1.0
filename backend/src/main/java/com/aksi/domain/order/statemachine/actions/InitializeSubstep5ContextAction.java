package com.aksi.domain.order.statemachine.actions;

import java.util.UUID;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.statemachine.StateContext;
import org.springframework.statemachine.action.Action;
import org.springframework.stereotype.Component;

import com.aksi.domain.order.statemachine.OrderEvent;
import com.aksi.domain.order.statemachine.OrderState;
import com.aksi.domain.order.statemachine.stage2.substep5.service.PhotoDocumentationCoordinationService;

/**
 * Action –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Substep5 (PhotoDocumentation) –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ–≤ –∑ sessionId –≤—ñ–¥ –≥–æ–ª–æ–≤–Ω–æ–≥–æ Order Wizard.
 * –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥—ñ –≤ —Å—Ç–∞–Ω ITEM_WIZARD_ACTIVE –¥–ª—è substep5.
 *
 * –ó–∞–±–µ–∑–ø–µ—á—É—î —â–æ sessionId –≤—ñ–¥ –≥–æ–ª–æ–≤–Ω–æ–≥–æ Order Wizard –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π
 * –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó PhotoDocumentation —Å–µ—Ä–≤—ñ—Å—É.
 *
 * –ü—Ä–∏–º—ñ—Ç–∫–∞: PhotoDocumentation –ø–æ—Ç—Ä–µ–±—É—î itemId –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó,
 * —Ç–æ–º—É —Ç—É—Ç –º–∏ —Ç—ñ–ª—å–∫–∏ –ø—ñ–¥–≥–æ—Ç–æ–≤–ª—é—î–º–æ –±–∞–∑–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç.
 */
@Component
public class InitializeSubstep5ContextAction implements Action<OrderState, OrderEvent> {

    private static final Logger logger = LoggerFactory.getLogger(InitializeSubstep5ContextAction.class);

    private final PhotoDocumentationCoordinationService photoDocumentationService;

    public InitializeSubstep5ContextAction(final PhotoDocumentationCoordinationService photoDocumentationService) {
        this.photoDocumentationService = photoDocumentationService;
    }

    @Override
    public void execute(StateContext<OrderState, OrderEvent> context) {
        logger.info("üî•üî•üî• InitializeSubstep5ContextAction.execute() –í–ò–ö–õ–ò–ö–ê–ù–û! üî•üî•üî•");

        try {
            // –û—Ç—Ä–∏–º—É—î–º–æ sessionId –∑ ExtendedState –≥–æ–ª–æ–≤–Ω–æ–≥–æ StateMachine
            String sessionId = extractSessionId(context);

            if (sessionId == null) {
                logger.error("‚ùå SessionId –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –≤ ExtendedState –≥–æ–ª–æ–≤–Ω–æ–≥–æ StateMachine!");
                return;
            }

            logger.info("üì• SessionId –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ StateMachine: {}", sessionId);

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ Substep5 —Å–µ—Ä–≤—ñ—Å
            initializeSubstep5Services(sessionId);

            logger.info("üéâ InitializeSubstep5ContextAction –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ –¥–ª—è sessionId: {}", sessionId);

        } catch (Exception e) {
            logger.error("üí• –ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ InitializeSubstep5ContextAction: {}", e.getMessage(), e);
        }
    }

    /**
     * –í–∏—Ç—è–≥—É—î sessionId –∑ ExtendedState –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
     */
    private String extractSessionId(StateContext<OrderState, OrderEvent> context) {
        String sessionId = context.getExtendedState().get("sessionId", String.class);
        UUID sessionIdUUID = context.getExtendedState().get("sessionIdUUID", UUID.class);

        logger.info("üì• SessionId –∑ –≥–æ–ª–æ–≤–Ω–æ–≥–æ StateMachine: String={}, UUID={}", sessionId, sessionIdUUID);

        if (sessionId == null && sessionIdUUID != null) {
            sessionId = sessionIdUUID.toString();
            logger.info("üîÑ Converted UUID to String: {}", sessionId);
        }

        return sessionId;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î Substep5 (PhotoDocumentation) —Å–µ—Ä–≤—ñ—Å
     */
    private void initializeSubstep5Services(String sessionId) {
        UUID sessionUUID = UUID.fromString(sessionId);

        // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ PhotoDocumentation —Å–µ—Ä–≤—ñ—Å
        logger.info("üîß –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è PhotoDocumentation –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∑ sessionId: {}", sessionId);
        try {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ–Ω—Ç–µ–∫—Å—Ç
            if (photoDocumentationService.hasContext(sessionUUID)) {
                logger.warn("‚ö†Ô∏è PhotoDocumentation –≤–∂–µ –º–∞—î –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è sessionId: {}", sessionId);
            } else {
                logger.info("‚úÖ PhotoDocumentation –≥–æ—Ç–æ–≤–∏–π –¥–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–ª—è sessionId: {}", sessionId);
                logger.info("‚ÑπÔ∏è –ü–æ–≤–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±—É–¥–µ –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É createContext(sessionId, itemId)");
            }

        } catch (Exception e) {
            logger.error("üí• –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó PhotoDocumentation –∫–æ–Ω—Ç–µ–∫—Å—Ç—É: {}", e.getMessage(), e);
        }
    }
}
