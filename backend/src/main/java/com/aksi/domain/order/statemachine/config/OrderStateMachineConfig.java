package com.aksi.domain.order.statemachine.config;

import com.aksi.domain.order.statemachine.OrderEvent;
import com.aksi.domain.order.statemachine.OrderState;
import com.aksi.domain.order.statemachine.stage1.actions.InitializeOrderAction;
import com.aksi.domain.order.statemachine.stage1.actions.SaveClientDataAction;
import com.aksi.domain.order.statemachine.stage1.actions.SaveOrderBasicInfoAction;
import com.aksi.domain.order.statemachine.stage1.guards.ClientValidGuard;
import com.aksi.domain.order.statemachine.stage1.guards.OrderBasicInfoValidGuard;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.statemachine.config.EnableStateMachineFactory;
import org.springframework.statemachine.config.StateMachineConfigurerAdapter;
import org.springframework.statemachine.config.builders.StateMachineConfigurationConfigurer;
import org.springframework.statemachine.config.builders.StateMachineStateConfigurer;
import org.springframework.statemachine.config.builders.StateMachineTransitionConfigurer;
import org.springframework.statemachine.listener.StateMachineListener;
import org.springframework.statemachine.listener.StateMachineListenerAdapter;
import org.springframework.statemachine.state.State;

/**
 * –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Spring State Machine –¥–ª—è Order Wizard
 *
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î in-memory State Machine –∑ –≤–ª–∞—Å–Ω–æ—é –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ü—ñ—î—é —á–µ—Ä–µ–∑ OrderWizardSessionEntity
 * –¶–µ —É–Ω–∏–∫–∞—î –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤ –∑ –æ—Å–Ω–æ–≤–Ω–æ—é JPA –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é
 */
@Configuration
@EnableStateMachineFactory
@RequiredArgsConstructor
@Slf4j
public class OrderStateMachineConfig extends StateMachineConfigurerAdapter<OrderState, OrderEvent> {

    private final InitializeOrderAction initializeOrderAction;
    private final SaveClientDataAction saveClientDataAction;
    private final SaveOrderBasicInfoAction saveOrderBasicInfoAction;
    private final ClientValidGuard clientValidGuard;
    private final OrderBasicInfoValidGuard orderBasicInfoValidGuard;

    @Override
    public void configure(StateMachineConfigurationConfigurer<OrderState, OrderEvent> config)
            throws Exception {
        config
            .withConfiguration()
                .autoStartup(false) // –ù–µ –∑–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
                .listener(globalStateMachineListener());
    }

    @Override
    public void configure(StateMachineStateConfigurer<OrderState, OrderEvent> states)
            throws Exception {
        states
            .withStates()
                // –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
                .initial(OrderState.INITIAL)

                // === –ï–¢–ê–ü 1: –ö–ª—ñ—î–Ω—Ç —Ç–∞ –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è ===
                .state(OrderState.CLIENT_SELECTION)
                .state(OrderState.ORDER_INITIALIZATION)

                // === –ï–¢–ê–ü 2: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ (—Ç–∏–º—á–∞—Å–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É) ===
                .state(OrderState.ITEM_MANAGEMENT)

                // –§—ñ–Ω–∞–ª—å–Ω—ñ —Å—Ç–∞–Ω–∏
                .state(OrderState.COMPLETED)
                .state(OrderState.CANCELLED);
    }

    @Override
    public void configure(StateMachineTransitionConfigurer<OrderState, OrderEvent> transitions)
            throws Exception {
        transitions
            // === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ===
            .withExternal()
                .source(OrderState.INITIAL)
                .target(OrderState.CLIENT_SELECTION)
                .event(OrderEvent.START_ORDER)
                .action(initializeOrderAction)

            // === –ï–¢–ê–ü 1.1: –†–æ–±–æ—Ç–∞ –∑ –∫–ª—ñ—î–Ω—Ç–æ–º ===
            .and()
            .withExternal()
                .source(OrderState.CLIENT_SELECTION)
                .target(OrderState.ORDER_INITIALIZATION)
                .event(OrderEvent.CLIENT_SELECTED)
                .action(saveClientDataAction)
                .guard(clientValidGuard)

            // === –ï–¢–ê–ü 1.2: –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ===
            .and()
            .withExternal()
                .source(OrderState.ORDER_INITIALIZATION)
                .target(OrderState.ITEM_MANAGEMENT)
                .event(OrderEvent.ORDER_INFO_COMPLETED)
                .action(saveOrderBasicInfoAction)
                .guard(orderBasicInfoValidGuard)

            // === –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –Ω–∞ –±—É–¥—å-—è–∫–æ–º—É –µ—Ç–∞–ø—ñ ===
            .and()
            .withExternal()
                .source(OrderState.CLIENT_SELECTION)
                .target(OrderState.CANCELLED)
                .event(OrderEvent.CANCEL_ORDER)

            .and()
            .withExternal()
                .source(OrderState.ORDER_INITIALIZATION)
                .target(OrderState.CANCELLED)
                .event(OrderEvent.CANCEL_ORDER)

                            .and()
            .withExternal()
                .source(OrderState.ITEM_MANAGEMENT)
                .target(OrderState.CANCELLED)
                .event(OrderEvent.CANCEL_ORDER);
    }

    /**
     * –°—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è listener —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ–±–ª–µ–º –∑ BeanPostProcessor.
     * –°—Ç–∞—Ç–∏—á–Ω—ñ @Bean –º–µ—Ç–æ–¥–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è —Ä–∞–Ω—ñ—à–µ –≤ lifecycle –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.
     */
    @Bean
    public static StateMachineListener<OrderState, OrderEvent> globalStateMachineListener() {
        return new StateMachineListenerAdapter<OrderState, OrderEvent>() {
            private static final org.slf4j.Logger log =
                org.slf4j.LoggerFactory.getLogger(OrderStateMachineConfig.class);

            @Override
            public void stateChanged(State<OrderState, OrderEvent> from, State<OrderState, OrderEvent> to) {
                if (from != null) {
                    log.info("üîÑ Order State Machine –ø–µ—Ä–µ—Ö—ñ–¥: {} -> {}", from.getId(), to.getId());
                } else {
                    log.info("üöÄ Order State Machine —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: -> {}", to.getId());
                }
            }

            @Override
            public void eventNotAccepted(org.springframework.messaging.Message<OrderEvent> event) {
                log.warn("‚ùå Order Event –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ: {}", event.getPayload());
            }

            @Override
            public void stateMachineStarted(org.springframework.statemachine.StateMachine<OrderState, OrderEvent> stateMachine) {
                log.info("‚ñ∂Ô∏è Order State Machine –∑–∞–ø—É—â–µ–Ω–æ");
            }

            @Override
            public void stateMachineStopped(org.springframework.statemachine.StateMachine<OrderState, OrderEvent> stateMachine) {
                log.info("‚èπÔ∏è Order State Machine –∑—É–ø–∏–Ω–µ–Ω–æ");
            }

            @Override
            public void stateMachineError(org.springframework.statemachine.StateMachine<OrderState, OrderEvent> stateMachine, Exception exception) {
                log.error("üí• Order State Machine –ø–æ–º–∏–ª–∫–∞: {}", exception.getMessage(), exception);
            }
        };
    }


}
