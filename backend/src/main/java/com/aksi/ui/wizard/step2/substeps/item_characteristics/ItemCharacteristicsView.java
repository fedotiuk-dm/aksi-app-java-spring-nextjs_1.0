package com.aksi.ui.wizard.step2.substeps.item_characteristics;

import java.util.function.Consumer;

import com.aksi.domain.order.dto.OrderItemDTO;
import com.aksi.domain.order.service.ItemCharacteristicsService;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.application.CharacteristicsManagementService;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.components.ColorSelectionComponent;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.components.FillerSelectionComponent;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.components.MaterialSelectionComponent;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.components.WearDegreeSelectionComponent;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.domain.ItemCharacteristicsState;
import com.aksi.ui.wizard.step2.substeps.item_characteristics.events.CharacteristicsEvents;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.html.H3;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.notification.NotificationVariant;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;

import lombok.extern.slf4j.Slf4j;

/**
 * –ü—ñ–¥–µ—Ç–∞–ø 2.2: –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ (—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∑–∞ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏ DDD + SOLID).
 * –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤.
 */
@Slf4j
public class ItemCharacteristicsView extends VerticalLayout {

    // –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (DI)
    private final CharacteristicsManagementService characteristicsService;
    private final Consumer<OrderItemDTO> onNext;
    private final Consumer<OrderItemDTO> onPrevious;
    private final Runnable onCancel;

    // UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ (FSD outside)
    private MaterialSelectionComponent materialSelection;
    private ColorSelectionComponent colorSelection;
    private FillerSelectionComponent fillerSelection;
    private WearDegreeSelectionComponent wearDegreeSelection;

    private Button previousButton;
    private Button nextButton;
    private Button cancelButton;

    // Domain state (DDD inside)
    private ItemCharacteristicsState currentState;
    private OrderItemDTO currentItem;

    // –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ —Ä–µ–∫—É—Ä—Å—ñ—ó
    private boolean isInitializing = false;

    public ItemCharacteristicsView(
            ItemCharacteristicsService infrastructureService,
            Consumer<OrderItemDTO> onNext,
            Consumer<OrderItemDTO> onPrevious,
            Runnable onCancel,
            OrderItemDTO existingItem) {

        log.info("üöÄ –ü–û–ß–ê–¢–û–ö –°–¢–í–û–†–ï–ù–ù–Ø ItemCharacteristicsView");
        log.info("üîç –ü–ê–†–ê–ú–ï–¢–†–ò: infrastructureService={}, existingItem={}",
            infrastructureService != null ? "not null" : "null",
            existingItem != null ? existingItem.toString() : "null");

        this.characteristicsService = new CharacteristicsManagementService(infrastructureService);
        this.onNext = onNext;
        this.onPrevious = onPrevious;
        this.onCancel = onCancel;
        this.currentItem = existingItem != null ? existingItem : OrderItemDTO.builder().build();

        log.info("üìã –°–¢–í–û–†–ï–ù–û –°–ï–†–í–Ü–°–ò: characteristicsService={}, currentItem={}",
            characteristicsService != null ? "not null" : "null",
            currentItem != null ? currentItem.toString() : "null");

        try {
            initializeComponents();
            log.info("‚úÖ –ö–û–ú–ü–û–ù–ï–ù–¢–ò –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–û");

            setupEventHandlers();
            log.info("‚úÖ –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô –ù–ê–õ–ê–®–¢–û–í–ê–ù–û");

            initializeData();
            log.info("‚úÖ –î–ê–ù–Ü –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–û");

        } catch (Exception ex) {
            log.error("‚ùå –ü–û–ú–ò–õ–ö–ê –ü–†–ò –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á: {}", ex.getMessage(), ex);
            throw ex;
        }

        log.info("üéâ ItemCharacteristicsView –ü–û–í–ù–Ü–°–¢–Æ –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–û –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", currentItem.getName());
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É.
     */
    private void initializeComponents() {
        setSizeFull();
        setPadding(true);
        setSpacing(true);
        setDefaultHorizontalComponentAlignment(Alignment.STRETCH);

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
        createHeaderSection();
        createFormComponents();
        createButtonsSection();
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î —Å–µ–∫—Ü—ñ—é –∑–∞–≥–æ–ª–æ–≤–∫—É.
     */
    private void createHeaderSection() {
        H3 title = new H3("–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞");
        title.getStyle().set("margin-top", "0").set("margin-bottom", "var(--lumo-space-l)");
        add(title);
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —Ñ–æ—Ä–º–∏.
     */
    private void createFormComponents() {
        FormLayout formLayout = new FormLayout();
        formLayout.setResponsiveSteps(
            new FormLayout.ResponsiveStep("0", 1),
            new FormLayout.ResponsiveStep("768px", 2)
        );

        // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥—É–ª—å–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
        materialSelection = new MaterialSelectionComponent();
        colorSelection = new ColorSelectionComponent();
        fillerSelection = new FillerSelectionComponent();
        wearDegreeSelection = new WearDegreeSelectionComponent();

        // –î–æ–¥–∞—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–æ —Ñ–æ—Ä–º–∏
        formLayout.add(materialSelection, colorSelection);
        formLayout.add(fillerSelection, wearDegreeSelection);

        add(formLayout);
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î —Å–µ–∫—Ü—ñ—é –∫–Ω–æ–ø–æ–∫.
     */
    private void createButtonsSection() {
        HorizontalLayout buttonsLayout = new HorizontalLayout();
        buttonsLayout.setJustifyContentMode(JustifyContentMode.BETWEEN);
        buttonsLayout.setWidthFull();

        // –õ—ñ–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ - –°–∫–∞—Å—É–≤–∞—Ç–∏
        cancelButton = new Button("–°–∫–∞—Å—É–≤–∞—Ç–∏");
        cancelButton.addClickListener(e -> handleCancel());

        // –ü—Ä–∞–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ - –ù–∞–∑–∞–¥ —Ç–∞ –î–∞–ª—ñ
        previousButton = new Button("–ù–∞–∑–∞–¥");
        previousButton.addClickListener(e -> handlePrevious());

        nextButton = new Button("–î–∞–ª—ñ –¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤");
        nextButton.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        nextButton.addClickListener(e -> handleNext());
        // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –∫–Ω–æ–ø–∫–∞ –º–∞—î –±—É—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ —Å–ø–æ—á–∞—Ç–∫—É, –¥–æ–∫–∏ –Ω–µ –≤–∏–±—Ä–∞–Ω–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        nextButton.setEnabled(false);

        HorizontalLayout rightButtons = new HorizontalLayout(previousButton, nextButton);
        rightButtons.setSpacing(true);

        buttonsLayout.add(cancelButton, rightButtons);
        add(buttonsLayout);
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π.
     */
    private void setupEventHandlers() {
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π –¥–ª—è application service
        characteristicsService.setEventHandler(this::handleCharacteristicsEvent);

        // –û–±—Ä–æ–±–Ω–∏–∫–∏ –∑–º—ñ–Ω –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
        materialSelection.setOnMaterialChanged(this::handleMaterialChange);
        colorSelection.setOnColorChanged(this::handleColorChange);
        fillerSelection.setOnFillerChanged(this::handleFillerChange);
        wearDegreeSelection.setOnWearDegreeChanged(this::handleWearDegreeChange);
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –¥–∞–Ω—ñ.
     */
    private void initializeData() {
        try {
            log.info("üîÑ –ü–û–ß–ê–¢–û–ö –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á –î–ê–ù–ò–•");
            isInitializing = true; // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ–ª–∞–≥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó

            log.info("üîç –í–ò–ö–õ–ò–ö–ê–Ñ–ú–û characteristicsService.initializeCharacteristics –∑ item: {}",
                currentItem != null ? currentItem.toString() : "null");

            // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å—Ç–∞–Ω —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
            currentState = characteristicsService.initializeCharacteristics(currentItem);
            log.info("‚úÖ –°–¢–ê–ù –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–û–í–ê–ù–û: {}", currentState != null ? "not null" : "null");

            // –Ø–∫—â–æ –ø—Ä–µ–¥–º–µ—Ç —É–∂–µ –º–∞—î —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ó—Ö
            if (hasExistingCharacteristics()) {
                log.info("üîÑ –ó–ê–í–ê–ù–¢–ê–ñ–£–Ñ–ú–û –Ü–°–ù–£–Æ–ß–Ü –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò");
                currentState = characteristicsService.loadExistingCharacteristics(currentItem, currentState);
                updateComponentsFromState();
                log.info("‚úÖ –Ü–°–ù–£–Æ–ß–Ü –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–û");
            } else {
                log.info("‚ÑπÔ∏è –Ü–°–ù–£–Æ–ß–ò–• –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö –ù–ï–ú–ê–Ñ");
            }

        } catch (Exception ex) {
            log.error("‚ùå –ü–û–ú–ò–õ–ö–ê –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–á –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö: {}", ex.getMessage(), ex);
            showErrorNotification("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫");
        } finally {
            isInitializing = false; // –ó–∞–≤–∂–¥–∏ —Å–∫–∏–¥–∞—î–º–æ —Ñ–ª–∞–≥
            log.info("‚úÖ –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –î–ê–ù–ò–• –ó–ê–í–ï–†–®–ï–ù–ê, isInitializing={}", isInitializing);

            // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –Ω–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫
            updateNavigationButtons();
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –ø–æ–¥—ñ—ó –∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫.
     */
    private void handleCharacteristicsEvent(CharacteristicsEvents event) {
        try {
            log.debug("üîÑ –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–¥—ñ—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {}", event.getClass().getSimpleName());

            // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –¥–æ–∑–≤–æ–ª—è—î–º–æ CharacteristicsLoaded –Ω–∞–≤—ñ—Ç—å –ø—ñ–¥ —á–∞—Å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
            if (isInitializing && !(event instanceof CharacteristicsEvents.CharacteristicsLoaded)) {
                log.debug("üîÑ –ü–†–û–ü–£–°–ö –æ–±—Ä–æ–±–∫–∏ –ø–æ–¥—ñ—ó {} - –π–¥–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è", event.getClass().getSimpleName());
                return;
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É –ø–æ–¥—ñ—ó
            switch (event) {
                case CharacteristicsEvents.CharacteristicsLoaded loaded -> {
                    log.debug("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–ø—Ü—ñ–π –≤ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ");
                    handleCharacteristicsLoaded(loaded);
                    if (!isInitializing) {
                        updateCharacteristics();
                    }
                }
                case CharacteristicsEvents.CharacteristicsStateUpdated updated -> {
                    log.debug("üîÑ –°—Ç–∞–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ");
                    handleStateUpdated(updated);
                }
                case CharacteristicsEvents.CharacteristicsChanged changed -> {
                    log.debug("üîÑ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–º—ñ–Ω–µ–Ω–æ");
                    // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ù–ï –æ–Ω–æ–≤–ª—é—î–º–æ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—é —Ç—É—Ç, –±–æ currentState —â–µ —Å—Ç–∞—Ä–∏–π
                    // –û—Å–Ω–æ–≤–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –±—É–¥–µ –≤ CharacteristicsStateUpdated –∑ –Ω–æ–≤–∏–º —Å—Ç–∞–Ω–æ–º
                }
                case CharacteristicsEvents.CharacteristicsFailed failed -> {
                    log.debug("üîÑ –ü–æ–º–∏–ª–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫");
                    handleCharacteristicsFailed(failed);
                }
                case CharacteristicsEvents.SectionVisibilityChanged visibility -> {
                    log.debug("üîÑ –ó–º—ñ–Ω–∞ –≤–∏–¥–∏–º–æ—Å—Ç—ñ");
                    handleVisibilityChanged(visibility);
                }
                case CharacteristicsEvents.CharacteristicsValidationCompleted validation -> {
                    log.debug("üîÑ –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
                    handleValidationCompleted(validation);
                }
                default -> {
                    log.debug("–ù–µ–æ–±—Ä–æ–±–ª–µ–Ω–∞ –ø–æ–¥—ñ—è: {}", event.getClass().getSimpleName());
                }
            }

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–¥—ñ—ó —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {}", ex.getMessage(), ex);
            showErrorNotification("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: " + ex.getMessage());
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫.
     */
    private void handleCharacteristicsLoaded(CharacteristicsEvents.CharacteristicsLoaded loaded) {
        log.info("üîÑ –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –î–ê–ù–ò–• –í UI: {} –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤, {} –∫–æ–ª—å–æ—Ä—ñ–≤, {} –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á—ñ–≤, {} —Å—Ç—É–ø–µ–Ω—ñ–≤ –∑–Ω–æ—Å—É",
            loaded.materials().size(), loaded.colors().size(),
            loaded.fillerTypes().size(), loaded.wearDegrees().size());

        // –ü–µ—Ä–µ–¥–∞—î–º–æ –¥–∞–Ω—ñ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
        if (materialSelection != null) {
            materialSelection.loadMaterials(loaded.materials());
        }

        if (colorSelection != null) {
            colorSelection.loadColors(loaded.colors());
        }

        if (fillerSelection != null) {
            fillerSelection.loadFillerTypes(loaded.fillerTypes());
        }

        if (wearDegreeSelection != null) {
            wearDegreeSelection.loadWearDegrees(loaded.wearDegrees());
        }

        log.info("‚úÖ –î–ê–ù–Ü –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–û –í UI –ö–û–ú–ü–û–ù–ï–ù–¢–ò");
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É.
     */
    private void handleStateUpdated(CharacteristicsEvents.CharacteristicsStateUpdated updated) {
        currentState = updated.characteristicsState();
        log.debug("üîÑ –°—Ç–∞–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ: {} –º–∞—Ç–µ—Ä—ñ–∞–ª, {} –∫–æ–ª—ñ—Ä",
            currentState.getMaterial(), currentState.getColor());

        // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –∑–∞–≤–∂–¥–∏ –æ–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
        updateNavigationButtons();
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –ø–æ–º–∏–ª–∫–∏.
     */
    private void handleCharacteristicsFailed(CharacteristicsEvents.CharacteristicsFailed failed) {
        log.error("–ü–æ–º–∏–ª–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {}", failed.errorMessage(), failed.cause());
        showErrorNotification(failed.errorMessage());
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω–∏ –≤–∏–¥–∏–º–æ—Å—Ç—ñ —Å–µ–∫—Ü—ñ–π.
     */
    private void handleVisibilityChanged(CharacteristicsEvents.SectionVisibilityChanged visibility) {
        fillerSelection.setVisible(visibility.fillerSectionVisible());

        if (visibility.fillerSectionVisible()) {
            fillerSelection.setRequired(isFillerRequiredForCategory());
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó.
     */
    private void handleValidationCompleted(CharacteristicsEvents.CharacteristicsValidationCompleted validation) {
        updateComponentsValidation(validation.isValid(), validation.validationErrors());
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω—É –º–∞—Ç–µ—Ä—ñ–∞–ª—É.
     */
    private void handleMaterialChange(String material) {
        updateCharacteristics();
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω—É –∫–æ–ª—å–æ—Ä—É.
     */
    private void handleColorChange(String color, String customColor) {
        updateCharacteristics();
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω—É –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á–∞.
     */
    private void handleFillerChange(FillerSelectionComponent.FillerSelection fillerSelection) {
        updateCharacteristics();
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–º—ñ–Ω—É —Å—Ç—É–ø–µ–Ω—è –∑–Ω–æ—Å—É.
     */
    private void handleWearDegreeChange(String wearDegree) {
        updateCharacteristics();
    }

    /**
     * –û–Ω–æ–≤–ª—é—î —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—ñ—Å–ª—è –∑–º—ñ–Ω –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.
     */
    private void updateCharacteristics() {
        try {
            // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ —Ä–µ–∫—É—Ä—Å—ñ—ó
            if (isInitializing) {
                log.debug("üîÑ –ü–†–û–ü–£–°–ö updateCharacteristics - –π–¥–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è");
                return;
            }

            // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ null currentState
            if (currentState == null) {
                log.warn("‚ö†Ô∏è –ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø: currentState is null, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è");
                return;
            }

            var fillerData = fillerSelection.getFillerSelection();

            currentState = characteristicsService.updateCharacteristics(
                currentState,
                materialSelection.getSelectedMaterial(),
                colorSelection.getSelectedColor(),
                colorSelection.getCustomColor(),
                fillerData.getFillerType(),
                fillerData.getCustomFillerType(),
                fillerData.getFillerCompressed(),
                wearDegreeSelection.getSelectedWearDegree()
            );

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: {}", ex.getMessage(), ex);
            showErrorNotification("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: " + ex.getMessage());
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è.
     */
    private void handleCancel() {
        onCancel.run();
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –µ—Ç–∞–ø—É.
     */
    private void handlePrevious() {
        try {
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –≤–∞–ª—ñ–¥–Ω–æ—Å—Ç—ñ
            applyCharacteristicsToItem();
            onPrevious.accept(currentItem);

            log.info("–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –µ—Ç–∞–ø—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", currentItem.getName());

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞–∑–∞–¥: {}", ex.getMessage(), ex);
            // –ü—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –Ω–∞–∑–∞–¥ –∑–∞–≤–∂–¥–∏ –¥–æ–∑–≤–æ–ª—è—î–º–æ –ø–µ—Ä–µ—Ö—ñ–¥
            onPrevious.accept(currentItem);
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –ø–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É.
     */
    private void handleNext() {
        try {
            log.info("üîÑ –ü–û–ß–ê–¢–û–ö –ü–ï–†–ï–•–û–î–£ –î–û –ù–ê–°–¢–£–ü–ù–û–ì–û –ï–¢–ê–ü–£");

            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
            if (currentState == null) {
                log.error("‚ùå currentState is NULL!");
                showErrorNotification("–ü–æ–º–∏–ª–∫–∞: —Å—Ç–∞–Ω —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
                return;
            }

            // –í–∞–ª—ñ–¥—É—î–º–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            log.debug("üîç –í–ê–õ–Ü–î–ê–¶–Ü–Ø —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫...");
            currentState = characteristicsService.validateCharacteristics(currentState);

            if (!currentState.isValid()) {
                log.warn("‚ö†Ô∏è –í–ê–õ–Ü–î–ê–¶–Ü–Ø –ù–ï –ü–†–û–ô–®–õ–ê: {}", currentState.getValidationErrors());
                showValidationErrors(currentState.getValidationErrors());
                return;
            }

            // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
            log.debug("üîÑ –ó–ê–°–¢–û–°–£–í–ê–ù–ù–Ø —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –¥–æ –ø—Ä–µ–¥–º–µ—Ç–∞...");
            applyCharacteristicsToItem();

            log.info("‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è: {} (–º–∞—Ç–µ—Ä—ñ–∞–ª: {}, –∫–æ–ª—ñ—Ä: {})",
                    currentItem.getName(), currentItem.getMaterial(), currentItem.getColor());

            onNext.accept(currentItem);

        } catch (Exception ex) {
            log.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –∞–±–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {}", ex.getMessage(), ex);
            showErrorNotification("–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫: " + ex.getMessage());
        }
    }

    /**
     * –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –ø–æ—Ç–æ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    private void applyCharacteristicsToItem() {
        characteristicsService.applyCharacteristicsToItem(currentItem, currentState);
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É.
     */
    private void updateComponentsFromState() {
        materialSelection.setSelectedMaterial(currentState.getMaterial());
        colorSelection.setSelectedColor(currentState.getColor(), currentState.getCustomColor());
        fillerSelection.setSelectedFiller(
            currentState.getFillerType(),
            currentState.getCustomFillerType(),
            currentState.getFillerCompressed()
        );
        wearDegreeSelection.setSelectedWearDegree(currentState.getWearDegree());
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –≤–∞–ª—ñ–¥–∞—Ü—ñ—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤.
     */
    private void updateComponentsValidation(boolean isValid, java.util.List<String> errors) {
        // –°–∫–∏–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø–æ–º–∏–ª–∫–∏
        materialSelection.setInvalid(false);
        colorSelection.setInvalid(false);
        fillerSelection.setInvalid(false);

        if (!isValid) {
            for (String error : errors) {
                if (error.contains("–ú–∞—Ç–µ—Ä—ñ–∞–ª")) {
                    materialSelection.setInvalid(true);
                } else if (error.contains("–∫–æ–ª—ñ—Ä")) {
                    colorSelection.setInvalid(true);
                } else if (error.contains("–Ω–∞–ø–æ–≤–Ω—é–≤–∞—á")) {
                    fillerSelection.setInvalid(true);
                }
            }
        }
    }

    /**
     * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.
     */
    private void updateNavigationButtons() {
        boolean hasValidData = currentState != null && currentState.hasRequiredFields();

        log.debug("üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó: currentState={}, hasRequiredFields={}, –º–∞—Ç–µ—Ä—ñ–∞–ª={}, –∫–æ–ª—ñ—Ä={}",
            currentState != null ? "not null" : "null",
            currentState != null ? currentState.hasRequiredFields() : "N/A",
            currentState != null ? currentState.getMaterial() : "null",
            currentState != null ? currentState.getColor() : "null");

        log.debug("üîÑ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ nextButton.enabled = {}", hasValidData);
        nextButton.setEnabled(hasValidData);
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î —ñ—Å–Ω—É—é—á—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏.
     */
    private boolean hasExistingCharacteristics() {
        return currentItem.getMaterial() != null || currentItem.getColor() != null;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó.
     */
    private boolean isFillerRequiredForCategory() {
        String category = currentItem.getCategory();
        if (category == null) return false;

        String lowerCategory = category.toLowerCase();
        return lowerCategory.contains("–¥—É–±–ª—è–Ω–∫–∏") || lowerCategory.contains("–∫—É—Ä—Ç–∫–∞");
    }

    /**
     * –ü–æ–∫–∞–∑—É—î –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó.
     */
    private void showValidationErrors(java.util.List<String> errors) {
        String message = "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–ø—Ä–∞–≤—Ç–µ –ø–æ–º–∏–ª–∫–∏:\n" + String.join("\n", errors);
        Notification.show(message, 5000, Notification.Position.TOP_CENTER)
                .addThemeVariants(NotificationVariant.LUMO_ERROR);
    }

    /**
     * –ü–æ–∫–∞–∑—É—î –ø–æ–º–∏–ª–∫—É.
     */
    private void showErrorNotification(String message) {
        Notification.show(message, 3000, Notification.Position.TOP_CENTER)
                .addThemeVariants(NotificationVariant.LUMO_ERROR);
    }
}
