package com.aksi.ui.wizard.step2;

import com.aksi.domain.order.dto.OrderItemDTO;
import com.aksi.domain.order.service.ItemCharacteristicsService;
import com.aksi.domain.order.service.order.OrderItemManagementService;
import com.aksi.domain.pricing.service.CatalogPriceModifierService;
import com.aksi.domain.pricing.service.PriceCalculationService;
import com.aksi.domain.pricing.service.PriceListService;
import com.aksi.domain.pricing.service.ServiceCategoryService;
import com.aksi.ui.wizard.dto.OrderWizardData;
import com.aksi.ui.wizard.step2.substeps.ItemSubWizardView;
import com.aksi.ui.wizard.step2.substeps.main_manager.ItemsMainManagerView;
import com.vaadin.flow.component.Component;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;

import lombok.extern.slf4j.Slf4j;

/**
 * UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –µ—Ç–∞–ø—É Order Wizard.
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (—Ü–∏–∫–ª—ñ—á–Ω–∏–π –ø—Ä–æ—Ü–µ—Å).
 */
@Slf4j
public class ItemsManagerView extends VerticalLayout {

    private final ServiceCategoryService serviceCategoryService;
    private final PriceListService priceListService;
    private final ItemCharacteristicsService characteristicsService;
    private final CatalogPriceModifierService catalogPriceModifierService;
    private final PriceCalculationService priceCalculationService;
    private final OrderItemManagementService orderItemManagementService;
    private final OrderWizardData wizardData;
    private final Runnable onStepComplete;
    private final Runnable onStepBack;

    // UI —Å—Ç–∞–Ω
    private Component currentView;
    private boolean isInSubWizard = false;

    public ItemsManagerView(
            ServiceCategoryService serviceCategoryService,
            PriceListService priceListService,
            ItemCharacteristicsService characteristicsService,
            CatalogPriceModifierService catalogPriceModifierService,
            PriceCalculationService priceCalculationService,
            OrderItemManagementService orderItemManagementService,
            OrderWizardData wizardData,
            Runnable onStepComplete,
            Runnable onStepBack) {

        this.serviceCategoryService = serviceCategoryService;
        this.priceListService = priceListService;
        this.characteristicsService = characteristicsService;
        this.catalogPriceModifierService = catalogPriceModifierService;
        this.priceCalculationService = priceCalculationService;
        this.orderItemManagementService = orderItemManagementService;
        this.wizardData = wizardData;
        this.onStepComplete = onStepComplete;
        this.onStepBack = onStepBack;

        log.info("üîç –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ItemsManagerView:");
        log.info("   - onStepComplete callback: {}", onStepComplete != null ? "–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" : "NULL");
        log.info("   - onStepBack callback: {}", onStepBack != null ? "–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" : "NULL");

        initializeLayout();
        showMainManager();

        log.info("ItemsManagerView —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –∑ {} –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏",
                wizardData.getItems().size());
    }

    private void initializeLayout() {
        setSizeFull();
        setPadding(false);
        setMargin(false);
        setSpacing(false);
    }

    private void showMainManager() {
        try {
            removeAll();
            isInSubWizard = false;

            log.info("üîç –°–¢–í–û–†–ï–ù–ù–Ø ItemsMainManagerView:");
            log.info("   - –ø–µ—Ä–µ–¥–∞—î–º–æ onStepComplete: {}", onStepComplete != null ? "–≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" : "NULL");

            currentView = new ItemsMainManagerView(
                    orderItemManagementService,
                    wizardData,
                    this::onAddItem,
                    this::onEditItem,
                    onStepComplete
            );

            add(currentView);

            log.debug("–ü–æ–∫–∞–∑–∞–Ω–æ –≥–æ–ª–æ–≤–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤");

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {}", ex.getMessage(), ex);
        }
    }

    private void showSubWizard(OrderItemDTO existingItem) {
        try {
            removeAll();
            isInSubWizard = true;

            currentView = new ItemSubWizardView(
                    serviceCategoryService,
                    priceListService,
                    characteristicsService,
                    catalogPriceModifierService,
                    priceCalculationService,
                    this::onItemCompleted,
                    this::onSubWizardCancel,
                    existingItem
            );

            add(currentView);

            log.debug("–ü–æ–∫–∞–∑–∞–Ω–æ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ –¥–ª—è {}",
                    existingItem != null ? "—Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è" : "—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞");

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—ñ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥—É: {}", ex.getMessage(), ex);
            showMainManager(); // Fallback
        }
    }

    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞

    private void onAddItem(OrderItemDTO ignored) {
        log.info("–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞");
        showSubWizard(null);
    }

    private void onEditItem(OrderItemDTO item) {
        log.info("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", item.getName());
        showSubWizard(item);
    }

    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥—É

    private void onItemCompleted(OrderItemDTO item) {
        try {
            log.info("–ó–∞–≤–µ—Ä—à–µ–Ω–æ —Ä–æ–±–æ—Ç—É –∑ –ø—Ä–µ–¥–º–µ—Ç–æ–º: {}", item.getName());

            // –í–ê–ñ–õ–ò–í–û: –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø—Ä–µ–¥–º–µ—Ç –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –æ–¥—Ä–∞–∑—É, —è–∫—â–æ —î ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            if (wizardData.getDraftOrder().getId() != null) {
                if (item.getId() == null) {
                    // –ù–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç - –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –ë–î
                    OrderItemDTO savedItem = orderItemManagementService.addOrderItem(
                            wizardData.getDraftOrder().getId(),
                            item
                    );
                    // –î–æ–¥–∞—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç –∑ ID –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
                    wizardData.getItems().add(savedItem);
                    log.info("‚úÖ –ù–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ë–î –∑ ID: {}", savedItem.getId());
                } else {
                    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –ë–î
                    OrderItemDTO updatedItem = orderItemManagementService.updateOrderItem(
                            wizardData.getDraftOrder().getId(),
                            item.getId(),
                            item
                    );
                    // –û–Ω–æ–≤–ª—é—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–ø–∏—Å–∫—É
                    wizardData.getItems().removeIf(existingItem ->
                            existingItem.getId() != null && existingItem.getId().equals(item.getId()));
                    wizardData.getItems().add(updatedItem);
                    log.info("‚úÖ –ü—Ä–µ–¥–º–µ—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ –ë–î: {}", updatedItem.getName());
                }
            } else {
                // –Ø–∫—â–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–µ –≤ –ë–î, –¥–æ–¥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ
                if (item.getId() == null) {
                    wizardData.getItems().add(item);
                    log.debug("–ù–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ–¥–∞–Ω–æ –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É: {}", item.getName());
                } else {
                    wizardData.getItems().removeIf(existingItem ->
                            existingItem.getId() != null && existingItem.getId().equals(item.getId()));
                    wizardData.getItems().add(item);
                    log.debug("–ü—Ä–µ–¥–º–µ—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–ø–∏—Å–∫—É: {}", item.getName());
                }
            }

            // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            showMainManager();

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –ø—Ä–µ–¥–º–µ—Ç–∞ {}: {}", item.getName(), ex.getMessage(), ex);

            // –ü–æ–∫–∞–∑—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–º–∏–ª–∫—É
            com.vaadin.flow.component.notification.Notification.show(
                "–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: " + ex.getMessage(),
                5000,
                com.vaadin.flow.component.notification.Notification.Position.MIDDLE
            );
        }
    }

    private void onSubWizardCancel() {
        log.info("–°–∫–∞—Å–æ–≤–∞–Ω–æ —Ä–æ–±–æ—Ç—É –∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–æ–º");
        showMainManager();
    }

    // –ü—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏

    /**
     * –û–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≤ –ø–æ—Ç–æ—á–Ω–æ–º—É view.
     */
    public void refresh() {
        if (!isInSubWizard && currentView instanceof ItemsMainManagerView mainManager) {
            mainManager.refreshView();
        }
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ –∑–Ω–∞—Ö–æ–¥–∏–º–æ—Å—è –≤ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥—ñ.
     *
     * @return true —è–∫—â–æ –≤ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥—ñ
     */
    public boolean isInSubWizard() {
        return isInSubWizard;
    }
}
