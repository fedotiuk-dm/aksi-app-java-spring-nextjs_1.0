package com.aksi.ui.wizard.step1;

import java.util.function.Consumer;

import org.springframework.stereotype.Component;

import com.aksi.domain.client.dto.ClientPageResponse;
import com.aksi.domain.client.dto.ClientResponse;
import com.aksi.domain.client.dto.ClientSearchRequest;
import com.aksi.domain.client.service.ClientService;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.grid.Grid;
import com.vaadin.flow.component.grid.GridVariant;
import com.vaadin.flow.component.html.Div;
import com.vaadin.flow.component.html.H3;
import com.vaadin.flow.component.html.Hr;
import com.vaadin.flow.component.html.Span;
import com.vaadin.flow.component.icon.Icon;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.notification.NotificationVariant;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextField;

import lombok.extern.slf4j.Slf4j;

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø–æ—à—É–∫—É —Ç–∞ –≤–∏–±–æ—Ä—É —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞.
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –∑–≥—ñ–¥–Ω–æ –∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—î—é 1.1 "–í–∏–±—ñ—Ä –∞–±–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞".
 *
 * –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è UX:
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É –≤ Grid
 * - –°—É—á–∞—Å–Ω–∏–π –¥–∏–∑–∞–π–Ω –∑ —ñ–∫–æ–Ω–∫–∞–º–∏ —Ç–∞ —Å–µ–∫—Ü—ñ—è–º–∏
 * - –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑ emoji
 * - –ó—Ä—É—á–Ω–∏–π –≤–∏–±—ñ—Ä –∫–ª—ñ—î–Ω—Ç—ñ–≤ –æ–¥–Ω–∏–º –∫–ª—ñ–∫–æ–º
 */
@Component
@Slf4j
public class ClientSelectionComponent extends VerticalLayout {

    private final ClientService clientService;

    // UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    private TextField clientSearchField;
    private Grid<ClientResponse> clientGrid;
    private Button newClientButton;
    private Span statusLabel;
    private Div resultsContainer;

    // Callbacks
    private Consumer<ClientResponse> onClientSelected;
    private Runnable onNewClientRequested;

    // –°—Ç–∞–Ω –≤–∏–±–æ—Ä—É
    private ClientResponse selectedClient;

    public ClientSelectionComponent(ClientService clientService) {
        this.clientService = clientService;
        log.info("üèóÔ∏è –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø: ClientSelectionComponent —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è");

        initializeLayout();
        createComponents();
        setupEventHandlers();

        log.info("‚úÖ –ì–û–¢–û–í–û: ClientSelectionComponent —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    private void initializeLayout() {
        setWidthFull();
        setPadding(true);
        setSpacing(true);
        addClassName("client-selection-container");
        getStyle().set("background", "var(--lumo-contrast-5pct)")
                  .set("border-radius", "8px")
                  .set("padding", "2rem")
                  .set("margin-bottom", "1rem")
                  .set("max-width", "none");
    }

    private void createComponents() {
        createHeader();
        createSearchSection();
        createResultsSection();
        createActionSection();
    }

    private void createHeader() {
        HorizontalLayout header = new HorizontalLayout();
        header.setAlignItems(FlexComponent.Alignment.CENTER);
        header.setSpacing(true);
        header.setWidthFull();

        Icon clientIcon = VaadinIcon.USERS.create();
        clientIcon.setColor("var(--lumo-primary-color)");
        clientIcon.setSize("24px");

        H3 title = new H3("–í–∏–±—ñ—Ä –∫–ª—ñ—î–Ω—Ç–∞");
        title.getStyle().set("margin", "0")
                      .set("color", "var(--lumo-primary-text-color)")
                      .set("flex-grow", "1");

        Icon infoIcon = VaadinIcon.INFO_CIRCLE.create();
        infoIcon.setColor("var(--lumo-secondary-text-color)");
        infoIcon.setTooltipText("–í–≤–µ–¥—ñ—Ç—å –º—ñ–Ω—ñ–º—É–º 2 —Å–∏–º–≤–æ–ª–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –ø–æ—à—É–∫—É");

        header.add(clientIcon, title, infoIcon);
        add(header, new Hr());
    }

    private void createSearchSection() {
        Div sectionTitle = createSectionTitle("–ü–æ—à—É–∫ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞", VaadinIcon.SEARCH);
        add(sectionTitle);

        // –ü–æ–ª–µ –ø–æ—à—É–∫—É –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
        clientSearchField = new TextField("–ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞");
        clientSearchField.setPlaceholder("–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ, —Ç–µ–ª–µ—Ñ–æ–Ω –∞–±–æ email...");
        clientSearchField.setPrefixComponent(VaadinIcon.SEARCH.create());
        clientSearchField.setSuffixComponent(createClearButton());
        clientSearchField.setWidthFull();
        clientSearchField.setHelperText("–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ –ø—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è 2+ —Å–∏–º–≤–æ–ª—ñ–≤");

        // –°—Ç–∞—Ç—É—Å –ª–µ–π–±–ª
        statusLabel = new Span();
        statusLabel.getStyle().set("font-size", "var(--lumo-font-size-s)")
                              .set("color", "var(--lumo-secondary-text-color)")
                              .set("margin-top", "0.5rem");

        add(clientSearchField, statusLabel);
    }

    private Button createClearButton() {
        Button clearButton = new Button(VaadinIcon.CLOSE_SMALL.create());
        clearButton.addThemeVariants(ButtonVariant.LUMO_TERTIARY_INLINE);
        clearButton.setTooltipText("–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ—à—É–∫");
        clearButton.addClickListener(e -> {
            log.info("üßπ –û–ß–ò–©–ï–ù–ù–Ø: –ø–æ—à—É–∫ —Å–∫–∏–Ω—É—Ç–æ");
            clientSearchField.clear();
            clearResults();
        });
        return clearButton;
    }

    private void createResultsSection() {
        resultsContainer = new Div();
        resultsContainer.setVisible(false);
        resultsContainer.setWidthFull();
        resultsContainer.getStyle()
                        .set("margin-top", "1.5rem")
                        .set("width", "100%")
                        .set("overflow-x", "auto");

        Div sectionTitle = createSectionTitle("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É", VaadinIcon.LIST);
        resultsContainer.add(sectionTitle);

        // Grid –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
        clientGrid = new Grid<>(ClientResponse.class, false);
        clientGrid.setWidthFull();
        clientGrid.setHeight("500px");
        clientGrid.addThemeVariants(
            GridVariant.LUMO_ROW_STRIPES,
            GridVariant.LUMO_WRAP_CELL_CONTENT,
            GridVariant.LUMO_COLUMN_BORDERS
        );

        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ CSS —Å—Ç–∏–ª—ñ –¥–ª—è Grid
        clientGrid.getStyle()
                  .set("width", "100%")
                  .set("min-width", "800px")
                  .set("border", "1px solid var(--lumo-contrast-20pct)")
                  .set("border-radius", "4px");

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–ª–æ–Ω–æ–∫ –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü—ñ—è–º–∏
        clientGrid.addColumn(client ->
            String.format("%s %s", client.getLastName(), client.getFirstName()))
            .setHeader(createColumnHeader("üë§ –ü—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è"))
            .setFlexGrow(3)
            .setSortable(true)
            .setResizable(true);

        clientGrid.addColumn(ClientResponse::getPhone)
            .setHeader(createColumnHeader("üìû –¢–µ–ª–µ—Ñ–æ–Ω"))
            .setFlexGrow(2)
            .setResizable(true);

        clientGrid.addColumn(ClientResponse::getEmail)
            .setHeader(createColumnHeader("‚úâÔ∏è Email"))
            .setFlexGrow(3)
            .setResizable(true);

        clientGrid.addColumn(ClientResponse::getAddress)
            .setHeader(createColumnHeader("üìç –ê–¥—Ä–µ—Å–∞"))
            .setFlexGrow(4)
            .setResizable(true);

        // –ö–Ω–æ–ø–∫–∞ –≤–∏–±–æ—Ä—É –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —à–∏—Ä–∏–Ω–æ—é
        clientGrid.addComponentColumn(this::createSelectButton)
            .setHeader("–î—ñ—ó")
            .setFlexGrow(0)
            .setWidth("120px")
            .setResizable(false);

        // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ –∫–ª—ñ–∫—É
        clientGrid.addItemDoubleClickListener(e -> {
            ClientResponse client = e.getItem();
            log.info("üñ±Ô∏è –ü–û–î–í–Ü–ô–ù–ò–ô –ö–õ–Ü–ö: –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –≤–∏–±—ñ—Ä –∫–ª—ñ—î–Ω—Ç–∞ '{} {}'",
                    client.getLastName(), client.getFirstName());
            selectClient(client);
        });

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è responsive –ø–æ–≤–µ–¥—ñ–Ω–∫–∏
        clientGrid.setAllRowsVisible(false);

        resultsContainer.add(clientGrid);
        add(resultsContainer);
    }

    private Span createColumnHeader(String text) {
        Span header = new Span(text);
        header.getStyle().set("font-weight", "600");
        return header;
    }

    private Button createSelectButton(ClientResponse client) {
        Button selectButton = new Button("–í–∏–±—Ä–∞—Ç–∏");
        selectButton.addThemeVariants(ButtonVariant.LUMO_PRIMARY, ButtonVariant.LUMO_SMALL);
        selectButton.setIcon(VaadinIcon.CHECK.create());

        selectButton.addClickListener(e -> {
            log.info("‚úÖ –ö–ù–û–ü–ö–ê –í–ò–ë–û–†–£: –∫–ª—ñ—î–Ω—Ç '{} {}' –æ–±—Ä–∞–Ω–∏–π",
                    client.getLastName(), client.getFirstName());
            selectClient(client);
        });

        return selectButton;
    }

    private void createActionSection() {
        Div sectionTitle = createSectionTitle("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞", VaadinIcon.PLUS);
        add(sectionTitle);

        // –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–∏–º –¥–∏–∑–∞–π–Ω–æ–º
        newClientButton = new Button("–°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞", VaadinIcon.PLUS.create());
        newClientButton.addThemeVariants(ButtonVariant.LUMO_SUCCESS, ButtonVariant.LUMO_LARGE);
        newClientButton.getStyle().set("margin-top", "1rem");
        newClientButton.setWidthFull();

        add(newClientButton);
    }

    private Div createSectionTitle(String title, VaadinIcon icon) {
        Div sectionDiv = new Div();
        sectionDiv.getStyle().set("margin-top", "1.5rem")
                           .set("margin-bottom", "1rem");

        HorizontalLayout sectionLayout = new HorizontalLayout();
        sectionLayout.setAlignItems(FlexComponent.Alignment.CENTER);
        sectionLayout.setSpacing(true);

        Icon sectionIcon = icon.create();
        sectionIcon.setColor("var(--lumo-primary-color)");
        sectionIcon.setSize("16px");

        Span sectionTitle = new Span(title);
        sectionTitle.getStyle().set("font-weight", "600")
                             .set("color", "var(--lumo-primary-text-color)");

        sectionLayout.add(sectionIcon, sectionTitle);
        sectionDiv.add(sectionLayout);

        return sectionDiv;
    }

    private void setupEventHandlers() {
        clientSearchField.addValueChangeListener(e -> {
            String searchTerm = e.getValue();
            log.info("üîç –ü–û–®–£–ö –í–í–ï–î–ï–ù–ù–Ø: —Ç–µ—Ä–º—ñ–Ω '{}'", searchTerm);
            searchClients(searchTerm);
        });

        newClientButton.addClickListener(e -> {
            log.info("‚ûï –ù–û–í–ò–ô –ö–õ–Ü–Ñ–ù–¢: –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ –∫–Ω–æ–ø–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞");
            handleNewClientRequest();
        });
    }

    private void searchClients(String searchTerm) {
        if (searchTerm == null || searchTerm.trim().length() < 2) {
            log.debug("üîç –ü–û–®–£–ö: —Ç–µ—Ä–º—ñ–Ω '{}' –∑–∞–∫–æ—Ä–æ—Ç–∫–∏–π, –ø—Ä–∏—Ö–æ–≤—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏", searchTerm);
            clearResults();
            statusLabel.setText(searchTerm != null && !searchTerm.trim().isEmpty() ?
                "üí° –í–≤–µ–¥—ñ—Ç—å –º—ñ–Ω—ñ–º—É–º 2 —Å–∏–º–≤–æ–ª–∏" : "");
            return;
        }

        try {
            log.info("üîÑ –ü–û–®–£–ö –ü–û–ß–ê–¢–û–ö: –≤–∏–∫–æ–Ω—É—î–º–æ –ø–æ—à—É–∫ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–º '{}'", searchTerm.trim());
            statusLabel.setText("üîÑ –ü–æ—à—É–∫...");

            ClientSearchRequest searchRequest = new ClientSearchRequest();
            searchRequest.setQuery(searchTerm.trim());
            searchRequest.setPage(0);
            searchRequest.setSize(50); // –ó–±—ñ–ª—å—à—É—î–º–æ –¥–ª—è Grid

            log.info("ÔøΩÔøΩ –ü–û–®–£–ö –ó–ê–ü–ò–¢: query='{}', page={}, size={}",
                searchRequest.getQuery(), searchRequest.getPage(), searchRequest.getSize());

            ClientPageResponse response = clientService.searchClients(searchRequest);

            log.info("üîç –ü–û–®–£–ö –í–Ü–î–ü–û–í–Ü–î–¨: –∑–Ω–∞–π–¥–µ–Ω–æ {} –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ {} –∑–∞–≥–∞–ª—å–Ω–∏—Ö",
                response.getContent().size(), response.getTotalElements());

            // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤ Grid –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
            clientGrid.setItems(response.getContent());
            resultsContainer.setVisible(!response.getContent().isEmpty());

            if (response.getContent().isEmpty()) {
                statusLabel.setText("‚ùå –ö–ª—ñ—î–Ω—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞ –∑–∞–ø–∏—Ç–æ–º '" + searchTerm.trim() + "'");
                log.info("üìä –†–ï–ó–£–õ–¨–¢–ê–¢: –Ω–µ–º–∞—î –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –∑–∞–ø–∏—Ç–æ–º '{}'", searchTerm.trim());
            } else {
                statusLabel.setText(String.format("‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ %d –∫–ª—ñ—î–Ω—Ç(—ñ–≤). –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –≤–∏–±–æ—Ä—É",
                    response.getContent().size()));
                log.info("üìä –†–ï–ó–£–õ–¨–¢–ê–¢: –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ {} –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤ Grid", response.getContent().size());
            }

        } catch (Exception e) {
            log.error("‚ùå –ü–û–ú–ò–õ–ö–ê –ü–û–®–£–ö–£: {}", e.getMessage(), e);
            statusLabel.setText("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É: " + e.getMessage());
            clearResults();

            Notification notification = Notification.show("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤: " + e.getMessage());
            notification.addThemeVariants(NotificationVariant.LUMO_ERROR);
            notification.setDuration(5000);
        }
    }

    private void selectClient(ClientResponse client) {
        if (client == null) {
            log.warn("‚ö†Ô∏è –ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø: —Å–ø—Ä–æ–±–∞ –≤–∏–±—Ä–∞—Ç–∏ null –∫–ª—ñ—î–Ω—Ç–∞");
            return;
        }

        this.selectedClient = client;

        log.info("‚úÖ –ö–õ–Ü–Ñ–ù–¢ –û–ë–†–ê–ù–û: {} {} (ID: {}, —Ç–µ–ª–µ—Ñ–æ–Ω: {})",
            client.getLastName(), client.getFirstName(), client.getId(), client.getPhone());

        // –í—ñ–∑—É–∞–ª—å–Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        Notification notification = Notification.show(
            String.format("‚úÖ –ö–ª—ñ—î–Ω—Ç –æ–±—Ä–∞–Ω–æ: %s %s", client.getLastName(), client.getFirstName()));
        notification.addThemeVariants(NotificationVariant.LUMO_SUCCESS);
        notification.setDuration(3000);

        // –í–∏–¥—ñ–ª—è—î–º–æ –≤–∏–±—Ä–∞–Ω–∏–π —Ä—è–¥–æ–∫ –≤ Grid
        clientGrid.select(client);

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ callback
        if (onClientSelected != null) {
            onClientSelected.accept(client);
        }
    }

    private void clearResults() {
        clientGrid.setItems();
        resultsContainer.setVisible(false);
        this.selectedClient = null;
        clientGrid.deselectAll();
        log.debug("üßπ –û–ß–ò–©–ï–ù–ù–Ø: —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ");
    }

    private void handleNewClientRequest() {
        clearSelection();
        if (onNewClientRequested != null) {
            onNewClientRequested.run();
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–±—Ä–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞.
     */
    public ClientResponse getSelectedClient() {
        return selectedClient;
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ callback –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–±–æ—Ä—É –∫–ª—ñ—î–Ω—Ç–∞.
     */
    public void setOnClientSelected(Consumer<ClientResponse> onClientSelected) {
        this.onClientSelected = onClientSelected;
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ callback –¥–ª—è –∑–∞–ø–∏—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞.
     */
    public void setOnNewClientRequested(Runnable onNewClientRequested) {
        this.onNewClientRequested = onNewClientRequested;
    }

    /**
     * –û—á–∏—Å—Ç–∏—Ç–∏ –≤–∏–±—ñ—Ä —Ç–∞ –ø–æ—à—É–∫.
     */
    public void clearSelection() {
        log.info("üßπ –û–ß–ò–©–ï–ù–ù–Ø: —Å–∫–∏–¥–∞—î–º–æ –≤–∏–±—ñ—Ä —Ç–∞ –ø–æ—à—É–∫");
        clientSearchField.clear();
        clearResults();
        statusLabel.setText("");
        this.selectedClient = null;
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –ø–æ—à—É–∫—É.
     */
    public void focusSearchField() {
        clientSearchField.focus();
    }
}
