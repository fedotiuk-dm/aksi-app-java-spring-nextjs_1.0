package com.aksi.ui.wizard.step4.components;

import java.io.ByteArrayInputStream;

import com.aksi.ui.wizard.step4.domain.ConfirmationState;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.button.ButtonVariant;
import com.vaadin.flow.component.html.Anchor;
import com.vaadin.flow.component.html.Div;
import com.vaadin.flow.component.html.H4;
import com.vaadin.flow.component.html.Span;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.server.StreamResource;

import lombok.extern.slf4j.Slf4j;

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥—ñ–π –∑ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—î—é (–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è, –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ email, –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è).
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å: –∫–µ—Ä—É–≤–∞–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏ –∑ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—î—é —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ó—Ö —Å—Ç–∞—Ç—É—Å—É.
 */
@Slf4j
public class ReceiptActionsComponent extends VerticalLayout {

    // UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
    private Button generateReceiptButton;
    private Button emailReceiptButton;
    private Div receiptStatusPanel;
    private Div downloadSection;
    private Div progressIndicator;

    // Callbacks
    private Runnable onGenerateReceipt;
    private Runnable onEmailReceipt;

    // –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω
    private ConfirmationState currentState;

    public ReceiptActionsComponent() {
        initializeComponent();
        createComponents();
        initializeLayout();
        setupEventHandlers();
        log.debug("ReceiptActionsComponent —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ");
    }

    private void initializeComponent() {
        setPadding(false);
        setSpacing(true);
        setDefaultHorizontalComponentAlignment(Alignment.STRETCH);
        addClassName("receipt-actions-component");
    }

    private void createComponents() {
        H4 sectionTitle = new H4("–§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó");
        sectionTitle.getStyle().set("margin-top", "0");

        // –°—Ç–∞—Ç—É—Å–Ω–∞ –ø–∞–Ω–µ–ª—å
        receiptStatusPanel = createReceiptStatusPanel();

        // –ö–Ω–æ–ø–∫–∏ –¥—ñ–π
        HorizontalLayout actionsLayout = createActionsLayout();

        // –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—É
        progressIndicator = createProgressIndicator();

        // –°–µ–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        downloadSection = createDownloadSection();

        add(sectionTitle, receiptStatusPanel, actionsLayout, progressIndicator, downloadSection);
    }

    private void initializeLayout() {
        getStyle()
                .set("background", "var(--lumo-contrast-5pct)")
                .set("padding", "var(--lumo-space-m)")
                .set("border-radius", "var(--lumo-border-radius-m)")
                .set("border", "1px solid var(--lumo-contrast-20pct)");
    }

    private Div createReceiptStatusPanel() {
        Div panel = new Div();
        panel.addClassName("receipt-status-panel");
        panel.getStyle()
                .set("background", "var(--lumo-base-color)")
                .set("padding", "var(--lumo-space-s)")
                .set("border-radius", "var(--lumo-border-radius-s)")
                .set("border", "1px solid var(--lumo-contrast-10pct)")
                .set("margin-bottom", "var(--lumo-space-m)");

        Span statusText = new Span("üìÑ –°—Ç–∞—Ç—É—Å –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó: –ù–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞");
        statusText.addClassName("status-text");
        statusText.getStyle().set("font-weight", "500");

        panel.add(statusText);
        return panel;
    }

    private HorizontalLayout createActionsLayout() {
        HorizontalLayout layout = new HorizontalLayout();
        layout.setSpacing(true);
        layout.addClassName("receipt-actions-layout");

        // –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
        generateReceiptButton = new Button("–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ PDF –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é", VaadinIcon.FILE_TEXT.create());
        generateReceiptButton.addThemeVariants(ButtonVariant.LUMO_PRIMARY);
        generateReceiptButton.addClassName("generate-receipt-button");

        // –ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email
        emailReceiptButton = new Button("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–∞ email", VaadinIcon.ENVELOPE.create());
        emailReceiptButton.setEnabled(false);
        emailReceiptButton.addClassName("email-receipt-button");

        layout.add(generateReceiptButton, emailReceiptButton);
        return layout;
    }

    private Div createProgressIndicator() {
        Div indicator = new Div();
        indicator.addClassName("progress-indicator");
        indicator.setVisible(false);
        indicator.getStyle()
                .set("background", "var(--lumo-primary-color-10pct)")
                .set("padding", "var(--lumo-space-s)")
                .set("border-radius", "var(--lumo-border-radius-s)")
                .set("border-left", "3px solid var(--lumo-primary-color)")
                .set("margin-bottom", "var(--lumo-space-m)");

        return indicator;
    }

    private Div createDownloadSection() {
        Div section = new Div();
        section.addClassName("download-section");
        section.setVisible(false);
        section.getStyle()
                .set("background", "var(--lumo-success-color-10pct)")
                .set("padding", "var(--lumo-space-m)")
                .set("border-radius", "var(--lumo-border-radius-s)")
                .set("border-left", "3px solid var(--lumo-success-color)")
                .set("margin-top", "var(--lumo-space-m)");

        return section;
    }

    private void setupEventHandlers() {
        generateReceiptButton.addClickListener(event -> {
            if (onGenerateReceipt != null) {
                onGenerateReceipt.run();
            }
        });

        emailReceiptButton.addClickListener(event -> {
            if (onEmailReceipt != null) {
                onEmailReceipt.run();
            }
        });
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É.
     */
    public void updateFromState(ConfirmationState state) {
        if (state == null) {
            log.warn("–°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ null state");
            return;
        }

        this.currentState = state;
        updateReceiptStatus(state);
        updateButtonsState(state);
        updateDownloadSection(state);

        log.debug("ReceiptActionsComponent –æ–Ω–æ–≤–ª–µ–Ω–æ –∑ —Å—Ç–∞–Ω—É");
    }

    private void updateReceiptStatus(ConfirmationState state) {
        Span statusText = (Span) receiptStatusPanel.getChildren()
                .filter(component -> component.hasClassName("status-text"))
                .findFirst()
                .orElse(null);

        if (statusText == null) return;

        if (state.isReceiptGenerated()) {
            statusText.setText("üìÑ –°—Ç–∞—Ç—É—Å –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó: –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞ ‚úÖ");
            statusText.getStyle().set("color", "var(--lumo-success-text-color)");

            receiptStatusPanel.getStyle()
                    .set("background", "var(--lumo-success-color-10pct)")
                    .set("border-color", "var(--lumo-success-color-50pct)");

            // –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ñ–∞–π–ª
            if (state.getReceiptFileName() != null) {
                Span fileInfo = new Span("üìã –§–∞–π–ª: " + state.getReceiptFileName());
                fileInfo.addClassName("file-info");
                fileInfo.getStyle()
                        .set("display", "block")
                        .set("font-size", "var(--lumo-font-size-s)")
                        .set("color", "var(--lumo-secondary-text-color)")
                        .set("margin-top", "var(--lumo-space-xs)");

                // –î–æ–¥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —â–µ –Ω–µ –¥–æ–¥–∞–Ω–æ
                if (receiptStatusPanel.getChildren().noneMatch(comp -> comp.hasClassName("file-info"))) {
                    receiptStatusPanel.add(fileInfo);
                }
            }
        } else {
            statusText.setText("üìÑ –°—Ç–∞—Ç—É—Å –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó: –ù–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞");
            statusText.getStyle().set("color", "var(--lumo-secondary-text-color)");

            receiptStatusPanel.getStyle()
                    .set("background", "var(--lumo-base-color)")
                    .set("border-color", "var(--lumo-contrast-10pct)");

            // –í–∏–¥–∞–ª—è—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ñ–∞–π–ª
            receiptStatusPanel.getChildren()
                    .filter(comp -> comp.hasClassName("file-info"))
                    .findFirst()
                    .ifPresent(receiptStatusPanel::remove);
        }
    }

    private void updateButtonsState(ConfirmationState state) {
        // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
        generateReceiptButton.setEnabled(!state.isLoading());

        if (state.isReceiptGenerated()) {
            generateReceiptButton.setText("–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ PDF");
            generateReceiptButton.setIcon(VaadinIcon.REFRESH.create());
        } else {
            generateReceiptButton.setText("–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ PDF –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é");
            generateReceiptButton.setIcon(VaadinIcon.FILE_TEXT.create());
        }

        // Email –∫–Ω–æ–ø–∫–∞
        emailReceiptButton.setEnabled(state.isCanSendEmail() && !state.isLoading());

        if (state.isEmailSent()) {
            emailReceiptButton.setText("Email –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ ‚úÖ");
            emailReceiptButton.addThemeVariants(ButtonVariant.LUMO_SUCCESS);
        } else if (state.isCanSendEmail()) {
            emailReceiptButton.setText("–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–∞ email");
            emailReceiptButton.removeThemeVariants(ButtonVariant.LUMO_SUCCESS);
        } else {
            emailReceiptButton.setText("Email –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
            emailReceiptButton.removeThemeVariants(ButtonVariant.LUMO_SUCCESS);
        }
    }

    private void updateDownloadSection(ConfirmationState state) {
        if (state.isReceiptGenerated() && state.getGeneratedReceiptBytes() != null) {
            downloadSection.setVisible(true);
            downloadSection.removeAll();

            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü—ñ—ó
            Span sectionTitle = new Span("üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó");
            sectionTitle.getStyle()
                    .set("font-weight", "bold")
                    .set("display", "block")
                    .set("margin-bottom", "var(--lumo-space-s)");

            // –°—Ç–≤–æ—Ä—é—î–º–æ StreamResource –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            StreamResource resource = new StreamResource(
                    state.getReceiptFileName(),
                    () -> new ByteArrayInputStream(state.getGeneratedReceiptBytes())
            );

            // –ü–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            Anchor downloadLink = new Anchor(resource, "üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é");
            downloadLink.getElement().setAttribute("download", true);
            downloadLink.addClassName("download-link");
            downloadLink.getStyle()
                    .set("font-weight", "bold")
                    .set("color", "var(--lumo-primary-text-color)")
                    .set("text-decoration", "none")
                    .set("display", "inline-block")
                    .set("padding", "var(--lumo-space-s)")
                    .set("background", "var(--lumo-primary-color-10pct)")
                    .set("border-radius", "var(--lumo-border-radius-s)")
                    .set("border", "1px solid var(--lumo-primary-color-50pct)");

            // –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É
            Span sizeInfo = new Span(String.format("–†–æ–∑–º—ñ—Ä: %.1f KB",
                    state.getGeneratedReceiptBytes().length / 1024.0));
            sizeInfo.getStyle()
                    .set("font-size", "var(--lumo-font-size-s)")
                    .set("color", "var(--lumo-secondary-text-color)")
                    .set("display", "block")
                    .set("margin-top", "var(--lumo-space-xs)");

            downloadSection.add(sectionTitle, downloadLink, sizeInfo);
        } else {
            downloadSection.setVisible(false);
        }
    }

    /**
     * –ü–æ–∫–∞–∑—É—î –ø—Ä–æ–≥—Ä–µ—Å –æ–ø–µ—Ä–∞—Ü—ñ—ó.
     */
    public void showProgress(String operation, String message) {
        progressIndicator.removeAll();
        progressIndicator.setVisible(true);

        Span operationSpan = new Span("‚è≥ " + message);
        operationSpan.getStyle()
                .set("font-weight", "500")
                .set("color", "var(--lumo-primary-text-color)");

        progressIndicator.add(operationSpan);
        log.debug("–ü–æ–∫–∞–∑–∞–Ω–æ –ø—Ä–æ–≥—Ä–µ—Å –æ–ø–µ—Ä–∞—Ü—ñ—ó: {}", operation);
    }

    /**
     * –ü—Ä–∏—Ö–æ–≤—É—î —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—É.
     */
    public void hideProgress() {
        progressIndicator.setVisible(false);
        log.debug("–Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—É –ø—Ä–∏—Ö–æ–≤–∞–Ω–æ");
    }

    /**
     * –ü–æ–∫–∞–∑—É—î —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.
     */
    public void showLoading(boolean loading, String message) {
        if (loading) {
            showProgress("loading", message != null ? message : "–û–±—Ä–æ–±–∫–∞...");
            generateReceiptButton.setEnabled(false);
            emailReceiptButton.setEnabled(false);
            addClassName("loading-state");
        } else {
            hideProgress();
            updateButtonsState(currentState != null ? currentState :
                    ConfirmationState.builder().isLoading(false).build());
            removeClassName("loading-state");
        }
    }

    /**
     * –ü–æ–∫–∞–∑—É—î —Å—Ç–∞–Ω –ø–æ–º–∏–ª–∫–∏.
     */
    public void showError(boolean hasError, String errorMessage) {
        if (hasError) {
            addClassName("error-state");

            if (errorMessage != null) {
                Span errorSpan = new Span("‚ùå " + errorMessage);
                errorSpan.addClassName("error-message");
                errorSpan.getStyle()
                        .set("color", "var(--lumo-error-text-color)")
                        .set("font-weight", "500")
                        .set("display", "block")
                        .set("margin-top", "var(--lumo-space-s)")
                        .set("padding", "var(--lumo-space-s)")
                        .set("background", "var(--lumo-error-color-10pct)")
                        .set("border-radius", "var(--lumo-border-radius-s)");

                // –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É, —è–∫—â–æ —â–µ –Ω–µ –¥–æ–¥–∞–Ω–æ
                if (getChildren().noneMatch(comp -> comp.hasClassName("error-message"))) {
                    add(errorSpan);
                }
            }
        } else {
            removeClassName("error-state");
            // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É
            getChildren()
                    .filter(comp -> comp.hasClassName("error-message"))
                    .findFirst()
                    .ifPresent(this::remove);
        }
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–º–ø–∞–∫—Ç–Ω–∏–π —Ä–µ–∂–∏–º –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è.
     */
    public void setCompactMode(boolean compact) {
        if (compact) {
            addClassName("compact-mode");
            receiptStatusPanel.setVisible(false);
        } else {
            removeClassName("compact-mode");
            receiptStatusPanel.setVisible(true);
        }
        log.debug("–ö–æ–º–ø–∞–∫—Ç–Ω–∏–π —Ä–µ–∂–∏–º –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {}", compact);
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î callback –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó.
     */
    public void setOnGenerateReceipt(Runnable callback) {
        this.onGenerateReceipt = callback;
        log.debug("Generate receipt callback –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î callback –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email.
     */
    public void setOnEmailReceipt(Runnable callback) {
        this.onEmailReceipt = callback;
        log.debug("Email receipt callback –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—è –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞.
     */
    public boolean isReceiptGenerated() {
        return currentState != null && currentState.isReceiptGenerated();
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –º–æ–∂–Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ email.
     */
    public boolean canSendEmail() {
        return currentState != null && currentState.isCanSendEmail();
    }

    // –ì–µ—Ç—Ç–µ—Ä–∏ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    protected Button getGenerateReceiptButton() { return generateReceiptButton; }
    protected Button getEmailReceiptButton() { return emailReceiptButton; }
    protected Div getReceiptStatusPanel() { return receiptStatusPanel; }
    protected Div getDownloadSection() { return downloadSection; }
    protected Div getProgressIndicator() { return progressIndicator; }
}
