package com.aksi.ui.wizard.step2.substeps.main_manager.application;

import java.util.List;
import java.util.function.Consumer;

import com.aksi.domain.order.dto.OrderItemDTO;
import com.aksi.domain.order.service.order.OrderItemManagementService;
import com.aksi.ui.wizard.dto.OrderWizardData;
import com.aksi.ui.wizard.step2.substeps.main_manager.domain.ItemsManagerState;
import com.aksi.ui.wizard.step2.substeps.main_manager.events.ItemsManagerEvents;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

/**
 * Application Service –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –ø—Ä–µ–¥–º–µ—Ç—ñ–≤.
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—é –º—ñ–∂ –¥–æ–º–µ–Ω–æ–º, —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é —Ç–∞ UI.
 */
@RequiredArgsConstructor
@Slf4j
public class ItemsManagerService {

    private final OrderItemManagementService orderItemService;
    private final OrderWizardData wizardData;

    // Event handlers
    private Consumer<ItemsManagerEvents> eventHandler;

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ–π.
     */
    public void setEventHandler(Consumer<ItemsManagerEvents> handler) {
        this.eventHandler = handler;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤.
     */
    public ItemsManagerState initializeManager() {
        log.debug("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {}",
                wizardData.getDraftOrder().getReceiptNumber());

        try {
            // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω
            ItemsManagerState initialState = ItemsManagerState.createInitial();

            publishEvent(new ItemsManagerEvents.ManagerInitialized(initialState));

            // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ –ø—Ä–µ–¥–º–µ—Ç–∏
            loadItems(initialState);

            return initialState;

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤: {}", ex.getMessage(), ex);
            publishEvent(new ItemsManagerEvents.ManagerError(
                    "–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó: " + ex.getMessage(),
                    ex,
                    "initialization"
            ));

            return ItemsManagerState.createInitial();
        }
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –ø—Ä–µ–¥–º–µ—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∞–±–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É.
     */
    public ItemsManagerState loadItems(ItemsManagerState currentState) {
        log.debug("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è");

        try {
            publishEvent(new ItemsManagerEvents.LoadingStarted("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤"));
            publishEvent(new ItemsManagerEvents.ItemsLoadRequested(wizardData.getDraftOrder().getId()));

            // –ü–æ–∫–∞–∑—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            ItemsManagerState loadingState = currentState.withLoading(true);
            publishEvent(new ItemsManagerEvents.ManagerStateUpdated(loadingState));

            List<OrderItemDTO> items;
            boolean fromDatabase = false;

            if (wizardData.getDraftOrder().getId() != null) {
                // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
                items = orderItemService.getOrderItems(wizardData.getDraftOrder().getId());
                wizardData.setItems(items);
                fromDatabase = true;
                log.debug("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {} –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑ –ë–î", items.size());
            } else {
                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫
                items = wizardData.getItems();
                log.debug("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ {} –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É", items.size());
            }

            // –î–ï–¢–ê–õ–¨–ù–ï –õ–û–ì–£–í–ê–ù–ù–Ø
            log.info("üîç –î–ï–¢–ê–õ–¨–ù–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –ü–†–ï–î–ú–ï–¢–ò:");
            log.info("   - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤: {}", items.size());
            log.info("   - –ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {}", fromDatabase);
            log.info("   - ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {}", wizardData.getDraftOrder().getId());
            log.info("   - –ü—Ä–µ–¥–º–µ—Ç–∏ —É wizardData: {}", wizardData.getItems().size());

            if (!items.isEmpty()) {
                for (int i = 0; i < items.size(); i++) {
                    OrderItemDTO item = items.get(i);
                    log.info("   - –ü—Ä–µ–¥–º–µ—Ç {}: {} (ID: {}, –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {}, –¶—ñ–Ω–∞: {})",
                            i + 1, item.getName(), item.getId(), item.getCategory(), item.getTotalPrice());
                }
            } else {
                log.warn("‚ö†Ô∏è –°–ü–ò–°–û–ö –ü–†–ï–î–ú–ï–¢–Ü–í –ü–û–†–û–ñ–ù–Ü–ô!");
            }

            publishEvent(new ItemsManagerEvents.ItemsLoaded(items, fromDatabase));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
            ItemsManagerState newState = currentState.withLoadedItems(items);
            publishEvent(new ItemsManagerEvents.ManagerStateUpdated(newState));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStatistics(newState);

            // –í–∞–ª—ñ–¥—É—î–º–æ —Å—Ç–∞–Ω
            validateManagerState(newState);

            publishEvent(new ItemsManagerEvents.LoadingCompleted("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤"));

            return newState;

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤: {}", ex.getMessage(), ex);
            publishEvent(new ItemsManagerEvents.ManagerError(
                    "–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: " + ex.getMessage(),
                    ex,
                    "loading"
            ));

            publishEvent(new ItemsManagerEvents.LoadingCompleted("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤"));
            return currentState.withLoading(false);
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    public ItemsManagerState addItem(ItemsManagerState currentState, OrderItemDTO newItem) {
        log.debug("–î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", newItem.getName());

        try {
            publishEvent(new ItemsManagerEvents.ItemAdded(newItem));

            // –î–æ–¥–∞—î–º–æ –¥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
            wizardData.getItems().add(newItem);

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
            ItemsManagerState newState = currentState.withAddedItem(newItem);
            publishEvent(new ItemsManagerEvents.ManagerStateUpdated(newState));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStatistics(newState);

            // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
            publishEvent(new ItemsManagerEvents.ItemSaved(newItem, true));

            // –í–∞–ª—ñ–¥—É—î–º–æ —Å—Ç–∞–Ω
            validateManagerState(newState);

            log.info("–î–æ–¥–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç: {} –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {}",
                    newItem.getName(), wizardData.getDraftOrder().getReceiptNumber());

            return newState;

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", ex.getMessage(), ex);
            publishEvent(new ItemsManagerEvents.ManagerError(
                    "–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: " + ex.getMessage(),
                    ex,
                    "add_item"
            ));
            return currentState;
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    public ItemsManagerState updateItem(ItemsManagerState currentState, OrderItemDTO updatedItem, OrderItemDTO previousItem) {
        log.debug("–û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", updatedItem.getName());

        try {
            publishEvent(new ItemsManagerEvents.ItemUpdated(updatedItem, previousItem));

            // –û–Ω–æ–≤–ª—é—î–º–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–ø–∏—Å–∫—É
            var items = wizardData.getItems();
            for (int i = 0; i < items.size(); i++) {
                if (isSameItem(items.get(i), previousItem)) {
                    items.set(i, updatedItem);
                    break;
                }
            }

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
            ItemsManagerState newState = currentState.withUpdatedItem(updatedItem);
            publishEvent(new ItemsManagerEvents.ManagerStateUpdated(newState));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStatistics(newState);

            // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
            publishEvent(new ItemsManagerEvents.ItemSaved(updatedItem, false));

            // –í–∞–ª—ñ–¥—É—î–º–æ —Å—Ç–∞–Ω
            validateManagerState(newState);

            log.info("–û–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç: {} —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ: {}",
                    updatedItem.getName(), wizardData.getDraftOrder().getReceiptNumber());

            return newState;

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", ex.getMessage(), ex);
            publishEvent(new ItemsManagerEvents.ManagerError(
                    "–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: " + ex.getMessage(),
                    ex,
                    "update_item"
            ));
            return currentState;
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    public void requestItemDeletion(OrderItemDTO item) {
        log.debug("–ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", item.getName());
        publishEvent(new ItemsManagerEvents.ItemDeletionRequested(item));
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    public ItemsManagerState deleteItem(ItemsManagerState currentState, OrderItemDTO itemToDelete) {
        log.debug("–í–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", itemToDelete.getName());

        try {
            publishEvent(new ItemsManagerEvents.ItemDeletionConfirmed(itemToDelete));

            // –í–∏–¥–∞–ª—è—î–º–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
            if (wizardData.getDraftOrder().getId() != null && itemToDelete.getId() != null) {
                orderItemService.deleteOrderItem(wizardData.getDraftOrder().getId(), itemToDelete.getId());
            }

            // –í–∏–¥–∞–ª—è—î–º–æ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫—É
            wizardData.getItems().removeIf(item -> isSameItem(item, itemToDelete));

            publishEvent(new ItemsManagerEvents.ItemDeleted(itemToDelete));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
            ItemsManagerState newState = currentState.withRemovedItem(itemToDelete);
            publishEvent(new ItemsManagerEvents.ManagerStateUpdated(newState));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updateStatistics(newState);

            // –í–∞–ª—ñ–¥—É—î–º–æ —Å—Ç–∞–Ω
            validateManagerState(newState);

            log.info("–í–∏–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–¥–º–µ—Ç: {} –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {}",
                    itemToDelete.getName(), wizardData.getDraftOrder().getReceiptNumber());

            return newState;

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", ex.getMessage(), ex);
            publishEvent(new ItemsManagerEvents.ManagerError(
                    "–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: " + ex.getMessage(),
                    ex,
                    "delete_item"
            ));
            return currentState;
        }
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç –Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    public void requestItemEdit(OrderItemDTO item) {
        log.debug("–ó–∞–ø–∏—Ç –Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞: {}", item.getName());
        publishEvent(new ItemsManagerEvents.ItemEditRequested(item));
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.
     */
    public void requestAddNewItem() {
        log.debug("–ó–∞–ø–∏—Ç –Ω–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞");
        publishEvent(new ItemsManagerEvents.AddNewItemRequested());
    }

    /**
     * –û–±—Ä–æ–±–ª—è—î –∑–∞–ø–∏—Ç –Ω–∞ –ø–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É.
     */
    public void requestContinueToNextStep(ItemsManagerState currentState) {
        log.debug("–ó–∞–ø–∏—Ç –Ω–∞ –ø–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É");

        publishEvent(new ItemsManagerEvents.ContinueToNextStepRequested(currentState));

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å
        boolean isReady = currentState.isReadyForNext();
        String buttonText = currentState.getContinueButtonText();

        log.debug("üîç –î–ï–¢–ê–õ–¨–ù–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –í–ê–õ–Ü–î–ê–¶–Ü–á:");
        log.debug("   - isReady: {}", isReady);
        log.debug("   - hasItems: {}", currentState.isHasItems());
        log.debug("   - items.size(): {}", currentState.getItems().size());
        log.debug("   - buttonText: {}", buttonText);

        // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —â–æ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ –ø–æ—Ä–æ–∂–Ω—ñ–π
        if (!isReady && currentState.getItems().isEmpty()) {
            log.warn("‚ö†Ô∏è –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π");
            publishEvent(new ItemsManagerEvents.ManagerValidationCompleted(
                    false,
                    List.of("–î–æ–¥–∞–π—Ç–µ —Ö–æ—á–∞ –± –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"),
                    false
            ));
        }

        publishEvent(new ItemsManagerEvents.ReadyToContinue(
                isReady,
                buttonText,
                currentState.getItems()
        ));
    }

    /**
     * –í–∞–ª—ñ–¥—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
     */
    public ItemsManagerState validateManagerState(ItemsManagerState currentState) {
        log.debug("–í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å—Ç–∞–Ω—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤");

        try {
            publishEvent(new ItemsManagerEvents.ManagerValidationRequested(currentState));

            // –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø: –í–∞–ª—ñ–¥–∞—Ü—ñ—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤ domain model,
            // –∞–ª–µ –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ –æ–¥—Ä–∞–∑—É
            // publishEvent(new ItemsManagerEvents.ManagerValidationCompleted(
            //         currentState.isValid(),
            //         currentState.getValidationMessages(),
            //         currentState.isReadyForNext()
            // ));

            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω UI –±–µ–∑ –ø–æ–∫–∞–∑—É –≤–∞–ª—ñ–¥–∞—Ü—ñ–π–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
            updateUIState(currentState);

            return currentState;

        } catch (Exception ex) {
            log.error("–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó —Å—Ç–∞–Ω—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {}", ex.getMessage(), ex);
            publishEvent(new ItemsManagerEvents.ManagerError(
                    "–ü–æ–º–∏–ª–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó: " + ex.getMessage(),
                    ex,
                    "validation"
            ));
            return currentState;
        }
    }

    /**
     * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞.
     */
    private void updateStatistics(ItemsManagerState state) {
        publishEvent(new ItemsManagerEvents.StatisticsUpdated(
                state.getItemsCount(),
                state.getTotalCost(),
                state.getStatusMessage()
        ));

        publishEvent(new ItemsManagerEvents.TotalCostUpdated(
                state.getTotalCost(),
                state.getTotalCostFormatted(),
                state.getItemsCount()
        ));
    }

    /**
     * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤.
     */
    private void updateUIState(ItemsManagerState state) {
        publishEvent(new ItemsManagerEvents.UIStateChanged(
                !state.isLoading(), // –º–æ–∂–Ω–∞ –¥–æ–¥–∞–≤–∞—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–∏ —è–∫—â–æ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ
                state.isReadyForNext(),
                state.isLoading(),
                state.getStatusMessage()
        ));
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —Ü–µ —Ç–æ–π —Å–∞–º–∏–π –ø—Ä–µ–¥–º–µ—Ç.
     */
    private boolean isSameItem(OrderItemDTO item1, OrderItemDTO item2) {
        if (item1.getId() != null && item2.getId() != null) {
            return item1.getId().equals(item2.getId());
        }

        // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –∑–∞ –∫–ª—é—á–æ–≤–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
        return item1.getName().equals(item2.getName()) &&
               item1.getCategory().equals(item2.getCategory()) &&
               java.util.Objects.equals(item1.getMaterial(), item2.getMaterial()) &&
               java.util.Objects.equals(item1.getColor(), item2.getColor());
    }

    /**
     * –ü—É–±–ª—ñ–∫—É—î –ø–æ–¥—ñ—é, —è–∫—â–æ —î –æ–±—Ä–æ–±–Ω–∏–∫.
     */
    private void publishEvent(ItemsManagerEvents event) {
        if (eventHandler != null) {
            try {
                eventHandler.accept(event);
            } catch (Exception ex) {
                log.error("–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–¥—ñ—ó {}: {}", event.getClass().getSimpleName(), ex.getMessage(), ex);
            }
        }
    }
}
