package com.aksi.api;

import java.math.BigDecimal;
import java.util.List;
import java.util.UUID;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.aksi.domain.order.statemachine.stage2.substep1.adapter.ItemBasicInfoAdapter;
import com.aksi.domain.order.statemachine.stage2.substep1.dto.ItemBasicInfoDTO;
import com.aksi.domain.order.statemachine.stage2.substep1.dto.SubstepResultDTO;
import com.aksi.domain.pricing.dto.PriceListItemDTO;
import com.aksi.domain.pricing.dto.ServiceCategoryDTO;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.extern.slf4j.Slf4j;

/**
 * REST API –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è Stage 2 Substep 1 - –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç.
 *
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –¢—ñ–ª—å–∫–∏ –ø—ñ–¥–µ—Ç–∞–ø 1: –≤–∏–±—ñ—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó, –ø—Ä–µ–¥–º–µ—Ç–∞ —Ç–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
 * - –î–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –¥–æ ItemBasicInfoAdapter
 *
 * –ü—Ä–∏–Ω—Ü–∏–ø–∏:
 * - –û–¥–∏–Ω —Ñ–∞–π–ª = –æ–¥–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å (—Ç—ñ–ª—å–∫–∏ substep1)
 * - –¢–æ–Ω–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä - —Ç—ñ–ª—å–∫–∏ HTTP –æ–±—Ä–æ–±–∫–∞
 * - –í—Å—è –ª–æ–≥—ñ–∫–∞ –≤–∏–Ω–µ—Å–µ–Ω–∞ –≤ –∞–¥–∞–ø—Ç–µ—Ä
 */
@RestController
@RequestMapping("/v1/order-wizard/stage2/substep1")
@Tag(name = "Order Wizard - Stage 2 Substep 1", description = "–ü—ñ–¥–µ—Ç–∞–ø 1: –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç")
@Slf4j
public class Substep1Controller {

    private final ItemBasicInfoAdapter itemBasicInfoAdapter;

    public Substep1Controller(ItemBasicInfoAdapter itemBasicInfoAdapter) {
        this.itemBasicInfoAdapter = itemBasicInfoAdapter;
    }

    // =================== –û–°–ù–û–í–ù–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –ü–†–ï–î–ú–ï–¢ ===================

    @Operation(
        summary = "–ü–æ—á–∏–Ω–∞—î –Ω–æ–≤–∏–π –ø—ñ–¥–µ—Ç–∞–ø 1 - –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è",
        operationId = "substep1StartSubstep",
        tags = {"Order Wizard - Stage 2 Substep 1", "Item Basic Info"}
    )
    @PostMapping("/start")
    public ResponseEntity<ItemBasicInfoDTO> startSubstep1() {
        log.info("üöÄ API –ó–ê–ü–ò–¢: POST /v1/order-wizard/stage2/substep1/start - –ü–û–ß–ê–¢–û–ö –ü–Ü–î–ï–¢–ê–ü–£ 1");

        ResponseEntity<ItemBasicInfoDTO> response = itemBasicInfoAdapter.startSubstep();

        if (response.getStatusCode().is2xxSuccessful()) {
            log.info("‚úÖ –ü–Ü–î–ï–¢–ê–ü 1 –£–°–ü–Ü–®–ù–û –†–û–ó–ü–û–ß–ê–¢–û: sessionId —Å—Ç–≤–æ—Ä–µ–Ω–æ, –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏");
        } else {
            log.error("‚ùå –ü–û–ú–ò–õ–ö–ê –ü–û–ß–ê–¢–ö–£ –ü–Ü–î–ï–¢–ê–ü–£ 1: —Å—Ç–∞—Ç—É—Å {}", response.getStatusCode());
        }

        return response;
    }

    @Operation(
        summary = "–û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥",
        operationId = "substep1GetServiceCategories",
        tags = {"Order Wizard - Stage 2 Substep 1", "Service Categories"}
    )
    @GetMapping("/service-categories")
    public ResponseEntity<List<ServiceCategoryDTO>> getServiceCategories() {
        log.info("üîç API –ó–ê–ü–ò–¢: GET /v1/order-wizard/stage2/substep1/service-categories");

        ResponseEntity<List<ServiceCategoryDTO>> response = itemBasicInfoAdapter.getServiceCategories();

                List<ServiceCategoryDTO> categories = response.getBody();
        if (categories == null || categories.isEmpty()) {
            log.warn("‚ö†Ô∏è API –í–Ü–î–ü–û–í–Ü–î–¨: –ü–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π! –ú–æ–∂–ª–∏–≤–æ –±–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –¥–∞–Ω–∏—Ö.");
            log.info("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–Ø: –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –∑–∞–ø—É—â–µ–Ω—ñ –º—ñ–≥—Ä–∞—Ü—ñ—ó —Ç–∞ SQL —Å–∫—Ä–∏–ø—Ç–∏ –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –¥–∞–Ω–∏—Ö");
        } else {
            log.info("‚úÖ API –í–Ü–î–ü–û–í–Ü–î–¨: –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ {} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥", categories.size());
            categories.forEach(cat ->
                log.info("üìã –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {} (–∫–æ–¥: {})", cat.getName(), cat.getCode())
            );
        }

        return response;
    }

    @Operation(
        summary = "–í–∏–±–∏—Ä–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥–∏",
        operationId = "substep1SelectServiceCategory",
        tags = {"Order Wizard - Stage 2 Substep 1", "Service Categories"}
    )
    @PostMapping("/{sessionId}/select-category")
    public ResponseEntity<ItemBasicInfoDTO> selectServiceCategory(
            @PathVariable UUID sessionId,
            @RequestParam UUID categoryId) {
        log.info("üéØ API –ó–ê–ü–ò–¢: POST /v1/order-wizard/stage2/substep1/{}/select-category?categoryId={}",
                sessionId, categoryId);
        log.info("üìù –ü–ï–†–ï–•–Ü–î –ù–ê –ö–†–û–ö: –í–∏–±—ñ—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏ –≤ –ø—ñ–¥–µ—Ç–∞–ø—ñ 1");

        ResponseEntity<ItemBasicInfoDTO> response = itemBasicInfoAdapter.selectServiceCategory(sessionId, categoryId);

        if (response.getStatusCode().is2xxSuccessful()) {
            log.info("‚úÖ –ö–ê–¢–ï–ì–û–†–Ü–Ø –í–ò–ë–†–ê–ù–ê: sessionId={}, categoryId={}", sessionId, categoryId);
        } else {
            log.error("‚ùå –ü–û–ú–ò–õ–ö–ê –í–ò–ë–û–†–£ –ö–ê–¢–ï–ì–û–†–Ü–á: sessionId={}, categoryId={}, —Å—Ç–∞—Ç—É—Å={}",
                    sessionId, categoryId, response.getStatusCode());
        }

        return response;
    }

    @Operation(
        summary = "–û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
        operationId = "substep1GetItemsForCategory",
        tags = {"Order Wizard - Stage 2 Substep 1", "Price List Items"}
    )
    @GetMapping("/categories/{categoryId}/items")
    public ResponseEntity<List<PriceListItemDTO>> getItemsForCategory(@PathVariable UUID categoryId) {
        return itemBasicInfoAdapter.getItemsForCategory(categoryId);
    }

    @Operation(
        summary = "–í–∏–±–∏—Ä–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞",
        operationId = "substep1SelectPriceListItem",
        tags = {"Order Wizard - Stage 2 Substep 1", "Price List Items"}
    )
    @PostMapping("/{sessionId}/select-item")
    public ResponseEntity<ItemBasicInfoDTO> selectPriceListItem(
            @PathVariable UUID sessionId,
            @RequestParam UUID itemId) {
        return itemBasicInfoAdapter.selectPriceListItem(sessionId, itemId);
    }

    @Operation(
        summary = "–í–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å",
        operationId = "substep1EnterQuantity",
        tags = {"Order Wizard - Stage 2 Substep 1", "Quantity"}
    )
    @PostMapping("/{sessionId}/enter-quantity")
    public ResponseEntity<ItemBasicInfoDTO> enterQuantity(
            @PathVariable UUID sessionId,
            @RequestParam BigDecimal quantity) {
        return itemBasicInfoAdapter.enterQuantity(sessionId, quantity);
    }

    @Operation(
        summary = "–í–∞–ª—ñ–¥—É—î —Ç–∞ –∑–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 1",
        operationId = "substep1ValidateAndComplete",
        tags = {"Order Wizard - Stage 2 Substep 1", "Validation"}
    )
    @PostMapping("/{sessionId}/validate-and-complete")
    public ResponseEntity<ItemBasicInfoDTO> validateAndCompleteSubstep1(@PathVariable UUID sessionId) {
        return itemBasicInfoAdapter.validateAndComplete(sessionId);
    }

    @Operation(
        summary = "–û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 1",
        operationId = "substep1GetStatus",
        tags = {"Order Wizard - Stage 2 Substep 1", "Status"}
    )
    @GetMapping("/{sessionId}/status")
    public ResponseEntity<SubstepResultDTO> getSubstep1Status(@PathVariable UUID sessionId) {
        return itemBasicInfoAdapter.getStatus(sessionId);
    }

    @Operation(
        summary = "–°–∫–∏–¥–∞—î –ø—ñ–¥–µ—Ç–∞–ø 1 –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É",
        operationId = "substep1Reset",
        tags = {"Order Wizard - Stage 2 Substep 1", "Session Management"}
    )
    @PostMapping("/{sessionId}/reset")
    public ResponseEntity<ItemBasicInfoDTO> resetSubstep1(@PathVariable UUID sessionId) {
        return itemBasicInfoAdapter.resetSubstep(sessionId);
    }

    @Operation(
        summary = "–ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é –ø—ñ–¥–µ—Ç–∞–ø—É 1",
        operationId = "substep1FinalizeSession",
        tags = {"Order Wizard - Stage 2 Substep 1", "Session Management"}
    )
    @DeleteMapping("/{sessionId}")
    public ResponseEntity<Void> finalizeSubstep1Session(@PathVariable UUID sessionId) {
        return itemBasicInfoAdapter.finalizeSession(sessionId);
    }
}
