package com.aksi.api.dto;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 * DTO –∫–ª–∞—Å–∏ –¥–ª—è OrderWizardMainController API
 *
 * –í–∏–Ω–µ—Å–µ–Ω—ñ –≤ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ —Ç–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.
 * –î–æ—Ç—Ä–∏–º—É—î–º–æ—Å—å –ø—Ä–∏–Ω—Ü–∏–ø—É Single Responsibility - –∫–æ–∂–µ–Ω –∫–ª–∞—Å –º–∞—î –æ–¥–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å.
 */
public class OrderWizardApiDto {

    /**
     * –°—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤'—è —Å–∏—Å—Ç–µ–º–∏
     */
    public static class HealthStatus {
        public final String status = "üéØ Order Wizard API –ø–æ–≤–Ω—ñ—Å—Ç—é –≥–æ—Ç–æ–≤–∏–π";
        public final String version = "1.0.0";
        public final boolean allStagesReady = true;
        public final int totalStages = 4;
        public final int totalSubsteps = 5; // —É Stage2
        public final int totalAdapters = 12; // –≤—Å—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏
        public final String architecture = "DDD + Spring State Machine";
    }

    /**
     * –ü–æ–≤–Ω–∞ –º–∞–ø–∞ API endpoints
     */
    public static class CompleteApiMap {
        public final MainApi main = new MainApi();
        public final Stage1Api stage1 = new Stage1Api();
        public final Stage2Api stage2 = new Stage2Api();
        public final Stage3Api stage3 = new Stage3Api();
        public final Stage4Api stage4 = new Stage4Api();
        public final String baseUrl = "/order-wizard";
        public final String documentation = "–í—Å—ñ endpoints –≥–æ—Ç–æ–≤—ñ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è";

        public static class MainApi {
            public final String description = "–û—Å–Ω–æ–≤–Ω–∏–π –∞–¥–∞–ø—Ç–µ—Ä Order Wizard";
            public final String endpoint = "/order-wizard";
            public final String adapterClass = "OrderWizardAdapter";
        }

        public static class Stage1Api {
            public final String description = "–ö–ª—ñ—î–Ω—Ç —Ç–∞ –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è";
            public final String clientSearch = "/order-wizard/stage1/client-search (ClientSearchAdapter)";
            public final String newClientForm = "/order-wizard/stage1/new-client-form (NewClientFormAdapter)";
            public final String basicOrderInfo = "/order-wizard/stage1/basic-order-info (BasicOrderInfoAdapter)";
            public final List<String> operations = List.of(
                "initialize", "search", "select", "create", "validate", "complete"
            );
        }

        public static class Stage2Api {
            public final String description = "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ (5 –ø—ñ–¥–µ—Ç–∞–ø—ñ–≤)";
            public final String main = "/order-wizard/stage2 (Stage2StateMachineAdapter)";
            public final Substeps substeps = new Substeps();
            public final List<String> operations = List.of(
                "initialize", "addItem", "editItem", "deleteItem", "calculatePrice", "complete"
            );

            public static class Substeps {
                public final String substep1 = "/order-wizard/stage2/substep1 (ItemBasicInfoAdapter)";
                public final String substep2 = "/order-wizard/stage2/substep2 (ItemCharacteristicsStateMachineAdapter)";
                public final String substep3 = "/order-wizard/stage2/substep3 (StainsDefectsAdapter)";
                public final String substep4 = "/order-wizard/stage2/substep4 (PriceDiscountAdapter)";
                public final String substep5 = "/order-wizard/stage2/substep5 (PhotoDocumentationAdapter)";
            }
        }

        public static class Stage3Api {
            public final String description = "–ó–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è";
            public final String main = "/order-wizard/stage3 (Stage3StateMachineAdapter)";
            public final List<String> operations = List.of(
                "initialize", "setExecutionDate", "applyDiscount", "setPayment", "complete"
            );
        }

        public static class Stage4Api {
            public final String description = "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è";
            public final String main = "/order-wizard/stage4 (Stage4StateMachineAdapter)";
            public final List<String> operations = List.of(
                "initialize", "review", "confirm", "generateReceipt", "complete"
            );
        }
    }

    /**
     * –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –µ—Ç–∞–ø
     */
    public static class StageInfo {
        public final int stageNumber;
        public final String title;
        public final String description;
        public final List<String> substeps;
        public final String adapterClass;
        public final boolean isReady;

        public StageInfo(int stageNumber) {
            this.stageNumber = stageNumber;
            var stageData = switch (stageNumber) {
                case 1 -> new StageData(
                    "–ö–ª—ñ—î–Ω—Ç —Ç–∞ –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è",
                    "–ü–æ—à—É–∫/—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞, –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
                    List.of("ClientSearch", "NewClientForm", "BasicOrderInfo"),
                    "3 –æ–∫—Ä–µ–º—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏",
                    true
                );
                case 2 -> new StageData(
                    "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤",
                    "–¶–∏–∫–ª—ñ—á–Ω–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑ 5 –ø—ñ–¥–µ—Ç–∞–ø–∞–º–∏",
                    List.of("ItemBasicInfo", "ItemCharacteristics", "StainsDefects", "PriceDiscount", "PhotoDocumentation"),
                    "Stage2StateMachineAdapter + 5 substep –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤",
                    true
                );
                case 3 -> new StageData(
                    "–ó–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
                    "–î–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, –∑–Ω–∏–∂–∫–∏, –æ–ø–ª–∞—Ç–∞",
                    List.of("ExecutionParams", "Discounts", "Payment", "AdditionalInfo"),
                    "Stage3StateMachineAdapter",
                    true
                );
                case 4 -> new StageData(
                    "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è",
                    "–ü–µ—Ä–µ–≥–ª—è–¥, –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó",
                    List.of("Review", "LegalAspects", "ReceiptGeneration"),
                    "Stage4StateMachineAdapter",
                    true
                );
                default -> new StageData("–ù–µ–≤—ñ–¥–æ–º–∏–π –µ—Ç–∞–ø", "–ï—Ç–∞–ø –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ", List.of(), "None", false);
            };

            this.title = stageData.title;
            this.description = stageData.description;
            this.substeps = stageData.substeps;
            this.adapterClass = stageData.adapterClass;
            this.isReady = stageData.isReady;
        }

        private record StageData(String title, String description, List<String> substeps, String adapterClass, boolean isReady) {}
    }

    /**
     * –°—Ç–∞—Ç—É—Å–∏ –≤—Å—ñ—Ö –µ—Ç–∞–ø—ñ–≤
     */
    public static class StagesStatus {
        public final Map<String, StageStatusInfo> stages = Map.of(
            "main", new StageStatusInfo("‚úÖ –ì–æ—Ç–æ–≤–∏–π", 1, "OrderWizardAdapter - –æ—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä"),
            "stage1", new StageStatusInfo("‚úÖ –ì–æ—Ç–æ–≤–∏–π", 3, "ClientSearch, NewClientForm, BasicOrderInfo"),
            "stage2", new StageStatusInfo("‚úÖ –ì–æ—Ç–æ–≤–∏–π", 6, "–ì–æ–ª–æ–≤–Ω–∏–π + 5 –ø—ñ–¥–µ—Ç–∞–ø—ñ–≤ - –≤—Å—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏ –≥–æ—Ç–æ–≤—ñ"),
            "stage3", new StageStatusInfo("‚úÖ –ì–æ—Ç–æ–≤–∏–π", 1, "–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, –∑–Ω–∏–∂–∫–∏, –æ–ø–ª–∞—Ç–∞"),
            "stage4", new StageStatusInfo("‚úÖ –ì–æ—Ç–æ–≤–∏–π", 1, "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –∫–≤–∏—Ç–∞–Ω—Ü—ñ—è")
        );
        public final String overall = "‚úÖ –í—Å—ñ –µ—Ç–∞–ø–∏ –≥–æ—Ç–æ–≤—ñ –¥–æ —Ä–æ–±–æ—Ç–∏";
        public final int totalReadyStages = 4;
        public final int totalStages = 4;
        public final int totalAdapters = 12;

        public static class StageStatusInfo {
            public final String status;
            public final int adaptersCount;
            public final String description;

            public StageStatusInfo(String status, int adaptersCount, String description) {
                this.status = status;
                this.adaptersCount = adaptersCount;
                this.description = description;
            }
        }
    }

    /**
     * –§–ª–æ—É-–∫–∞—Ä—Ç–∞ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
     */
    public static class WorkflowMap {
        public final String description = "–ü–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —Ä–æ–±–æ—Ç–∏ –∑ Order Wizard";
        public final List<WorkflowStep> steps = List.of(
            new WorkflowStep(1, "–ö–ª—ñ—î–Ω—Ç", "–ü–æ—à—É–∫ –∞–±–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ + –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", true),
            new WorkflowStep(2, "–ü—Ä–µ–¥–º–µ—Ç–∏", "–î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ —á–µ—Ä–µ–∑ 5 –ø—ñ–¥–µ—Ç–∞–ø—ñ–≤ (—Ü–∏–∫–ª—ñ—á–Ω–æ)", true),
            new WorkflowStep(3, "–ü–∞—Ä–∞–º–µ—Ç—Ä–∏", "–î–∞—Ç–∞, –∑–Ω–∏–∂–∫–∏, –æ–ø–ª–∞—Ç–∞, –¥–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è", true),
            new WorkflowStep(4, "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è", "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è, –ø—ñ–¥–ø–∏—Å, –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó", true)
        );
        public final String note = "–ï—Ç–∞–ø 2 –º–æ–∂–µ –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤";

        public static class WorkflowStep {
            public final int step;
            public final String title;
            public final String description;
            public final boolean isReady;

            public WorkflowStep(int step, String title, String description, boolean isReady) {
                this.step = step;
                this.title = title;
                this.description = description;
                this.isReady = isReady;
            }
        }
    }

    /**
     * –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—Å—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏
     */
    public static class AdaptersInfo {
        public final String title = "üîß Order Wizard Adapters Information";
        public final Map<String, String> adapters;
        public final String description = "–í—Å—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏ Order Wizard –∑ –æ–ø–∏—Å–æ–º —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ";

        public AdaptersInfo() {
            Map<String, String> adapterMap = new LinkedHashMap<>();
            adapterMap.put("OrderWizardAdapter", "–ì–æ–ª–æ–≤–Ω–∏–π –∞–¥–∞–ø—Ç–µ—Ä Order Wizard");
            adapterMap.put("ClientSearchAdapter", "Stage1: –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤");
            adapterMap.put("NewClientFormAdapter", "Stage1: –§–æ—Ä–º–∞ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞");
            adapterMap.put("BasicOrderInfoAdapter", "Stage1: –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è");
            adapterMap.put("Stage2StateMachineAdapter", "Stage2: –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏");
            adapterMap.put("ItemBasicInfoAdapter", "Stage2.1: –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–µ–¥–º–µ—Ç–∞");
            adapterMap.put("ItemCharacteristicsAdapter", "Stage2.2: –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞");
            adapterMap.put("StainsDefectsAdapter", "Stage2.3: –ó–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è —Ç–∞ –¥–µ—Ñ–µ–∫—Ç–∏");
            adapterMap.put("PriceDiscountAdapter", "Stage2.4: –¶—ñ–Ω–∏ —Ç–∞ –∑–Ω–∏–∂–∫–∏");
            adapterMap.put("PhotoDocumentationAdapter", "Stage2.5: –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è");
            adapterMap.put("Stage3StateMachineAdapter", "Stage3: –ó–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏");
            adapterMap.put("Stage4StateMachineAdapter", "Stage4: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—è");
            this.adapters = Collections.unmodifiableMap(adapterMap);
        }
    }

    /**
     * –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏
     */
    public static class SystemStats {
        public final boolean allAdaptersReady;
        public final int readyAdaptersCount;
        public final int totalAdapters;
        public final double readinessPercentage;
        public final String status;
        public final String timestamp;

        public SystemStats(boolean allReady, int readyCount, int totalAdapters) {
            this.allAdaptersReady = allReady;
            this.readyAdaptersCount = readyCount;
            this.totalAdapters = totalAdapters;
            this.readinessPercentage = (double) readyCount / totalAdapters * 100;
            this.status = allReady ? "üéØ –°–∏—Å—Ç–µ–º–∞ –ø–æ–≤–Ω—ñ—Å—Ç—é –≥–æ—Ç–æ–≤–∞" :
                         readyCount > 8 ? "‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∫–æ–≤–æ –≥–æ—Ç–æ–≤–∞" : "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞";
            this.timestamp = java.time.LocalDateTime.now().toString();
        }
    }
}
