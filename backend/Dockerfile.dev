# Development Dockerfile for Spring Boot with Maven Wrapper and optimized builds
FROM bellsoft/liberica-openjdk-alpine:21

# Install essential tools for development (removing Maven - we'll use wrapper)
RUN apk add --no-cache \
    bash \
    curl \
    wget \
    tar \
    gzip \
    findutils

# Create non-root user to match host user (1000:1000)
RUN addgroup -g 1000 appgroup && \
    adduser -u 1000 -G appgroup -s /bin/bash -D appuser

WORKDIR /app

# Change ownership of app directory
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Set environment variables for development
ENV SPRING_PROFILES_ACTIVE=dev
ENV JAVA_OPTS="-Xms512m -Xmx2048m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.NoOpLog"
ENV MAVEN_OPTS="-Xmx1024m -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN -Dorg.slf4j.simpleLogger.log.org.openapitools=ERROR"

# Copy Maven Wrapper files first
COPY --chown=appuser:appgroup .mvn/ .mvn/
COPY --chown=appuser:appgroup mvnw pom.xml ./

# Make Maven Wrapper executable
RUN chmod +x mvnw

# Download dependencies using dev-fast profile (this layer will be cached)
# Using dev-fast profile to skip unnecessary steps for development
RUN ./mvnw dependency:go-offline -B -Pdev-fast -q

# Copy the rest of the source code
COPY --chown=appuser:appgroup src ./src

# Expose ports: Spring Boot and Debug
EXPOSE 8080 5005

# Create logs directory
RUN mkdir -p logs

# Development command using Maven Wrapper with dev-fast profile
# This skips tests, checkstyle, spotless, and OpenAPI generation for faster startup
CMD ["./mvnw", "spring-boot:run", "-q", \
     "-Pdev-fast", \
     "-Dspring-boot.run.profiles=dev", \
     "-Dspring-boot.run.jvmArguments=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Dorg.apache.commons.logging.Log=org.apache.commons.logging.impl.NoOpLog"]
