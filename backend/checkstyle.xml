<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration for "AKSI Dry Cleaning" project
    Based on Google Java Style with modifications for Spring Boot projects with DDD

    Core principles:
    1. Java Code Conventions compliance
    2. Code consistency across the entire project
    3. Improved code readability and maintainability
    4. Early detection of potential errors
    5. Spring Best Practices and DDD compliance
    6. No code duplication and hardcoding
-->

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="warning"/>
    <property name="fileExtensions" value="java, properties, xml, yml, yaml"/>

    <!-- Exclude unnecessary files from checks -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern"
            value="(.*[\\/]target[\\/].*|.*[\\/]generated-sources[\\/].*|.*[\\/]generated-test-sources[\\/].*|.*[\\/]bin[\\/].*|.*\.(gif|png|jpg|jpeg|svg|ico|json))$"/>
    </module>

    <!-- File format checks -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!-- Line length -->
    <module name="LineLength">
        <property name="max" value="120"/>
        <property name="ignorePattern"
            value="^\s*\*\s*@|^\s*\*\s*\[|^\s*\*\s*[a-zA-Z0-9_]+=|^\s*\*\s*https?://|^import\s+.*|^package\s+.*"/>
    </module>

    <!-- Suppressions file -->
    <module name="SuppressionFilter">
        <property name="file" value="${checkstyle.suppressions.file}" default="checkstyle-suppressions.xml"/>
    </module>

    <!-- File-level checks -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <message key="regexp.exceeded" value="Line has trailing spaces."/>
    </module>

    <module name="RegexpSingleline">
        <property name="format" value="\r\n"/>
        <message key="regexp.exceeded" value="Line has Windows line ending (CRLF)."/>
    </module>

    <!-- Check for hardcoded URLs and paths ONLY in Java files -->
    <module name="RegexpSingleline">
        <property name="format" value="&quot;(http|https|ftp)://"/>
        <property name="fileExtensions" value="java"/>
        <message key="regexp.exceeded" value="Hardcoded URLs should be moved to configuration"/>
    </module>

    <!-- Check for is prefix ONLY in Java files -->
    <module name="RegexpSingleline">
        <property name="format" value="private\s+boolean\s+is[A-Z]"/>
        <property name="fileExtensions" value="java"/>
        <message key="regexp.exceeded" value="Avoid using is prefix for boolean fields to prevent issues with OpenAPI and JSON serialization."/>
    </module>

    <module name="TreeWalker">
        <!-- General settings -->
        <property name="tabWidth" value="4"/>

        <!-- Imports -->
        <module name="AvoidStarImport">
            <property name="excludes" value="java.util.stream,java.util.function,java.util.concurrent,jakarta.validation.constraints,org.junit.jupiter.api.*,org.mockito.*,org.assertj.core.api.*,org.springframework.test.context.*"/>
        </module>
        <module name="IllegalImport">
            <property name="illegalPkgs" value="java.awt, javax.swing, sun."/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Documentation -->
        <module name="JavadocType">
            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,ENUM_DEF,ANNOTATION_DEF"/>
            <message key="javadoc.missing" value="Missing Javadoc comment."/>
        </module>

        <module name="JavadocMethod">
            <property name="accessModifiers" value="public, protected"/>
            <property name="validateThrows" value="false"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="allowedAnnotations" value="Override,Test,BeforeEach,AfterEach,BeforeAll,AfterAll,ParameterizedTest,ValueSource,NullSource,EmptySource"/>
        </module>

        <module name="JavadocVariable">
            <property name="accessModifiers" value="public, protected"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>

        <module name="JavadocStyle">
            <property name="checkFirstSentence" value="false"/>
            <property name="checkHtml" value="false"/>
            <property name="checkEmptyJavadoc" value="true"/>
        </module>

        <!-- Names -->
        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9_$]*$"/>
            <message key="name.invalidPattern" value="Type ''{0}'' should use PascalCase to match TypeScript/JavaScript conventions."/>
        </module>

        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern" value="Method ''{0}'' should use camelCase to match TypeScript/JavaScript conventions."/>
        </module>

        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>

        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
        </module>

        <module name="MemberName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Field ''{0}'' should use camelCase to match TypeScript/JavaScript conventions."/>
        </module>

        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]?)$"/>
        </module>

        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]?)$"/>
        </module>

        <!-- Code formatting -->
        <module name="LeftCurly">
            <property name="option" value="eol"/>
            <property name="tokens" value="ANNOTATION_DEF,CLASS_DEF,CTOR_DEF,ENUM_CONSTANT_DEF,ENUM_DEF,INTERFACE_DEF,LAMBDA,LITERAL_CASE,LITERAL_CATCH,LITERAL_DEFAULT,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,METHOD_DEF,OBJBLOCK,STATIC_INIT,COMPACT_CTOR_DEF,RECORD_DEF"/>
        </module>

        <module name="RightCurly">
            <property name="option" value="same"/>
        </module>

        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI, TYPECAST, LITERAL_IF, LITERAL_ELSE, LITERAL_WHILE, LITERAL_DO, LITERAL_FOR, DO_WHILE"/>
        </module>

        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle"/>
        <module name="MissingSwitchDefault"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>
        <module name="ModifierOrder">
            <property name="tokens" value="MODIFIERS"/>
        </module>

        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="tokens" value="PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
        </module>

        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>

        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>

        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z0-9]+)*$"/>
        </module>

        <module name="MethodLength">
            <property name="max" value="100"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF, COMPACT_CTOR_DEF"/>
        </module>

        <module name="ParameterNumber">
            <property name="max" value="12"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
        </module>

        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>

        <module name="NestedTryDepth">
            <property name="max" value="2"/>
        </module>

        <!-- Spring specific checks -->
        <module name="SuppressWarnings">
            <property name="format" value="^unchecked$|^unused$|^rawtypes$|^deprecation$|^synthetic-access$|^resource$|^try$"/>
        </module>

        <module name="SuppressWarningsHolder"/>

        <!-- Lombok specific settings -->
        <module name="SuppressWarnings">
            <property name="format" value="^lombok"/>
            <property name="tokens" value="ANNOTATION_FIELD_DEF,CLASS_DEF,CTOR_DEF,ENUM_CONSTANT_DEF,ENUM_DEF,INTERFACE_DEF,METHOD_DEF,PARAMETER_DEF,VARIABLE_DEF"/>
        </module>

        <!-- Other checks -->
        <module name="FinalClass">
            <property name="severity" value="ignore"/>
        </module>

        <module name="HideUtilityClassConstructor">
            <property name="severity" value="ignore"/>
        </module>

        <module name="ExplicitInitialization">
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>

        <module name="DefaultComesLast">
            <property name="skipIfLastAndSharedWithCase" value="true"/>
        </module>

        <module name="UnnecessaryParentheses">
            <property name="tokens" value="EXPR, LAMBDA"/>
        </module>

        <module name="OneTopLevelClass"/>
        <module name="NoFinalizer"/>
        <!-- Disabled: OverloadMethodsDeclarationOrder - not critical for code quality
        <module name="OverloadMethodsDeclarationOrder"/>
        -->

        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated, @see, @since, @serial, @serialField, @serialData, @author, @version, @category, @uses, @provides, @apiNote, @implSpec, @implNote, @hidden, @index"/>
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF, ANNOTATION_DEF, ANNOTATION_FIELD_DEF, RECORD_DEF, COMPACT_CTOR_DEF"/>
        </module>

        <module name="JavadocTagContinuationIndentation"/>

        <!-- Disabled: SummaryJavadoc - unnecessary rule that requires dots in all Javadoc comments
        <module name="SummaryJavadoc">
            <property name="forbiddenSummaryFragments" value="^@return the *|^This method returns |^A \{[^}]*\} (is )?(a )?[a-zA-Z0-9]+\s*\."/>
        </module>
        -->

        <module name="JavadocParagraph">
            <property name="allowNewlineParagraph" value="false"/>
        </module>
    </module>
</module>
