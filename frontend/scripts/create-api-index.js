#!/usr/bin/env node
/**
 * @fileoverview –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è index.ts —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö API –¥–æ–º–µ–Ω—ñ–≤
 */

const fs = require('fs');
const path = require('path');

// –ú–∞–ø–∞ –¥–æ–º–µ–Ω—ñ–≤ —Ç–∞ —ó—Ö –æ–ø–∏—Å—ñ–≤
const DOMAIN_DESCRIPTIONS = {
  auth: '–∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó',
  branch: '—Ä–æ–±–æ—Ç–∏ –∑ –ø—É–Ω–∫—Ç–∞–º–∏ –ø—Ä–∏–π–æ–º—É',
  client: '—Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏ —Ç–∞ –ø—ñ–¥–ø–∏—Å–∞–º–∏',
  order: "—Ä–æ–±–æ—Ç–∏ –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è–º–∏ —Ç–∞ –ø–æ–≤'—è–∑–∞–Ω–∏–º–∏ –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏",
  pricing: '—Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ñ–≤',
  user: '—Ä–æ–±–æ—Ç–∏ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ —Å–∏—Å—Ç–µ–º–∏',
  receipt: '—Ä–æ–±–æ—Ç–∏ –∑ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—è–º–∏',
  test: '—Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è API',
  full: '–ø–æ–≤–Ω–æ–≥–æ API (–≤—Å—ñ endpoints)',
};

/**
 * –°—Ç–≤–æ—Ä—é—î index.ts —Ñ–∞–π–ª –¥–ª—è –¥–æ–º–µ–Ω—É
 */
function createIndexFile(domainPath, domainName) {
  const domainDescription = DOMAIN_DESCRIPTIONS[domainName] || `—Ä–æ–±–æ—Ç–∏ –∑ ${domainName}`;
  const capitalizedDomain = domainName.charAt(0).toUpperCase() + domainName.slice(1);

  const indexContent = `/**
 * @fileoverview –ü—É–±–ª—ñ—á–Ω–µ API –¥–æ–º–µ–Ω—É ${capitalizedDomain}
 *
 * –ï–∫—Å–ø–æ—Ä—Ç—É—î –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —Ç–∏–ø–∏ —Ç–∞ —Ö—É–∫–∏ –¥–ª—è ${domainDescription}
 */

// –ï–∫—Å–ø–æ—Ä—Ç –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π —Ç–∞ —Ö—É–∫—ñ–≤
export * from './aksiApi';

// –ï–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø—ñ–≤ —Ç–∞ —Å—Ö–µ–º
export * from './aksiApi.schemas';
`;

  const indexPath = path.join(domainPath, 'index.ts');

  try {
    fs.writeFileSync(indexPath, indexContent, 'utf8');
    console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ ${indexPath}`);
  } catch (error) {
    console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è ${indexPath}:`, error.message);
  }
}

/**
 * –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
 */
function main() {
  const generatedApiPath = path.join(__dirname, '..', 'shared', 'api', 'generated');

  if (!fs.existsSync(generatedApiPath)) {
    console.log('üìÅ –ü–∞–ø–∫–∞ generated API –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞');
    return;
  }

  const domains = fs
    .readdirSync(generatedApiPath, { withFileTypes: true })
    .filter((dirent) => dirent.isDirectory())
    .map((dirent) => dirent.name);

  console.log(`üîÑ –ó–Ω–∞–π–¥–µ–Ω–æ –¥–æ–º–µ–Ω—ñ–≤: ${domains.join(', ')}`);

  domains.forEach((domain) => {
    const domainPath = path.join(generatedApiPath, domain);
    const aksiApiPath = path.join(domainPath, 'aksiApi.ts');

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π aksiApi.ts
    if (fs.existsSync(aksiApiPath)) {
      createIndexFile(domainPath, domain);
    } else {
      console.log(`‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ ${domain} - –Ω–µ–º–∞—î aksiApi.ts`);
    }
  });

  console.log('üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è index.ts —Ñ–∞–π–ª—ñ–≤!');
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —è–∫—â–æ —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É
if (require.main === module) {
  main();
}

module.exports = { main, createIndexFile };
