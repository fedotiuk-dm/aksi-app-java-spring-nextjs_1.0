#!/usr/bin/env node

/**
 * @fileoverview üåç –ì–õ–û–ë–ê–õ–¨–ù–ò–ô BARREL –¥–ª—è –≤—Å—ñ—Ö DOMAIN API –º–æ–¥—É–ª—ñ–≤
 *
 * –°—Ç–≤–æ—Ä—é—î –æ—Å–Ω–æ–≤–Ω–∏–π index.ts —Ñ–∞–π–ª —É shared/api/generated/,
 * —è–∫–∏–π –µ–∫—Å–ø–æ—Ä—Ç—É—î –≤—Å—ñ –¥–æ–º–µ–Ω–∏ –¥–ª—è –∑—Ä—É—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É:
 *
 * import {
 *   useClients,        // –∑ client domain
 *   useBranches,       // –∑ branch domain
 *   useCreateOrder,    // –∑ order domain
 *   useServiceCategories, // –∑ item domain
 *   useReceipts,       // –∑ document domain
 * } from '@/shared/api/generated';
 */

const fs = require('fs');
const path = require('path');

// üîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
const GENERATED_API_DIR = './shared/api/generated';
const GLOBAL_BARREL_PATH = path.join(GENERATED_API_DIR, 'index.ts');

// üè∑Ô∏è –û–ø–∏—Å–∏ –¥–æ–º–µ–Ω—ñ–≤ (—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ –∑ DDD –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é)
const DOMAIN_DESCRIPTIONS = {
  client: 'üë§ Client Domain - —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞–º–∏, –ø–æ—à—É–∫, –∫–æ–Ω—Ç–∞–∫—Ç–∏',
  branch: 'üè¢ Branch Domain - —Ñ—ñ–ª—ñ—ó, –≥—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ—ñ–ª—ñ–π',
  order: 'üì¶ Order Domain - –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
  item: 'üè∑Ô∏è Item Domain - –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥, –ø—Ä–∞–π—Å-–ª–∏—Å—Ç, —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –≤–∞—Ä—Ç–æ—Å—Ç—ñ',
  document: 'üìÑ Document Domain - –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó, –¥–æ–∫—É–º–µ–Ω—Ç–∏, —Ü–∏—Ñ—Ä–æ–≤—ñ –ø—ñ–¥–ø–∏—Å–∏',
};

// üé® –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ barrel —Ñ–∞–π–ª—É
const createGlobalBarrel = (domains) => {
  const timestamp = new Date().toISOString();

  return `// üåç –ì–õ–û–ë–ê–õ–¨–ù–ò–ô BARREL –¥–ª—è –≤—Å—ñ—Ö DOMAIN API –º–æ–¥—É–ª—ñ–≤
// –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ: ${timestamp}
// –ù–µ —Ä–µ–¥–∞–≥—É–π—Ç–µ –≤—Ä—É—á–Ω—É - —Ñ–∞–π–ª –±—É–¥–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–∏–π –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ–π –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
//
// üí° –¶–µ–π —Ñ–∞–π–ª –¥–æ–∑–≤–æ–ª—è—î —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑ –±—É–¥—å-—è–∫–æ–≥–æ –¥–æ–º–µ–Ω—É API:
// import { useClients, useBranches, useCreateOrder, ClientResponse } from '@/shared/api/generated';
//
// üèóÔ∏è –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞: "DDD inside, FSD outside"
// –ö–æ–∂–µ–Ω –¥–æ–º–µ–Ω –º–∞—î –≤–ª–∞—Å–Ω–∏–π –Ω–∞–±—ñ—Ä API —Ö—É–∫—ñ–≤, —Ç–∏–ø—ñ–≤ —Ç–∞ Zod —Å—Ö–µ–º
//
// üéØ –î–æ—Å—Ç—É–ø–Ω—ñ –¥–æ–º–µ–Ω–∏:
${domains.map((domain) => `// - ${domain.name}: ${domain.description}`).join('\n')}

${domains
  .map((domain) => `// ${domain.description}\nexport * from './${domain.name}';`)
  .join('\n\n')}

// üîÑ Re-export –≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ TypeScript
${domains.map((domain) => `export type * from './${domain.name}';`).join('\n')}

// üìö –ü–†–ò–ö–õ–ê–î–ò –í–ò–ö–û–†–ò–°–¢–ê–ù–ù–Ø:
//
// üë§ Client Domain:
//   import { useClients, useCreateClient, ClientResponse } from '@/shared/api/generated';
//
// üè¢ Branch Domain:
//   import { useBranches, BranchResponse } from '@/shared/api/generated';
//
// üì¶ Order Domain:
//   import { useOrders, useCreateOrder, OrderResponse } from '@/shared/api/generated';
//
// üè∑Ô∏è Item Domain:
//   import { useServiceCategories, usePriceList, ItemResponse } from '@/shared/api/generated';
//
// üìÑ Document Domain:
//   import { useReceipts, useDocuments, DocumentResponse } from '@/shared/api/generated';
`;
};

// üöÄ –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
const main = () => {
  console.log('üåç –°–¢–í–û–†–ï–ù–ù–Ø –ì–õ–û–ë–ê–õ–¨–ù–û–ì–û DOMAIN BARREL –§–ê–ô–õ–£');
  console.log('============================================');

  if (!fs.existsSync(GENERATED_API_DIR)) {
    console.error(`‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è ${GENERATED_API_DIR} –Ω–µ —ñ—Å–Ω—É—î!`);
    console.log('üí° –°–ø–æ—á–∞—Ç–∫—É –∑–∞–ø—É—Å—Ç—ñ—Ç—å: npm run orval');
    process.exit(1);
  }

  // –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω—ñ–≤
  const domainNames = fs
    .readdirSync(GENERATED_API_DIR, { withFileTypes: true })
    .filter((dirent) => dirent.isDirectory())
    .map((dirent) => dirent.name);

  if (domainNames.length === 0) {
    console.log('‚ö†Ô∏è  –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–æ–º–µ–Ω—ñ–≤ API –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –µ–∫—Å–ø–æ—Ä—Ç—É');
    return;
  }

  // –§–æ—Ä–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –¥–æ–º–µ–Ω–∏
  const domains = domainNames.map((name) => ({
    name,
    description: DOMAIN_DESCRIPTIONS[name] || `üîß –î–æ–º–µ–Ω ${name}`,
  }));

  console.log(`üì¶ –ó–Ω–∞–π–¥–µ–Ω–æ ${domains.length} –¥–æ–º–µ–Ω(–∏):`);
  domains.forEach((domain) => {
    console.log(`   - ${domain.name}: ${domain.description}`);
  });

  // –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π barrel
  const globalBarrelContent = createGlobalBarrel(domains);

  try {
    fs.writeFileSync(GLOBAL_BARREL_PATH, globalBarrelContent, 'utf8');
    console.log('');
    console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π barrel: ${GLOBAL_BARREL_PATH}`);
    console.log('');
    console.log('üéâ –ó–ê–í–ï–†–®–ï–ù–û! –¢–µ–ø–µ—Ä –¥–æ—Å—Ç—É–ø–Ω—ñ –≥–ª–æ–±–∞–ª—å–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏:');
    console.log('');
    console.log('üìù –ü–†–ò–ö–õ–ê–î–ò:');
    console.log('   import { useClients } from "@/shared/api/generated";');
    console.log('   import { useBranches } from "@/shared/api/generated";');
    console.log('   import { useCreateOrder } from "@/shared/api/generated";');
    console.log('   import { useServiceCategories } from "@/shared/api/generated";');
    console.log('   import { useReceipts } from "@/shared/api/generated";');
    console.log('');
    console.log('üîß –ê–ë–û –¥–æ–º–µ–Ω–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏:');
    console.log('   import { useClients } from "@/shared/api/generated/client";');
    console.log('   import { useBranches } from "@/shared/api/generated/branch";');
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ barrel:', error.message);
    process.exit(1);
  }
};

// üèÉ‚Äç‚ôÇÔ∏è –ó–∞–ø—É—Å–∫
if (require.main === module) {
  main();
}

module.exports = { main, createGlobalBarrel };
