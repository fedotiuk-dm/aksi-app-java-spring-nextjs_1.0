#!/usr/bin/env node

/**
 * @fileoverview –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤'—è API –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—î—é
 */

const axios = require('axios');

const API_BASE_URL = process.env.API_URL || 'http://localhost:8080';
const TIMEOUT = 10000; // 10 —Å–µ–∫—É–Ω–¥

async function checkApiHealth() {
  console.log('üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API...');

  try {
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ endpoint
    const response = await axios.get(`${API_BASE_URL}/api/v3/api-docs`, {
      timeout: TIMEOUT,
    });

    if (response.status === 200) {
      console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç–∞ –ø—Ä–∞—Ü—é—î');
      console.log(`üìä –†–æ–∑–º—ñ—Ä OpenAPI —Å—Ö–µ–º–∏: ${JSON.stringify(response.data).length} –±–∞–π—Ç`);
      return true;
    }
  } catch (error) {
    console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π:', {
      message: error.message,
      code: error.code,
      status: error.response?.status,
    });

    if (error.code === 'ECONNREFUSED') {
      console.log('üí° –ü—ñ–¥–∫–∞–∑–∫–∞: –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ –±–µ–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞ –ø–æ—Ä—Ç—ñ 8080');
    }

    return false;
  }
}

async function main() {
  const isHealthy = await checkApiHealth();
  process.exit(isHealthy ? 0 : 1);
}

if (require.main === module) {
  main();
}

module.exports = { checkApiHealth };
