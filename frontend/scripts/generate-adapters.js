#!/usr/bin/env node

/**
 * @fileoverview –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤ –¥–ª—è Order Wizard –¥–æ–º–µ–Ω—ñ–≤
 *
 * –°–ø—Ä–æ—â–µ–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–º–µ–Ω–Ω–∏—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤ –Ω–∞ –æ—Å–Ω–æ–≤—ñ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤.
 * –§–æ–∫—É—Å –Ω–∞ Order Wizard –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞—Ö —Ç–∞ "DDD inside, FSD outside" –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—ñ.
 *
 * –ü—Ä–æ—Ü–µ—Å:
 * 1. –ê–Ω–∞–ª—ñ–∑—É—î –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ Orval —Ç–∏–ø–∏
 * 2. –°—Ç–≤–æ—Ä—é—î –∞–¥–∞–ø—Ç–µ—Ä–∏ –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó API -> Domain —Ç–∏–ø—ñ–≤
 * 3. –ì–µ–Ω–µ—Ä—É—î —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Order Wizard –¥–æ–º–µ–Ω–∞–º–∏
 *
 * –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
 * npm run generate-adapters
 */

const fs = require('fs');
const path = require('path');

// üîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è Order Wizard
const CONFIG = {
  // –®–ª—è—Ö–∏
  outputDir: path.join(__dirname, '../domains/wizard/shared/adapters'),
  generatedTypesFile: path.join(__dirname, '../shared/api/generated/wizard/aksiApi.schemas.ts'),

  // Order Wizard –¥–æ–º–µ–Ω–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä—ñ–≤ —Ç–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∏
  domains: {
    // –û—Å–Ω–æ–≤–Ω—ñ –µ—Ç–∞–ø–∏ (Stage Controllers)
    stage1: {
      name: 'stage1',
      tag: 'Stage 1 API',
      description: '–ï—Ç–∞–ø 1: –ö–ª—ñ—î–Ω—Ç —Ç–∞ –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
      types: ['Client', 'Branch', 'Order', 'ClientSearch', 'ContactMethod'],
      features: ['client-search', 'client-creation', 'basic-order-info'],
    },
    stage2: {
      name: 'stage2',
      tag: 'Stage 2 Main API',
      description: '–ï—Ç–∞–ø 2: –ì–æ–ª–æ–≤–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤',
      types: ['Item', 'ItemManager', 'ItemList'],
      features: ['item-manager'],
    },
    stage3: {
      name: 'stage3',
      tag: 'Stage 3 API',
      description: '–ï—Ç–∞–ø 3: –ó–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
      types: ['Discount', 'Payment', 'Execution', 'OrderParams'],
      features: ['execution-params', 'discounts', 'payment'],
    },
    stage4: {
      name: 'stage4',
      tag: 'Stage 4 API',
      description: '–ï—Ç–∞–ø 4: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó',
      types: ['Receipt', 'Legal', 'Review', 'OrderSummary'],
      features: ['order-review', 'legal-aspects', 'receipt-generation'],
    },

    // –ü—ñ–¥–µ—Ç–∞–ø–∏ Stage 2 (Substep Controllers)
    substep1: {
      name: 'substep1',
      tag: 'Substep 1 API',
      parent: 'stage2',
      description: '–ü—ñ–¥–µ—Ç–∞–ø 2.1: –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç',
      types: ['ItemBasicInfo', 'Category', 'ServiceType'],
      features: ['item-basic-info'],
    },
    substep2: {
      name: 'substep2',
      tag: 'Substep 2 API',
      parent: 'stage2',
      description: '–ü—ñ–¥–µ—Ç–∞–ø 2.2: –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞',
      types: ['Material', 'Color', 'Filling', 'WearLevel'],
      features: ['item-characteristics'],
    },
    substep3: {
      name: 'substep3',
      tag: 'Substep 3 API',
      parent: 'stage2',
      description: '–ü—ñ–¥–µ—Ç–∞–ø 2.3: –ó–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è, –¥–µ—Ñ–µ–∫—Ç–∏ —Ç–∞ —Ä–∏–∑–∏–∫–∏',
      types: ['Stain', 'Defect', 'Risk', 'Damage'],
      features: ['defects-stains'],
    },
    substep4: {
      name: 'substep4',
      tag: 'Substep 4 API',
      parent: 'stage2',
      description: '–ü—ñ–¥–µ—Ç–∞–ø 2.4: –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ —Ç–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏',
      types: ['Price', 'Modifier', 'Coefficient', 'PriceCalculation'],
      features: ['price-calculation'],
    },
    substep5: {
      name: 'substep5',
      tag: 'Substep 5 API',
      parent: 'stage2',
      description: '–ü—ñ–¥–µ—Ç–∞–ø 2.5: –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤',
      types: ['Photo', 'Image', 'Upload', 'Documentation'],
      features: ['photo-upload'],
    },

    // –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä
    wizardMain: {
      name: 'wizard-main',
      tag: 'Order Wizard Main API',
      description: '–ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä Order Wizard (–Ω–∞–≤—ñ–≥–∞—Ü—ñ—è, —Å—Ç–∞–Ω)',
      types: ['WizardState', 'Navigation', 'Progress', 'OrderWizard'],
      features: ['workflow', 'navigation', 'state-management'],
    },
  },
};

/**
 * –ß–∏—Ç–∞—î –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ —Ç–∏–ø–∏ —Ç–∞ –≤–∏—Ç—è–≥—É—î –¥–æ—Å—Ç—É–ø–Ω—ñ –º–æ–¥–µ–ª—ñ
 */
function extractAvailableTypes() {
  if (!fs.existsSync(CONFIG.generatedTypesFile)) {
    console.log('‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ —Ç–∏–ø–∏:', CONFIG.generatedTypesFile);
    return [];
  }

  const content = fs.readFileSync(CONFIG.generatedTypesFile, 'utf8');

  // –í–∏—Ç—è–≥—É—î–º–æ –≤—Å—ñ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏ —Ç–∞ —Ç–∏–ø–∏
  const interfaceMatches = content.match(/export\s+interface\s+(\w+)/g) || [];
  const typeMatches = content.match(/export\s+type\s+(\w+)/g) || [];

  const interfaces = interfaceMatches.map((match) => match.replace(/export\s+interface\s+/, ''));
  const types = typeMatches.map((match) => match.replace(/export\s+type\s+/, ''));

  const allTypes = [...interfaces, ...types];

  console.log(`üìã –ó–Ω–∞–π–¥–µ–Ω–æ ${allTypes.length} —Ç–∏–ø—ñ–≤:`, allTypes.slice(0, 10).join(', '), '...');

  return allTypes;
}

/**
 * –ì–µ–Ω–µ—Ä—É—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è –¥–æ–º–µ–Ω—É
 */
function generateDomainAdapter(domainName, domainInfo, availableTypes) {
  const parentInfo = domainInfo.parent ? ` (–ø—ñ–¥–µ—Ç–∞–ø ${domainInfo.parent})` : '';
  const featuresComment = domainInfo.features
    ? `\n * Features: ${domainInfo.features.join(', ')}`
    : '';

  const adapterContent = `/**
 * @fileoverview –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è ${domainInfo.description}${parentInfo}
 *
 * –¶–µ–π —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è —Å–∫—Ä–∏–ø—Ç–æ–º generate-adapters.js
 * –ù–ï –†–ï–î–ê–ì–£–ô–¢–ï –í–†–£–ß–ù–£!
 *
 * Controller Tag: "${domainInfo.tag}"${featuresComment}
 *
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º—É—î API —Ç–∏–ø–∏ –≤ –¥–æ–º–µ–Ω–Ω—ñ –º–æ–¥–µ–ª—ñ –¥–ª—è Order Wizard
 */

import type {
  // –ó–∞–≥–∞–ª—å–Ω—ñ —Ç–∏–ø–∏ –∑ Orval API –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
  ClientResponse,
  OrderResponse,
  BranchResponse,
  ErrorResponse,
  // –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ç–∏–ø–∏ –¥–ª—è ${domainName}
  // –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ç–∏–ø–∏ –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—ñ API
} from '@/shared/api/generated/wizard/aksiApi.schemas';

// üîÑ –ê–¥–∞–ø—Ç–µ—Ä–∏ –¥–ª—è ${domainInfo.description}

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è ${domainName}
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º—É—î API –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –¥–æ–º–µ–Ω–Ω—ñ –º–æ–¥–µ–ª—ñ
 */
export class ${capitalize(domainName)}Adapter {
  static readonly DOMAIN_NAME = '${domainName}';
  static readonly DOMAIN_TAG = '${domainInfo.tag}';
  static readonly DESCRIPTION = '${domainInfo.description}';
  ${domainInfo.parent ? `static readonly PARENT_STAGE = '${domainInfo.parent}';` : ''}

  /**
   * –ó–∞–≥–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ—ó —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º
   */
  static safeTransform<TInput, TOutput>(
    input: TInput | null | undefined,
    transformer: (input: TInput) => TOutput,
    fallback: TOutput,
    context = 'unknown'
  ): TOutput {
    if (!input) {
      console.debug(\`[${capitalize(domainName)}Adapter] –ü–æ—Ä–æ–∂–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è \${context}\`);
      return fallback;
    }

    try {
      return transformer(input);
    } catch (error) {
      console.warn(\`[${capitalize(domainName)}Adapter] –ü–æ–º–∏–ª–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó —É \${context}:\`, error);
      return fallback;
    }
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î –æ–±'—î–∫—Ç –≤–∞–ª—ñ–¥–Ω–∏–º API response
   */
  static isValidApiResponse<T extends Record<string, unknown>>(
    response: unknown
  ): response is T {
    return response !== null &&
           response !== undefined &&
           typeof response === 'object' &&
           !Array.isArray(response);
  }

  /**
   * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º—É—î –º–∞—Å–∏–≤ API –æ–±'—î–∫—Ç—ñ–≤ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—î—é –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏—Ö
   */
  static transformArray<TInput, TOutput>(
    input: TInput[] | null | undefined,
    transformer: (item: TInput) => TOutput,
    filterInvalid = true
  ): TOutput[] {
    if (!Array.isArray(input)) return [];

    const results: TOutput[] = [];

    for (const item of input) {
      try {
        const transformed = transformer(item);
        if (!filterInvalid || transformed !== null) {
          results.push(transformed);
        }
      } catch (error) {
        if (!filterInvalid) {
          console.warn(\`[${capitalize(domainName)}Adapter] –ü–æ–º–∏–ª–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç–∞:\`, error);
        }
      }
    }

    return results;
  }
}

// üõ†Ô∏è –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ ${domainName} –¥–∞–Ω–∏–º–∏

/**
 * –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö ${domainName}
 */
export const ${domainName}ValidationUtils = {
  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î ID –≤–∞–ª—ñ–¥–Ω–∏–º
   */
  isValidId(id: unknown): id is string {
    return typeof id === 'string' && id.trim().length > 0;
  },

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î –¥–∞—Ç–∞ –≤–∞–ª—ñ–¥–Ω–æ—é ISO —Å—Ç—Ä–æ–∫–æ—é
   */
  isValidDate(date: unknown): date is string {
    if (typeof date !== 'string') return false;
    const parsed = Date.parse(date);
    return !isNaN(parsed) && parsed > 0;
  },

  /**
   * –ë–µ–∑–ø–µ—á–Ω–æ –ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É –∑ fallback
   */
  parseDate(dateString: unknown, fallback: Date | null = null): Date | null {
    if (!this.isValidDate(dateString)) return fallback;

    try {
      const date = new Date(dateString);
      return isNaN(date.getTime()) ? fallback : date;
    } catch {
      return fallback;
    }
  },

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î –æ–±'—î–∫—Ç –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–º
   */
  isNotEmpty(obj: unknown): boolean {
    if (!obj || typeof obj !== 'object') return false;
    return Object.keys(obj).length > 0;
  },

  /**
   * –ë–µ–∑–ø–µ—á–Ω–æ –æ—Ç—Ä–∏–º—É—î —Å—Ç—Ä–æ–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
   */
  getString(value: unknown, fallback = ''): string {
    if (typeof value === 'string') return value;
    if (typeof value === 'number') return value.toString();
    return fallback;
  },

  /**
   * –ë–µ–∑–ø–µ—á–Ω–æ –æ—Ç—Ä–∏–º—É—î —á–∏—Å–ª–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
   */
  getNumber(value: unknown, fallback = 0): number {
    if (typeof value === 'number' && !isNaN(value)) return value;
    if (typeof value === 'string') {
      const parsed = parseFloat(value);
      return isNaN(parsed) ? fallback : parsed;
    }
    return fallback;
  },
} as const;

// üéØ –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è ${domainInfo.description}

/**
 * –£—Ç–∏–ª—ñ—Ç–∏ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –¥–ª—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ ${domainName}
 */
export const ${domainName}SpecificUtils = {
  /**
   * –î–æ–º–µ–Ω–Ω–∞ –Ω–∞–∑–≤–∞ –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ª–∞–¥–∫–∏
   */
  domainName: '${domainName}' as const,

  /**
   * –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –¥–∞–Ω–∏–º–∏ –¥–æ–º–µ–Ω—É
   * –¢—É—Ç –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏ –ø—Ä–∏ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—ñ
   */
  ${
    domainInfo.features
      ? domainInfo.features.map((feature) => `// TODO: –î–æ–¥–∞—Ç–∏ —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è ${feature}`).join('\n  ')
      : '// TODO: –î–æ–¥–∞—Ç–∏ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏'
  }
} as const;

// üì§ –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ –¥–æ–º–µ–Ω–Ω—ñ–π –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä—ñ

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤ ${domainName}
 */
export const ${domainName}Adapters = {
  // –ö–ª–∞—Å–∏ –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
  ${capitalize(domainName)}Adapter,

  // –£—Ç–∏–ª—ñ—Ç–∏
  validationUtils: ${domainName}ValidationUtils,
  specificUtils: ${domainName}SpecificUtils,

  // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
  DOMAIN_INFO: {
    name: '${domainName}',
    tag: '${domainInfo.tag}',
    description: '${domainInfo.description}',
    ${domainInfo.parent ? `parent: '${domainInfo.parent}',` : ''}
    ${domainInfo.features ? `features: ${JSON.stringify(domainInfo.features)},` : ''}
  },
} as const;

// üè∑Ô∏è –¢–∏–ø–∏ –¥–ª—è TypeScript

/**
 * –¢–∏–ø –∞–¥–∞–ø—Ç–µ—Ä–∞ ${domainName}
 */
export type ${capitalize(domainName)}AdapterType = typeof ${capitalize(domainName)}Adapter;

/**
 * –¢–∏–ø —É—Ç–∏–ª—ñ—Ç –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó ${domainName}
 */
export type ${capitalize(domainName)}ValidationUtilsType = typeof ${domainName}ValidationUtils;

/**
 * –ó–∞–≥–∞–ª—å–Ω–∏–π —Ç–∏–ø –µ–∫—Å–ø–æ—Ä—Ç—É –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤ ${domainName}
 */
export type ${capitalize(domainName)}AdaptersType = typeof ${domainName}Adapters;
`;

  return adapterContent;
}

/**
 * –ì–µ–Ω–µ—Ä—É—î —ñ–Ω–¥–µ–∫—Å —Ñ–∞–π–ª –¥–ª—è –≤—Å—ñ—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
 */
function generateAdaptersIndex(domains) {
  const indexContent = `/**
 * @fileoverview –ì–æ–ª–æ–≤–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –¥–ª—è –≤—Å—ñ—Ö Order Wizard –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
 *
 * –¶–µ–π —Ñ–∞–π–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è —Å–∫—Ä–∏–ø—Ç–æ–º generate-adapters.js
 * –ù–ï –†–ï–î–ê–ì–£–ô–¢–ï –í–†–£–ß–ù–£!
 */

// üîÑ –ï–∫—Å–ø–æ—Ä—Ç –≤—Å—ñ—Ö –¥–æ–º–µ–Ω–Ω–∏—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
${Object.keys(domains)
  .map((domain) => `export * from './${domain}.adapter';`)
  .join('\n')}

// üõ†Ô∏è –ó–∞–≥–∞–ª—å–Ω—ñ —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è –≤—Å—ñ—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
export const wizardAdapters = {
${Object.keys(domains)
  .map((domain) => `  ${domain}: () => import('./${domain}.adapter'),`)
  .join('\n')}
} as const;

/**
 * –¢–∏–ø–∏ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
 */
export type WizardAdapterType = keyof typeof wizardAdapters;

/**
 * –ó–∞–≥–∞–ª—å–Ω–∏–π —Ç–∏–ø –¥–ª—è –≤—Å—ñ—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
 */
export type AdapterFunction<TInput, TOutput> = (input: TInput) => TOutput;

/**
 * –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –≤—Å—ñ—Ö –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤
 */
export abstract class BaseAdapter {
  abstract readonly domainName: string;

  /**
   * –õ–æ–≥—É—î –ø–æ–º–∏–ª–∫—É —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó
   */
  protected logTransformError(error: unknown, context: string): void {
    console.warn(\`[\${this.domainName}Adapter] \${context}:\`, error);
  }

  /**
   * –ë–µ–∑–ø–µ—á–Ω–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è–º
   */
  protected safeTransform<TInput, TOutput>(
    input: TInput,
    transformer: (input: TInput) => TOutput,
    fallback: TOutput,
    context: string
  ): TOutput {
    try {
      return transformer(input);
    } catch (error) {
      this.logTransformError(error, context);
      return fallback;
    }
  }
}
`;

  return indexContent;
}

/**
 * –°—Ç–≤–æ—Ä—é—î –ø–∞–ø–∫—É —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
 */
function ensureDirectoryExists(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`üìÅ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–∞–ø–∫—É: ${dirPath}`);
  }
}

/**
 * –ö–∞–ø—ñ—Ç–∞–ª—ñ–∑—É—î –ø–µ—Ä—à–∏–π —Å–∏–º–≤–æ–ª —Ä—è–¥–∫–∞
 */
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
 */
async function main() {
  console.log('üöÄ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤ –¥–ª—è Order Wizard –¥–æ–º–µ–Ω—ñ–≤...');

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤
  const availableTypes = extractAvailableTypes();

  if (availableTypes.length === 0) {
    console.log('‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤. –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–ø–æ—á–∞—Ç–∫—É orval –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é.');
    process.exit(1);
  }

  // –°—Ç–≤–æ—Ä—é—î–º–æ –≤–∏—Ö—ñ–¥–Ω—É –ø–∞–ø–∫—É
  ensureDirectoryExists(CONFIG.outputDir);

  // –ì–µ–Ω–µ—Ä—É—î–º–æ –∞–¥–∞–ø—Ç–µ—Ä–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–æ–º–µ–Ω—É
  Object.entries(CONFIG.domains).forEach(([domainName, domainInfo]) => {
    console.log(`üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–∞–ø—Ç–µ—Ä–∞ –¥–ª—è ${domainName}...`);

    const adapterContent = generateDomainAdapter(domainName, domainInfo, availableTypes);
    const adapterPath = path.join(CONFIG.outputDir, `${domainName}.adapter.ts`);

    fs.writeFileSync(adapterPath, adapterContent, 'utf8');
    console.log(`‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –∞–¥–∞–ø—Ç–µ—Ä: ${domainName}.adapter.ts`);
  });

  // –ì–µ–Ω–µ—Ä—É—î–º–æ —ñ–Ω–¥–µ–∫—Å —Ñ–∞–π–ª
  console.log('üìù –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å —Ñ–∞–π–ª—É...');
  const indexContent = generateAdaptersIndex(CONFIG.domains);
  const indexPath = path.join(CONFIG.outputDir, 'index.ts');

  fs.writeFileSync(indexPath, indexContent, 'utf8');
  console.log('‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ —ñ–Ω–¥–µ–∫—Å —Ñ–∞–π–ª: index.ts');

  console.log('üéâ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!');
  console.log(`üìÇ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤: ${CONFIG.outputDir}`);
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —è–∫—â–æ —Ü–µ –≥–æ–ª–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å
if (require.main === module) {
  main().catch((error) => {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤:', error);
    process.exit(1);
  });
}

module.exports = { main, generateDomainAdapter, generateAdaptersIndex };
