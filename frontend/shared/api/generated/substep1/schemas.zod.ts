/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';

/**
 * @summary –í–∞–ª—ñ–¥—É—î —Ç–∞ –∑–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 1
 */
export const substep1ValidateAndCompleteParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1ValidateAndComplete200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1ValidateAndComplete400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const substep1SelectPriceListItemParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectPriceListItemQueryParams = zod.object({
  "itemId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectPriceListItem200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1SelectPriceListItem400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥–∏
 */
export const substep1SelectServiceCategoryParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectServiceCategoryQueryParams = zod.object({
  "categoryId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectServiceCategory200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1SelectServiceCategory400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î –ø—ñ–¥–µ—Ç–∞–ø 1 –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const substep1ResetParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1Reset200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1Reset400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 */
export const substep1EnterQuantityParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1EnterQuantityQueryParams = zod.object({
  "quantity": zod.coerce.number()
}).strict()

export const substep1EnterQuantity200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1EnterQuantity400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—á–∏–Ω–∞—î –Ω–æ–≤–∏–π –ø—ñ–¥–µ—Ç–∞–ø 1 - –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
 */
export const substep1StartSubstep200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1StartSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 1
 */
export const substep1GetStatusParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1GetStatus200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep1GetStatus400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥
 */
export const substep1GetServiceCategories200ResponseItem = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict()
export const substep1GetServiceCategories200Response = zod.array(substep1GetServiceCategories200ResponseItem)

export const substep1GetServiceCategories400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const substep1GetItemsForCategoryParams = zod.object({
  "categoryId": zod.coerce.string().uuid()
}).strict()

export const substep1GetItemsForCategory200ResponseItem = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()
export const substep1GetItemsForCategory200Response = zod.array(substep1GetItemsForCategory200ResponseItem)

export const substep1GetItemsForCategory400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é –ø—ñ–¥–µ—Ç–∞–ø—É 1
 */
export const substep1FinalizeSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1FinalizeSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')
