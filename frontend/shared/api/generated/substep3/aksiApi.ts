/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import type {
  OrderItemAddRequest,
  StainsDefectsContext,
  Substep3GoBackParams,
  Substep3ProcessDefectNotesParams,
  Substep3ProcessDefectSelectionParams,
  Substep3ProcessStainSelectionParams
} from './aksiApi.schemas';

import orvalFetcher from '../../../../lib/api/orval-fetcher';


type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getAksiApi = () => {
/**
 * @summary –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –ø–ª—è–º
 */
const substep3ProcessStainSelection = (
    sessionId: string,
    params?: Substep3ProcessStainSelectionParams,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/stains/${sessionId}`, method: 'POST',
        params
    },
      options);
    }
  
/**
 * @summary –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–º—ñ—Ç–æ–∫ –ø—Ä–æ –¥–µ—Ñ–µ–∫—Ç–∏
 */
const substep3ProcessDefectNotes = (
    sessionId: string,
    params?: Substep3ProcessDefectNotesParams,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/notes/${sessionId}`, method: 'POST',
        params
    },
      options);
    }
  
/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 3
 */
const substep3InitializeSubstep = (
    sessionId: string,
    orderItemAddRequest: OrderItemAddRequest,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/initialize/${sessionId}`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: orderItemAddRequest
    },
      options);
    }
  
/**
 * @summary –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É
 */
const substep3GoBack = (
    sessionId: string,
    params: Substep3GoBackParams,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/go-back/${sessionId}`, method: 'POST',
        params
    },
      options);
    }
  
/**
 * @summary –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤
 */
const substep3ProcessDefectSelection = (
    sessionId: string,
    params?: Substep3ProcessDefectSelectionParams,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/defects/${sessionId}`, method: 'POST',
        params
    },
      options);
    }
  
/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—ñ–¥–µ—Ç–∞–ø—É 3
 */
const substep3CompleteSubstep = (
    sessionId: string,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/complete/${sessionId}`, method: 'POST'
    },
      options);
    }
  
/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º
 */
const substep3GetAvailableStainTypes = (
    
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<string[]>(
      {url: `/v1/order-wizard/stage2/substep3/stain-types`, method: 'GET'
    },
      options);
    }
  
/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
const substep3GetAvailableDefectTypes = (
    
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<string[]>(
      {url: `/v1/order-wizard/stage2/substep3/defect-types`, method: 'GET'
    },
      options);
    }
  
/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
 */
const substep3GetContext = (
    sessionId: string,
 options?: SecondParameter<typeof orvalFetcher>,) => {
      return orvalFetcher<StainsDefectsContext>(
      {url: `/v1/order-wizard/stage2/substep3/context/${sessionId}`, method: 'GET'
    },
      options);
    }
  
return {substep3ProcessStainSelection,substep3ProcessDefectNotes,substep3InitializeSubstep,substep3GoBack,substep3ProcessDefectSelection,substep3CompleteSubstep,substep3GetAvailableStainTypes,substep3GetAvailableDefectTypes,substep3GetContext}};
export type Substep3ProcessStainSelectionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3ProcessStainSelection']>>>
export type Substep3ProcessDefectNotesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3ProcessDefectNotes']>>>
export type Substep3InitializeSubstepResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3InitializeSubstep']>>>
export type Substep3GoBackResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3GoBack']>>>
export type Substep3ProcessDefectSelectionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3ProcessDefectSelection']>>>
export type Substep3CompleteSubstepResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3CompleteSubstep']>>>
export type Substep3GetAvailableStainTypesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3GetAvailableStainTypes']>>>
export type Substep3GetAvailableDefectTypesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3GetAvailableDefectTypes']>>>
export type Substep3GetContextResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAksiApi>['substep3GetContext']>>>
