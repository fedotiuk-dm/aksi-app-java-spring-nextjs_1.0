/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';

/**
 * @summary –í–∞–ª—ñ–¥—É—î –≤—Å—ñ –≤–∏–±—Ä–∞–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 */
export const substep2ValidateCharacteristicsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2ValidateCharacteristics200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "fullMessage": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional()
}).strict()

export const substep2ValidateCharacteristics400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î —Å—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É
 */
export const substep2SelectWearLevelParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectWearLevelQueryParams = zod.object({
  "wearPercentage": zod.coerce.number()
}).strict()

export const substep2SelectWearLevel200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "fullMessage": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional()
}).strict()

export const substep2SelectWearLevel400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –º–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const substep2SelectMaterialParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectMaterialQueryParams = zod.object({
  "materialId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectMaterial200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "fullMessage": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional()
}).strict()

export const substep2SelectMaterial400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á
 */
export const substep2SelectFillerParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectFillerQueryIsFillerDamagedDefault = false;

export const substep2SelectFillerQueryParams = zod.object({
  "fillerType": zod.coerce.string().optional(),
  "isFillerDamaged": zod.coerce.boolean().optional()
}).strict()

export const substep2SelectFiller200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "fullMessage": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional()
}).strict()

export const substep2SelectFiller400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const substep2SelectColorParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectColorQueryParams = zod.object({
  "color": zod.coerce.string()
}).strict()

export const substep2SelectColor200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "fullMessage": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional()
}).strict()

export const substep2SelectColor400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø—ñ–¥–µ—Ç–∞–ø 2 - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 */
export const substep2InitializeSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2InitializeSubstepQueryParams = zod.object({
  "itemId": zod.coerce.string().uuid()
}).strict()

export const substep2InitializeSubstep200ResponseCurrentItemDescriptionMin = 0;

export const substep2InitializeSubstep200ResponseCurrentItemDescriptionMax = 1000;
export const substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMin = 0;

export const substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMax = 500;
export const substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMin = 0;

export const substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMax = 1000;


export const substep2InitializeSubstep200Response = zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep2InitializeSubstep200ResponseCurrentItemDescriptionMin).max(substep2InitializeSubstep200ResponseCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMin).max(substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMin).max(substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.coerce.boolean().optional(),
  "colorSelectionCompleted": zod.coerce.boolean().optional(),
  "fillerSelectionCompleted": zod.coerce.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional()
}).strict()

export const substep2InitializeSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 2
 */
export const substep2CompleteSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2CompleteSubstep200Response = zod.record(zod.string(), zod.any())

export const substep2CompleteSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –ø—ñ–¥–µ—Ç–∞–ø 2
 */
export const substep2CancelSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2CancelSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤
 */
export const substep2GetAvailableMaterialsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2GetAvailableMaterials200ResponseItem = zod.coerce.string()
export const substep2GetAvailableMaterials200Response = zod.array(substep2GetAvailableMaterials200ResponseItem)

export const substep2GetAvailableMaterials400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 2
 */
export const substep2GetCurrentCharacteristicsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMin = 0;

export const substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMax = 1000;
export const substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMin = 0;

export const substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMax = 500;
export const substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMin = 0;

export const substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMax = 1000;


export const substep2GetCurrentCharacteristics200Response = zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMin).max(substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMin).max(substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMin).max(substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.coerce.boolean().optional(),
  "colorSelectionCompleted": zod.coerce.boolean().optional(),
  "fillerSelectionCompleted": zod.coerce.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional()
}).strict()

export const substep2GetCurrentCharacteristics400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')
