/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';

/**
 * @summary –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const substep5AddPhotoParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5AddPhotoBody = zod.object({
  "file": zod.instanceof(File)
}).strict()

export const substep5AddPhoto200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5AddPhoto400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5CompletePhotoDocumentationParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5CompletePhotoDocumentation200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5CompletePhotoDocumentation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 5 - –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
 */
export const substep5InitializePhotoDocumentationParams = zod.object({
  "itemId": zod.coerce.string().uuid()
}).strict()

export const substep5InitializePhotoDocumentation200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5InitializePhotoDocumentation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5GetDocumentationStatusParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5GetDocumentationStatus200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5GetDocumentationStatus400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5GetDocumentationDataParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5GetDocumentationData200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict()

export const substep5GetDocumentationData400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5CloseSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5CloseSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const substep5RemovePhotoParams = zod.object({
  "sessionId": zod.coerce.string().uuid(),
  "photoId": zod.coerce.string().uuid()
}).strict()

export const substep5RemovePhoto200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5RemovePhoto400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')
