/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –æ–ø–ª–∞—Ç–∏
 */
export const stage3UpdatePaymentConfigParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3UpdatePaymentConfigBodyPaymentRequestPrepaymentAmountMin = 0;


export const stage3UpdatePaymentConfigBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "paymentRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.coerce.number().min(stage3UpdatePaymentConfigBodyPaymentRequestPrepaymentAmountMin).optional()
}).strict().optional(),
  "paymentResponse": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "prepaymentAmount": zod.coerce.number().optional(),
  "balanceAmount": zod.coerce.number().optional()
}).strict().optional(),
  "totalAmount": zod.coerce.number().optional(),
  "paidAmount": zod.coerce.number().optional(),
  "remainingAmount": zod.coerce.number().optional(),
  "isValid": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "prepaymentAmount": zod.coerce.number().optional(),
  "fullyPaid": zod.coerce.boolean().optional(),
  "paymentConfigComplete": zod.coerce.boolean().optional()
}).strict()

export const stage3UpdatePaymentConfig200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const stage3UpdatePaymentConfig400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdatePaymentConfig401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdatePaymentConfig403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdatePaymentConfig404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdatePaymentConfig409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
 */
export const stage3UpdateExecutionParamsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3UpdateExecutionParamsBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "serviceCategoryIds": zod.array(zod.coerce.string().uuid()).optional(),
  "completionDateRequest": zod.object({
  "serviceCategoryIds": zod.array(zod.coerce.string().uuid()).min(1),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H'])
}).strict().optional(),
  "completionDateResponse": zod.object({
  "expectedCompletionDate": zod.coerce.string().datetime({}).optional(),
  "standardProcessingHours": zod.coerce.number().optional(),
  "expeditedProcessingHours": zod.coerce.number().optional()
}).strict().optional(),
  "manualExecutionDate": zod.coerce.string().date().optional(),
  "useManualDate": zod.coerce.boolean().optional(),
  "needsRecalculation": zod.coerce.boolean().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "executionParamsComplete": zod.coerce.boolean().optional(),
  "effectiveExecutionDate": zod.coerce.string().datetime({}).optional()
}).strict()

export const stage3UpdateExecutionParams200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const stage3UpdateExecutionParams400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateExecutionParams401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateExecutionParams403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateExecutionParams404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateExecutionParams409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∑–Ω–∏–∂–æ–∫
 */
export const stage3UpdateDiscountConfigParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3UpdateDiscountConfigBodyDiscountRequestDiscountPercentageMin = 0;

export const stage3UpdateDiscountConfigBodyDiscountRequestDiscountPercentageMax = 100;
export const stage3UpdateDiscountConfigBodyDiscountRequestDiscountDescriptionMin = 0;

export const stage3UpdateDiscountConfigBodyDiscountRequestDiscountDescriptionMax = 255;


export const stage3UpdateDiscountConfigBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "discountRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']),
  "discountPercentage": zod.coerce.number().min(stage3UpdateDiscountConfigBodyDiscountRequestDiscountPercentageMin).max(stage3UpdateDiscountConfigBodyDiscountRequestDiscountPercentageMax).optional(),
  "discountDescription": zod.coerce.string().min(stage3UpdateDiscountConfigBodyDiscountRequestDiscountDescriptionMin).max(stage3UpdateDiscountConfigBodyDiscountRequestDiscountDescriptionMax).optional()
}).strict().optional(),
  "discountResponse": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.coerce.number().optional(),
  "discountDescription": zod.coerce.string().optional(),
  "totalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "nonDiscountableCategories": zod.array(zod.coerce.string()).optional(),
  "nonDiscountableAmount": zod.coerce.number().optional()
}).strict().optional(),
  "excludedCategoryIds": zod.array(zod.coerce.string().uuid()).optional(),
  "originalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "isValid": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "discountDescription": zod.coerce.string().optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.coerce.number().optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "discountConfigComplete": zod.coerce.boolean().optional()
}).strict()

export const stage3UpdateDiscountConfig200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const stage3UpdateDiscountConfig400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateDiscountConfig401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateDiscountConfig403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateDiscountConfig404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateDiscountConfig409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const stage3UpdateAdditionalInfoParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3UpdateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMin = 0;

export const stage3UpdateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMax = 1000;
export const stage3UpdateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMin = 0;

export const stage3UpdateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMax = 1000;


export const stage3UpdateAdditionalInfoBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "additionalInfoRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "additionalRequirements": zod.coerce.string().min(stage3UpdateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMin).max(stage3UpdateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMax).optional(),
  "customerNotes": zod.coerce.string().min(stage3UpdateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMin).max(stage3UpdateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMax).optional()
}).strict().optional(),
  "additionalInfoResponse": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "additionalRequirements": zod.coerce.string().optional(),
  "customerNotes": zod.coerce.string().optional()
}).strict().optional(),
  "hasAdditionalRequirements": zod.coerce.boolean().optional(),
  "hasCustomerNotes": zod.coerce.boolean().optional(),
  "isValid": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "customerNotes": zod.coerce.string().optional(),
  "additionalRequirements": zod.coerce.string().optional(),
  "additionalInfoComplete": zod.coerce.boolean().optional()
}).strict()

export const stage3UpdateAdditionalInfo200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const stage3UpdateAdditionalInfo400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateAdditionalInfo401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateAdditionalInfo403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateAdditionalInfo404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3UpdateAdditionalInfo409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞)
 */
export const stage2UpdateItemInOrderParams = zod.object({
  "sessionId": zod.coerce.string().uuid(),
  "itemId": zod.coerce.string().uuid()
}).strict()

export const stage2UpdateItemInOrderBodyNameMin = 0;

export const stage2UpdateItemInOrderBodyNameMax = 255;
export const stage2UpdateItemInOrderBodyDescriptionMin = 0;

export const stage2UpdateItemInOrderBodyDescriptionMax = 1000;
export const stage2UpdateItemInOrderBodySpecialInstructionsMin = 0;

export const stage2UpdateItemInOrderBodySpecialInstructionsMax = 500;
export const stage2UpdateItemInOrderBodyDefectsNotesMin = 0;

export const stage2UpdateItemInOrderBodyDefectsNotesMax = 1000;


export const stage2UpdateItemInOrderBody = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2UpdateItemInOrderBodyNameMin).max(stage2UpdateItemInOrderBodyNameMax),
  "description": zod.coerce.string().min(stage2UpdateItemInOrderBodyDescriptionMin).max(stage2UpdateItemInOrderBodyDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2UpdateItemInOrderBodySpecialInstructionsMin).max(stage2UpdateItemInOrderBodySpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2UpdateItemInOrderBodyDefectsNotesMin).max(stage2UpdateItemInOrderBodyDefectsNotesMax).optional()
}).strict()

export const stage2UpdateItemInOrder200ResponseAddedItemsItemNameMin = 0;

export const stage2UpdateItemInOrder200ResponseAddedItemsItemNameMax = 255;
export const stage2UpdateItemInOrder200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2UpdateItemInOrder200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2UpdateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2UpdateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2UpdateItemInOrder200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2UpdateItemInOrder200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2UpdateItemInOrder200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2UpdateItemInOrder200ResponseAddedItemsItemNameMin).max(stage2UpdateItemInOrder200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2UpdateItemInOrder200ResponseAddedItemsItemDescriptionMin).max(stage2UpdateItemInOrder200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2UpdateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2UpdateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2UpdateItemInOrder200ResponseAddedItemsItemDefectsNotesMin).max(stage2UpdateItemInOrder200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2UpdateItemInOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2UpdateItemInOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2UpdateItemInOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2UpdateItemInOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2UpdateItemInOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª—è—î –ø—Ä–µ–¥–º–µ—Ç –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage2DeleteItemFromOrderParams = zod.object({
  "sessionId": zod.coerce.string().uuid(),
  "itemId": zod.coerce.string().uuid()
}).strict()

export const stage2DeleteItemFromOrder200ResponseAddedItemsItemNameMin = 0;

export const stage2DeleteItemFromOrder200ResponseAddedItemsItemNameMax = 255;
export const stage2DeleteItemFromOrder200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2DeleteItemFromOrder200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2DeleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2DeleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2DeleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2DeleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2DeleteItemFromOrder200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2DeleteItemFromOrder200ResponseAddedItemsItemNameMin).max(stage2DeleteItemFromOrder200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2DeleteItemFromOrder200ResponseAddedItemsItemDescriptionMin).max(stage2DeleteItemFromOrder200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2DeleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2DeleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2DeleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMin).max(stage2DeleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2DeleteItemFromOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2DeleteItemFromOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2DeleteItemFromOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2DeleteItemFromOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2DeleteItemFromOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏
 */
export const stage1GetClientFormDataParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetClientFormData200Response = zod.object({
  "firstName": zod.coerce.string().optional(),
  "lastName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "informationSource": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "status": zod.enum(['EMPTY', 'BASIC_FILLED', 'DETAILED_FILLED', 'COMMUNICATION_SET', 'SOURCE_SET', 'READY_FOR_VALIDATION', 'VALID', 'INVALID']).optional(),
  "fullName": zod.coerce.string().optional(),
  "otherInformationSource": zod.coerce.boolean().optional()
}).strict()

export const stage1GetClientFormData400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormData401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormData403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormData404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormData409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1UpdateClientDataParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1UpdateClientDataBody = zod.object({
  "firstName": zod.coerce.string().optional(),
  "lastName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "informationSource": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "status": zod.enum(['EMPTY', 'BASIC_FILLED', 'DETAILED_FILLED', 'COMMUNICATION_SET', 'SOURCE_SET', 'READY_FOR_VALIDATION', 'VALID', 'INVALID']).optional(),
  "fullName": zod.coerce.string().optional(),
  "otherInformationSource": zod.coerce.boolean().optional()
}).strict()

export const stage1UpdateClientData400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateClientData401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateClientData403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateClientData404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateClientData409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω—É –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const stage1GetBasicOrderDataParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetBasicOrderData200ResponseSelectedBranchPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const stage1GetBasicOrderData200ResponseAvailableBranchesItemPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const stage1GetBasicOrderData200ResponseAllBranchesItemPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const stage1GetBasicOrderData200Response = zod.object({
  "receiptNumber": zod.coerce.string().optional(),
  "uniqueTag": zod.coerce.string().optional(),
  "selectedBranch": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1GetBasicOrderData200ResponseSelectedBranchPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict().optional(),
  "availableBranches": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1GetBasicOrderData200ResponseAvailableBranchesItemPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "selectedBranchId": zod.coerce.string().uuid().optional(),
  "creationDate": zod.coerce.string().datetime({}).optional(),
  "receiptNumberGenerated": zod.coerce.boolean().optional(),
  "uniqueTagEntered": zod.coerce.boolean().optional(),
  "branchSelected": zod.coerce.boolean().optional(),
  "creationDateSet": zod.coerce.boolean().optional(),
  "receiptNumberValid": zod.coerce.boolean().optional(),
  "uniqueTagValid": zod.coerce.boolean().optional(),
  "allBranches": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1GetBasicOrderData200ResponseAllBranchesItemPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "complete": zod.coerce.boolean().optional(),
  "branchesCount": zod.coerce.number().optional()
}).strict()

export const stage1GetBasicOrderData400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderData401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderData403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderData404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderData409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª—é—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const stage1UpdateBasicOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1UpdateBasicOrderBodySelectedBranchPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const stage1UpdateBasicOrderBodyAvailableBranchesItemPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const stage1UpdateBasicOrderBodyAllBranchesItemPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const stage1UpdateBasicOrderBody = zod.object({
  "receiptNumber": zod.coerce.string().optional(),
  "uniqueTag": zod.coerce.string().optional(),
  "selectedBranch": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1UpdateBasicOrderBodySelectedBranchPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict().optional(),
  "availableBranches": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1UpdateBasicOrderBodyAvailableBranchesItemPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "selectedBranchId": zod.coerce.string().uuid().optional(),
  "creationDate": zod.coerce.string().datetime({}).optional(),
  "receiptNumberGenerated": zod.coerce.boolean().optional(),
  "uniqueTagEntered": zod.coerce.boolean().optional(),
  "branchSelected": zod.coerce.boolean().optional(),
  "creationDateSet": zod.coerce.boolean().optional(),
  "receiptNumberValid": zod.coerce.boolean().optional(),
  "uniqueTagValid": zod.coerce.boolean().optional(),
  "allBranches": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1UpdateBasicOrderBodyAllBranchesItemPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "complete": zod.coerce.boolean().optional(),
  "branchesCount": zod.coerce.number().optional()
}).strict()

export const stage1UpdateBasicOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateBasicOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateBasicOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateBasicOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1UpdateBasicOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const stage4ValidateReceiptConfigurationBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "generationRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "format": zod.coerce.string().optional(),
  "includeSignature": zod.coerce.boolean().optional()
}).strict().optional().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó'),
  "generatedReceipt": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "tagNumber": zod.coerce.string().optional(),
  "createdDate": zod.coerce.string().datetime({}).optional(),
  "expectedCompletionDate": zod.coerce.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "branchInfo": zod.object({
  "branchName": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "operatorName": zod.coerce.string().optional()
}).strict().optional(),
  "clientInfo": zod.object({
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "communicationChannels": zod.array(zod.coerce.string()).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "serviceCategory": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "filler": zod.coerce.string().optional(),
  "wearPercentage": zod.coerce.number().optional(),
  "basePrice": zod.coerce.number().optional(),
  "finalPrice": zod.coerce.number().optional(),
  "priceModifiers": zod.array(zod.object({
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "percentageValue": zod.coerce.number().optional(),
  "fixedValue": zod.coerce.number().optional(),
  "impact": zod.coerce.number().optional()
}).strict()).optional(),
  "stains": zod.array(zod.coerce.string()).optional(),
  "defects": zod.array(zod.coerce.string()).optional(),
  "notes": zod.coerce.string().optional()
}).strict()).optional(),
  "financialInfo": zod.object({
  "totalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "discountType": zod.coerce.string().optional(),
  "expediteSurcharge": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "prepaymentAmount": zod.coerce.number().optional(),
  "balanceAmount": zod.coerce.number().optional()
}).strict().optional(),
  "legalTerms": zod.coerce.string().optional(),
  "customerSignatureData": zod.coerce.string().optional(),
  "termsAccepted": zod.coerce.boolean().optional(),
  "additionalNotes": zod.coerce.string().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional()
}).strict().optional(),
  "pdfGenerated": zod.coerce.boolean().optional(),
  "emailSent": zod.coerce.boolean().optional(),
  "readyForPrint": zod.coerce.boolean().optional(),
  "pdfFilePath": zod.coerce.string().optional(),
  "generationTimestamp": zod.coerce.string().datetime({}).optional(),
  "validationMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4ValidateReceiptConfiguration200Response = zod.object({

})

export const stage4ValidateReceiptConfiguration400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateReceiptConfiguration401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateReceiptConfiguration403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateReceiptConfiguration404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateReceiptConfiguration409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin = 2;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax = 100;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin = 2;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax = 150;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin = 0;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax = 20;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin = 0;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax = 20;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin = 0;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax = 10;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin = 5;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax = 500;
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin = 0;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax = 100;
export const stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin = 0;

export const stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax = 255;
export const stage4ValidateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const stage4ValidateOrderConfirmationBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "orderSummary": zod.object({
  "id": zod.coerce.string().uuid().optional().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "receiptNumber": zod.coerce.string().optional().describe('–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "tagNumber": zod.coerce.string().optional().describe('–ù–æ–º–µ—Ä –º—ñ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "client": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax).regex(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax).regex(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax).regex(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax).regex(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax).regex(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin).max(stage4ValidateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict().optional(),
  "branchLocation": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage4ValidateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "name": zod.coerce.string().optional().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "category": zod.coerce.string().optional().describe('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏'),
  "quantity": zod.coerce.number().optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å'),
  "unitOfMeasure": zod.coerce.string().optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "material": zod.coerce.string().optional().describe('–ú–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "color": zod.coerce.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "filler": zod.coerce.string().optional().describe('–ù–∞–ø–æ–≤–Ω—é–≤–∞—á –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "fillerClumped": zod.coerce.boolean().optional().describe('–ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ —î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –∑–±–∏—Ç–∏–º'),
  "wearPercentage": zod.coerce.number().optional().describe('–°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö)'),
  "stains": zod.array(zod.coerce.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –ø–ª—è–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ'),
  "defects": zod.array(zod.coerce.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤'),
  "defectNotes": zod.coerce.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ —â–æ–¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤'),
  "basePrice": zod.coerce.number().optional().describe('–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "priceModifiers": zod.array(zod.object({
  "name": zod.coerce.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.coerce.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.coerce.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.coerce.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')).optional().describe('–°–ø–∏—Å–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω–∏'),
  "finalPrice": zod.coerce.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional().describe('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ')).optional().describe('–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏'),
  "totalAmount": zod.coerce.number().optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –∑–Ω–∏–∂–æ–∫'),
  "discountAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏'),
  "expediteSurchargeAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "finalAmount": zod.coerce.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–æ–∫ —Ç–∞ –Ω–∞–¥–±–∞–≤–æ–∫'),
  "prepaymentAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏'),
  "balanceAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ'),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional().describe('–¢–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'),
  "expectedCompletionDate": zod.coerce.string().datetime({}).optional().describe('–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "createdDate": zod.coerce.string().datetime({}).optional().describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "customerNotes": zod.coerce.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞'),
  "discountType": zod.coerce.string().optional().describe('–¢–∏–ø –∑–Ω–∏–∂–∫–∏'),
  "discountPercentage": zod.coerce.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–î–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –µ—Ç–∞–ø—É –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è'),
  "readyForConfirmation": zod.coerce.boolean().optional(),
  "summaryReviewed": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4ValidateOrderConfirmation200Response = zod.object({

})

export const stage4ValidateOrderConfirmation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderConfirmation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderConfirmation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderConfirmation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderConfirmation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4ValidateOrderCompletionBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "finalizationRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "signatureData": zod.coerce.string().optional(),
  "termsAccepted": zod.coerce.boolean().optional(),
  "sendReceiptByEmail": zod.coerce.boolean().optional(),
  "generatePrintableReceipt": zod.coerce.boolean().optional(),
  "comments": zod.coerce.string().optional()
}).strict().optional(),
  "orderProcessed": zod.coerce.boolean().optional(),
  "orderSaved": zod.coerce.boolean().optional(),
  "wizardCompleted": zod.coerce.boolean().optional(),
  "completionTimestamp": zod.coerce.string().datetime({}).optional(),
  "createdOrderNumber": zod.coerce.string().optional(),
  "completionMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4ValidateOrderCompletion200Response = zod.object({

})

export const stage4ValidateOrderCompletion400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderCompletion401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderCompletion403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderCompletion404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateOrderCompletion409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è —é—Ä–∏–¥–∏—á–Ω–æ–≥–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è
 */
export const stage4ValidateLegalAcceptanceBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "signatureRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "signatureData": zod.coerce.string().min(1),
  "termsAccepted": zod.coerce.boolean(),
  "signatureType": zod.coerce.string().optional()
}).strict().optional().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞'),
  "termsRead": zod.coerce.boolean().optional(),
  "signatureCaptured": zod.coerce.boolean().optional(),
  "legalConfirmed": zod.coerce.boolean().optional(),
  "acceptanceTimestamp": zod.coerce.string().datetime({}).optional(),
  "validationMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4ValidateLegalAcceptance200Response = zod.object({

})

export const stage4ValidateLegalAcceptance400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateLegalAcceptance401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateLegalAcceptance403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateLegalAcceptance404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateLegalAcceptance409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage4SaveSignatureBody = zod.object({
  "orderId": zod.coerce.string().uuid(),
  "signatureData": zod.coerce.string().min(1),
  "termsAccepted": zod.coerce.boolean(),
  "signatureType": zod.coerce.string().optional()
}).strict().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞')

export const stage4SaveSignature200Response = zod.object({

})

export const stage4SaveSignature400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4SaveSignature401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4SaveSignature403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4SaveSignature404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4SaveSignature409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const stage4UpdateReceiptConfigurationParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4UpdateReceiptConfigurationBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "generationRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "format": zod.coerce.string().optional(),
  "includeSignature": zod.coerce.boolean().optional()
}).strict().optional().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó'),
  "generatedReceipt": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "tagNumber": zod.coerce.string().optional(),
  "createdDate": zod.coerce.string().datetime({}).optional(),
  "expectedCompletionDate": zod.coerce.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "branchInfo": zod.object({
  "branchName": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "operatorName": zod.coerce.string().optional()
}).strict().optional(),
  "clientInfo": zod.object({
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "communicationChannels": zod.array(zod.coerce.string()).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "serviceCategory": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "filler": zod.coerce.string().optional(),
  "wearPercentage": zod.coerce.number().optional(),
  "basePrice": zod.coerce.number().optional(),
  "finalPrice": zod.coerce.number().optional(),
  "priceModifiers": zod.array(zod.object({
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "percentageValue": zod.coerce.number().optional(),
  "fixedValue": zod.coerce.number().optional(),
  "impact": zod.coerce.number().optional()
}).strict()).optional(),
  "stains": zod.array(zod.coerce.string()).optional(),
  "defects": zod.array(zod.coerce.string()).optional(),
  "notes": zod.coerce.string().optional()
}).strict()).optional(),
  "financialInfo": zod.object({
  "totalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "discountType": zod.coerce.string().optional(),
  "expediteSurcharge": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "prepaymentAmount": zod.coerce.number().optional(),
  "balanceAmount": zod.coerce.number().optional()
}).strict().optional(),
  "legalTerms": zod.coerce.string().optional(),
  "customerSignatureData": zod.coerce.string().optional(),
  "termsAccepted": zod.coerce.boolean().optional(),
  "additionalNotes": zod.coerce.string().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional()
}).strict().optional(),
  "pdfGenerated": zod.coerce.boolean().optional(),
  "emailSent": zod.coerce.boolean().optional(),
  "readyForPrint": zod.coerce.boolean().optional(),
  "pdfFilePath": zod.coerce.string().optional(),
  "generationTimestamp": zod.coerce.string().datetime({}).optional(),
  "validationMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4UpdateReceiptConfiguration200Response = zod.object({

})

export const stage4UpdateReceiptConfiguration400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateReceiptConfiguration401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateReceiptConfiguration403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateReceiptConfiguration404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateReceiptConfiguration409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4UpdateOrderConfirmationParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin = 2;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax = 100;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin = 2;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax = 150;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin = 0;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax = 20;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin = 0;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax = 20;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin = 0;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax = 10;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin = 5;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax = 500;
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin = 0;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax = 100;
export const stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin = 0;

export const stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax = 255;
export const stage4UpdateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const stage4UpdateOrderConfirmationBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "orderSummary": zod.object({
  "id": zod.coerce.string().uuid().optional().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "receiptNumber": zod.coerce.string().optional().describe('–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "tagNumber": zod.coerce.string().optional().describe('–ù–æ–º–µ—Ä –º—ñ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "client": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax).regex(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax).regex(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax).regex(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax).regex(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax).regex(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin).max(stage4UpdateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict().optional(),
  "branchLocation": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage4UpdateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "name": zod.coerce.string().optional().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "category": zod.coerce.string().optional().describe('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏'),
  "quantity": zod.coerce.number().optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å'),
  "unitOfMeasure": zod.coerce.string().optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "material": zod.coerce.string().optional().describe('–ú–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "color": zod.coerce.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "filler": zod.coerce.string().optional().describe('–ù–∞–ø–æ–≤–Ω—é–≤–∞—á –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "fillerClumped": zod.coerce.boolean().optional().describe('–ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ —î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –∑–±–∏—Ç–∏–º'),
  "wearPercentage": zod.coerce.number().optional().describe('–°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö)'),
  "stains": zod.array(zod.coerce.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –ø–ª—è–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ'),
  "defects": zod.array(zod.coerce.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤'),
  "defectNotes": zod.coerce.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ —â–æ–¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤'),
  "basePrice": zod.coerce.number().optional().describe('–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "priceModifiers": zod.array(zod.object({
  "name": zod.coerce.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.coerce.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.coerce.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.coerce.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')).optional().describe('–°–ø–∏—Å–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω–∏'),
  "finalPrice": zod.coerce.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional().describe('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ')).optional().describe('–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏'),
  "totalAmount": zod.coerce.number().optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –∑–Ω–∏–∂–æ–∫'),
  "discountAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏'),
  "expediteSurchargeAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "finalAmount": zod.coerce.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–æ–∫ —Ç–∞ –Ω–∞–¥–±–∞–≤–æ–∫'),
  "prepaymentAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏'),
  "balanceAmount": zod.coerce.number().optional().describe('–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ'),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional().describe('–¢–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'),
  "expectedCompletionDate": zod.coerce.string().datetime({}).optional().describe('–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "createdDate": zod.coerce.string().datetime({}).optional().describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "customerNotes": zod.coerce.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞'),
  "discountType": zod.coerce.string().optional().describe('–¢–∏–ø –∑–Ω–∏–∂–∫–∏'),
  "discountPercentage": zod.coerce.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–î–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –µ—Ç–∞–ø—É –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è'),
  "readyForConfirmation": zod.coerce.boolean().optional(),
  "summaryReviewed": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4UpdateOrderConfirmation200Response = zod.object({

})

export const stage4UpdateOrderConfirmation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderConfirmation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderConfirmation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderConfirmation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderConfirmation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4UpdateOrderCompletionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4UpdateOrderCompletionBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "finalizationRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "signatureData": zod.coerce.string().optional(),
  "termsAccepted": zod.coerce.boolean().optional(),
  "sendReceiptByEmail": zod.coerce.boolean().optional(),
  "generatePrintableReceipt": zod.coerce.boolean().optional(),
  "comments": zod.coerce.string().optional()
}).strict().optional(),
  "orderProcessed": zod.coerce.boolean().optional(),
  "orderSaved": zod.coerce.boolean().optional(),
  "wizardCompleted": zod.coerce.boolean().optional(),
  "completionTimestamp": zod.coerce.string().datetime({}).optional(),
  "createdOrderNumber": zod.coerce.string().optional(),
  "completionMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4UpdateOrderCompletion200Response = zod.object({

})

export const stage4UpdateOrderCompletion400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderCompletion401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderCompletion403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderCompletion404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateOrderCompletion409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è —é—Ä–∏–¥–∏—á–Ω–æ–≥–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è
 */
export const stage4UpdateLegalAcceptanceParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4UpdateLegalAcceptanceBody = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "signatureRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "signatureData": zod.coerce.string().min(1),
  "termsAccepted": zod.coerce.boolean(),
  "signatureType": zod.coerce.string().optional()
}).strict().optional().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞'),
  "termsRead": zod.coerce.boolean().optional(),
  "signatureCaptured": zod.coerce.boolean().optional(),
  "legalConfirmed": zod.coerce.boolean().optional(),
  "acceptanceTimestamp": zod.coerce.string().datetime({}).optional(),
  "validationMessage": zod.coerce.string().optional(),
  "hasValidationErrors": zod.coerce.boolean().optional()
}).strict()

export const stage4UpdateLegalAcceptance200Response = zod.object({

})

export const stage4UpdateLegalAcceptance400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateLegalAcceptance401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateLegalAcceptance403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateLegalAcceptance404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4UpdateLegalAcceptance409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó
 */
export const stage4CloseSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4CloseSession200Response = zod.object({

})

export const stage4CloseSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4CloseSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4CloseSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4CloseSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4CloseSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const stage4GenerateReceiptBody = zod.object({
  "orderId": zod.coerce.string().uuid(),
  "format": zod.coerce.string().optional(),
  "includeSignature": zod.coerce.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const stage4GenerateReceipt200Response = zod.object({

})

export const stage4GenerateReceipt400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GenerateReceipt401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GenerateReceipt403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GenerateReceipt404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GenerateReceipt409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è PDF –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const stage4GeneratePdfReceiptBody = zod.object({
  "orderId": zod.coerce.string().uuid(),
  "format": zod.coerce.string().optional(),
  "includeSignature": zod.coerce.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const stage4GeneratePdfReceipt200Response = zod.object({

})

export const stage4GeneratePdfReceipt400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GeneratePdfReceipt401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GeneratePdfReceipt403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GeneratePdfReceipt404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GeneratePdfReceipt409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Stage4 –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4InitializeStageParams = zod.object({
  "orderId": zod.coerce.string().uuid()
}).strict()

export const stage4InitializeStage200Response = zod.object({

})

export const stage4InitializeStage400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4InitializeStage401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4InitializeStage403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4InitializeStage404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4InitializeStage409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –§—ñ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4FinalizeOrderBody = zod.object({
  "orderId": zod.coerce.string().uuid(),
  "signatureData": zod.coerce.string().optional(),
  "termsAccepted": zod.coerce.boolean().optional(),
  "sendReceiptByEmail": zod.coerce.boolean().optional(),
  "generatePrintableReceipt": zod.coerce.boolean().optional(),
  "comments": zod.coerce.string().optional()
}).strict()

export const stage4FinalizeOrder200Response = zod.object({

})

export const stage4FinalizeOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4FinalizeOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4FinalizeOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4FinalizeOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4FinalizeOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É —Å–µ—Å—ñ—é Stage3
 */
export const stage3CreateSessionBody = zod.coerce.string().uuid()

export const stage3CreateSession200Response = zod.coerce.string().uuid()

export const stage3CreateSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CreateSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CreateSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CreateSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CreateSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ Stage3 –¥–ª—è —Å–µ—Å—ñ—ó
 */
export const stage3InitializeStageParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3InitializeStage400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3InitializeStage401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3InitializeStage403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3InitializeStage404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3InitializeStage409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç–∏ —Å–µ—Å—ñ—é
 */
export const stage3CloseSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3CloseSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CloseSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CloseSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CloseSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3CloseSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–ø—É—Å–∫–∞—î –Ω–æ–≤–∏–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const stage2StartNewItemWizardParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2StartNewItemWizard200ResponseAddedItemsItemNameMin = 0;

export const stage2StartNewItemWizard200ResponseAddedItemsItemNameMax = 255;
export const stage2StartNewItemWizard200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2StartNewItemWizard200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2StartNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2StartNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2StartNewItemWizard200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2StartNewItemWizard200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2StartNewItemWizard200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2StartNewItemWizard200ResponseAddedItemsItemNameMin).max(stage2StartNewItemWizard200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2StartNewItemWizard200ResponseAddedItemsItemDescriptionMin).max(stage2StartNewItemWizard200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2StartNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2StartNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2StartNewItemWizard200ResponseAddedItemsItemDefectsNotesMin).max(stage2StartNewItemWizard200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2StartNewItemWizard400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartNewItemWizard401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartNewItemWizard403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartNewItemWizard404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartNewItemWizard409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–ø—É—Å–∫–∞—î –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const stage2StartEditItemWizardParams = zod.object({
  "sessionId": zod.coerce.string().uuid(),
  "itemId": zod.coerce.string().uuid()
}).strict()

export const stage2StartEditItemWizard200ResponseAddedItemsItemNameMin = 0;

export const stage2StartEditItemWizard200ResponseAddedItemsItemNameMax = 255;
export const stage2StartEditItemWizard200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2StartEditItemWizard200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2StartEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2StartEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2StartEditItemWizard200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2StartEditItemWizard200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2StartEditItemWizard200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2StartEditItemWizard200ResponseAddedItemsItemNameMin).max(stage2StartEditItemWizard200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2StartEditItemWizard200ResponseAddedItemsItemDescriptionMin).max(stage2StartEditItemWizard200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2StartEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2StartEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2StartEditItemWizard200ResponseAddedItemsItemDefectsNotesMin).max(stage2StartEditItemWizard200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2StartEditItemWizard400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartEditItemWizard401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartEditItemWizard403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartEditItemWizard404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2StartEditItemWizard409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏–≤–∞—î –∞–∫—Ç–∏–≤–Ω–∏–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 */
export const stage2CloseWizardParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2CloseWizard200ResponseAddedItemsItemNameMin = 0;

export const stage2CloseWizard200ResponseAddedItemsItemNameMax = 255;
export const stage2CloseWizard200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2CloseWizard200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2CloseWizard200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2CloseWizard200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2CloseWizard200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2CloseWizard200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2CloseWizard200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2CloseWizard200ResponseAddedItemsItemNameMin).max(stage2CloseWizard200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2CloseWizard200ResponseAddedItemsItemDescriptionMin).max(stage2CloseWizard200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2CloseWizard200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2CloseWizard200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2CloseWizard200ResponseAddedItemsItemDefectsNotesMin).max(stage2CloseWizard200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2CloseWizard400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CloseWizard401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CloseWizard403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CloseWizard404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CloseWizard409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
export const stage2SynchronizeManagerParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2SynchronizeManager200ResponseAddedItemsItemNameMin = 0;

export const stage2SynchronizeManager200ResponseAddedItemsItemNameMax = 255;
export const stage2SynchronizeManager200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2SynchronizeManager200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2SynchronizeManager200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2SynchronizeManager200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2SynchronizeManager200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2SynchronizeManager200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2SynchronizeManager200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2SynchronizeManager200ResponseAddedItemsItemNameMin).max(stage2SynchronizeManager200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2SynchronizeManager200ResponseAddedItemsItemDescriptionMin).max(stage2SynchronizeManager200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2SynchronizeManager200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2SynchronizeManager200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2SynchronizeManager200ResponseAddedItemsItemDefectsNotesMin).max(stage2SynchronizeManager200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2SynchronizeManager400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2SynchronizeManager401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2SynchronizeManager403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2SynchronizeManager404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2SynchronizeManager409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const substep5AddPhotoParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5AddPhotoBody = zod.object({
  "file": zod.instanceof(File)
}).strict()

export const substep5AddPhoto200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5AddPhoto400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5AddPhoto409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5CompletePhotoDocumentationParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5CompletePhotoDocumentation200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5CompletePhotoDocumentation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CompletePhotoDocumentation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 5 - –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
 */
export const substep5InitializePhotoDocumentationParams = zod.object({
  "itemId": zod.coerce.string().uuid()
}).strict()

export const substep5InitializePhotoDocumentation200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5InitializePhotoDocumentation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5InitializePhotoDocumentation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
 */
export const substep4ResetCalculationParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4ResetCalculation200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4ResetCalculation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ResetCalculation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ResetCalculation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ResetCalculation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ResetCalculation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
 */
export const substep4AddModifierParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4AddModifierBody = zod.object({
  "modifierId": zod.coerce.string().optional(),
  "rangeValue": zod.coerce.number().optional(),
  "quantity": zod.coerce.number().optional()
}).strict()

export const substep4AddModifier200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4AddModifier400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4AddModifier401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4AddModifier403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4AddModifier404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4AddModifier409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 4
 */
export const substep4InitializeSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4InitializeSubstepBodyCharacteristicsCurrentItemDescriptionMin = 0;

export const substep4InitializeSubstepBodyCharacteristicsCurrentItemDescriptionMax = 1000;
export const substep4InitializeSubstepBodyCharacteristicsCurrentItemSpecialInstructionsMin = 0;

export const substep4InitializeSubstepBodyCharacteristicsCurrentItemSpecialInstructionsMax = 500;
export const substep4InitializeSubstepBodyCharacteristicsCurrentItemDefectsNotesMin = 0;

export const substep4InitializeSubstepBodyCharacteristicsCurrentItemDefectsNotesMax = 1000;
export const substep4InitializeSubstepBodyStainsDefectsCurrentItemDescriptionMin = 0;

export const substep4InitializeSubstepBodyStainsDefectsCurrentItemDescriptionMax = 1000;
export const substep4InitializeSubstepBodyStainsDefectsCurrentItemSpecialInstructionsMin = 0;

export const substep4InitializeSubstepBodyStainsDefectsCurrentItemSpecialInstructionsMax = 500;
export const substep4InitializeSubstepBodyStainsDefectsCurrentItemDefectsNotesMin = 0;

export const substep4InitializeSubstepBodyStainsDefectsCurrentItemDefectsNotesMax = 1000;


export const substep4InitializeSubstepBody = zod.object({
  "basicInfo": zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict().optional(),
  "characteristics": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep4InitializeSubstepBodyCharacteristicsCurrentItemDescriptionMin).max(substep4InitializeSubstepBodyCharacteristicsCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep4InitializeSubstepBodyCharacteristicsCurrentItemSpecialInstructionsMin).max(substep4InitializeSubstepBodyCharacteristicsCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep4InitializeSubstepBodyCharacteristicsCurrentItemDefectsNotesMin).max(substep4InitializeSubstepBodyCharacteristicsCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.coerce.boolean().optional(),
  "colorSelectionCompleted": zod.coerce.boolean().optional(),
  "fillerSelectionCompleted": zod.coerce.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional()
}).strict().optional(),
  "stainsDefects": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep4InitializeSubstepBodyStainsDefectsCurrentItemDescriptionMin).max(substep4InitializeSubstepBodyStainsDefectsCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep4InitializeSubstepBodyStainsDefectsCurrentItemSpecialInstructionsMin).max(substep4InitializeSubstepBodyStainsDefectsCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep4InitializeSubstepBodyStainsDefectsCurrentItemDefectsNotesMin).max(substep4InitializeSubstepBodyStainsDefectsCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional()
}).strict()

export const substep4InitializeSubstep200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4InitializeSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4InitializeSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4InitializeSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4InitializeSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4InitializeSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—ñ–¥–µ—Ç–∞–ø—É
 */
export const substep4ConfirmCalculationParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4ConfirmCalculation200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4ConfirmCalculation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ConfirmCalculation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ConfirmCalculation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ConfirmCalculation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ConfirmCalculation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏
 */
export const substep4CalculatePriceBodyCalculationRequestCategoryCodeRegExp = new RegExp('^[A-Z_]+$');
export const substep4CalculatePriceBodyCalculationRequestItemNameMin = 0;

export const substep4CalculatePriceBodyCalculationRequestItemNameMax = 255;
export const substep4CalculatePriceBodyCalculationRequestColorMax = 100;
export const substep4CalculatePriceBodyCalculationRequestQuantityMax = 1000;
export const substep4CalculatePriceBodyCalculationRequestModifierIdsMin = 0;

export const substep4CalculatePriceBodyCalculationRequestModifierIdsMax = 20;
export const substep4CalculatePriceBodyCalculationRequestRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4CalculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMin = 0;

export const substep4CalculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMax = 200;
export const substep4CalculatePriceBodyCalculationRequestRangeModifierValuesMin = 0;

export const substep4CalculatePriceBodyCalculationRequestRangeModifierValuesMax = 10;
export const substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesItemQuantityMax = 100;
export const substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesMin = 0;

export const substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesMax = 10;
export const substep4CalculatePriceBodyCalculationRequestExpeditePercentMin = 0;

export const substep4CalculatePriceBodyCalculationRequestExpeditePercentMax = 200;
export const substep4CalculatePriceBodyCalculationRequestDiscountPercentMin = 0;

export const substep4CalculatePriceBodyCalculationRequestDiscountPercentMax = 50;
export const substep4CalculatePriceBodyCalculationResponseBaseUnitPriceMin = 0;
export const substep4CalculatePriceBodyCalculationResponseBaseTotalPriceMin = 0;
export const substep4CalculatePriceBodyCalculationResponseFinalUnitPriceMin = 0;
export const substep4CalculatePriceBodyCalculationResponseFinalTotalPriceMin = 0;
export const substep4CalculatePriceBodyRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4CalculatePriceBodyRangeModifierValuesItemPercentageMin = 0;

export const substep4CalculatePriceBodyRangeModifierValuesItemPercentageMax = 200;
export const substep4CalculatePriceBodyFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4CalculatePriceBodyFixedModifierQuantitiesItemQuantityMax = 100;


export const substep4CalculatePriceBody = zod.object({
  "calculationRequest": zod.object({
  "categoryCode": zod.coerce.string().min(1).regex(substep4CalculatePriceBodyCalculationRequestCategoryCodeRegExp).describe('–ö–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏'),
  "itemName": zod.coerce.string().min(substep4CalculatePriceBodyCalculationRequestItemNameMin).max(substep4CalculatePriceBodyCalculationRequestItemNameMax).describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "color": zod.coerce.string().max(substep4CalculatePriceBodyCalculationRequestColorMax).optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—É'),
  "quantity": zod.coerce.number().min(1).max(substep4CalculatePriceBodyCalculationRequestQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "modifierCodes": zod.array(zod.coerce.string()).optional().describe('–°–ø–∏—Å–æ–∫ –∫–æ–¥—ñ–≤ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "modifierIds": zod.array(zod.coerce.string()).min(substep4CalculatePriceBodyCalculationRequestModifierIdsMin).max(substep4CalculatePriceBodyCalculationRequestModifierIdsMax).optional().describe('–°–ø–∏—Å–æ–∫ ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4CalculatePriceBodyCalculationRequestRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.coerce.number().min(substep4CalculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMin).max(substep4CalculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).min(substep4CalculatePriceBodyCalculationRequestRangeModifierValuesMin).max(substep4CalculatePriceBodyCalculationRequestRangeModifierValuesMax).optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—É'),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.coerce.number().min(1).max(substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).min(substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesMin).max(substep4CalculatePriceBodyCalculationRequestFixedModifierQuantitiesMax).optional().describe('–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é'),
  "expedited": zod.coerce.boolean().optional().describe('–ß–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "expeditePercent": zod.coerce.number().min(substep4CalculatePriceBodyCalculationRequestExpeditePercentMin).max(substep4CalculatePriceBodyCalculationRequestExpeditePercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "discountPercent": zod.coerce.number().min(substep4CalculatePriceBodyCalculationRequestDiscountPercentMin).max(substep4CalculatePriceBodyCalculationRequestDiscountPercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–ó–∞–ø–∏—Ç –Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç—É –∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏'),
  "calculationResponse": zod.object({
  "baseUnitPrice": zod.coerce.number().min(substep4CalculatePriceBodyCalculationResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.coerce.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.coerce.number().min(substep4CalculatePriceBodyCalculationResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.coerce.number().min(substep4CalculatePriceBodyCalculationResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.coerce.number().min(substep4CalculatePriceBodyCalculationResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.coerce.number().optional(),
  "stepName": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "modifierCode": zod.coerce.string().optional(),
  "modifierName": zod.coerce.string().optional(),
  "modifierValue": zod.coerce.string().optional(),
  "priceBefore": zod.coerce.number().optional(),
  "priceAfter": zod.coerce.number().optional(),
  "priceDifference": zod.coerce.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().optional().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "selectedModifierIds": zod.array(zod.coerce.string()).optional(),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4CalculatePriceBodyRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.coerce.number().min(substep4CalculatePriceBodyRangeModifierValuesItemPercentageMin).max(substep4CalculatePriceBodyRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).optional(),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4CalculatePriceBodyFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.coerce.number().min(1).max(substep4CalculatePriceBodyFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).optional(),
  "calculationNotes": zod.coerce.string().optional(),
  "calculationCompleted": zod.coerce.boolean().optional(),
  "hasCalculationErrors": zod.coerce.boolean().optional(),
  "errorMessage": zod.coerce.string().optional(),
  "calculationDetails": zod.array(zod.object({
  "step": zod.coerce.number().optional(),
  "stepName": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "modifierCode": zod.coerce.string().optional(),
  "modifierName": zod.coerce.string().optional(),
  "modifierValue": zod.coerce.string().optional(),
  "priceBefore": zod.coerce.number().optional(),
  "priceAfter": zod.coerce.number().optional(),
  "priceDifference": zod.coerce.number().optional()
}).strict()).optional(),
  "basePrice": zod.coerce.number().optional(),
  "finalPrice": zod.coerce.number().optional(),
  "modifiersCount": zod.coerce.number().optional()
}).strict()

export const substep4CalculatePrice200ResponseBaseUnitPriceMin = 0;
export const substep4CalculatePrice200ResponseBaseTotalPriceMin = 0;
export const substep4CalculatePrice200ResponseFinalUnitPriceMin = 0;
export const substep4CalculatePrice200ResponseFinalTotalPriceMin = 0;


export const substep4CalculatePrice200Response = zod.object({
  "baseUnitPrice": zod.coerce.number().min(substep4CalculatePrice200ResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.coerce.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.coerce.number().min(substep4CalculatePrice200ResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.coerce.number().min(substep4CalculatePrice200ResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.coerce.number().min(substep4CalculatePrice200ResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.coerce.number().optional(),
  "stepName": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "modifierCode": zod.coerce.string().optional(),
  "modifierName": zod.coerce.string().optional(),
  "modifierValue": zod.coerce.string().optional(),
  "priceBefore": zod.coerce.number().optional(),
  "priceAfter": zod.coerce.number().optional(),
  "priceDifference": zod.coerce.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞')

export const substep4CalculatePrice400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculatePrice401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculatePrice403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculatePrice404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculatePrice409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–∏ –∑ —É—Å—ñ–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏
 */
export const substep4CalculateFinalPriceParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4CalculateFinalPrice200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4CalculateFinalPrice400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateFinalPrice401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateFinalPrice403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateFinalPrice404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateFinalPrice409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –±–∞–∑–æ–≤–æ—ó —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const substep4CalculateBasePriceParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4CalculateBasePrice200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4CalculateBasePrice400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateBasePrice401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateBasePrice403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateBasePrice404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4CalculateBasePrice409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –ø–ª—è–º
 */
export const substep3ProcessStainSelectionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3ProcessStainSelectionQueryParams = zod.object({
  "selectedStains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional()
}).strict()

export const substep3ProcessStainSelection200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3ProcessStainSelection200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3ProcessStainSelection200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3ProcessStainSelection200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3ProcessStainSelection200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3ProcessStainSelection200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3ProcessStainSelection200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3ProcessStainSelection200ResponseDataCurrentItemDescriptionMin).max(substep3ProcessStainSelection200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3ProcessStainSelection200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3ProcessStainSelection200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3ProcessStainSelection200ResponseDataCurrentItemDefectsNotesMin).max(substep3ProcessStainSelection200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3ProcessStainSelection400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessStainSelection401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessStainSelection403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessStainSelection404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessStainSelection409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–º—ñ—Ç–æ–∫ –ø—Ä–æ –¥–µ—Ñ–µ–∫—Ç–∏
 */
export const substep3ProcessDefectNotesParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3ProcessDefectNotesQueryParams = zod.object({
  "defectNotes": zod.coerce.string().optional()
}).strict()

export const substep3ProcessDefectNotes200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3ProcessDefectNotes200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3ProcessDefectNotes200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3ProcessDefectNotes200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3ProcessDefectNotes200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3ProcessDefectNotes200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3ProcessDefectNotes200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3ProcessDefectNotes200ResponseDataCurrentItemDescriptionMin).max(substep3ProcessDefectNotes200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3ProcessDefectNotes200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3ProcessDefectNotes200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3ProcessDefectNotes200ResponseDataCurrentItemDefectsNotesMin).max(substep3ProcessDefectNotes200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3ProcessDefectNotes400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectNotes401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectNotes403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectNotes404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectNotes409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 3
 */
export const substep3InitializeSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3InitializeSubstepBodyDescriptionMin = 0;

export const substep3InitializeSubstepBodyDescriptionMax = 1000;
export const substep3InitializeSubstepBodySpecialInstructionsMin = 0;

export const substep3InitializeSubstepBodySpecialInstructionsMax = 500;
export const substep3InitializeSubstepBodyDefectsNotesMin = 0;

export const substep3InitializeSubstepBodyDefectsNotesMax = 1000;


export const substep3InitializeSubstepBody = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3InitializeSubstepBodyDescriptionMin).max(substep3InitializeSubstepBodyDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3InitializeSubstepBodySpecialInstructionsMin).max(substep3InitializeSubstepBodySpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3InitializeSubstepBodyDefectsNotesMin).max(substep3InitializeSubstepBodyDefectsNotesMax).optional()
}).strict()

export const substep3InitializeSubstep200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3InitializeSubstep200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3InitializeSubstep200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3InitializeSubstep200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3InitializeSubstep200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3InitializeSubstep200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3InitializeSubstep200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3InitializeSubstep200ResponseDataCurrentItemDescriptionMin).max(substep3InitializeSubstep200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3InitializeSubstep200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3InitializeSubstep200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3InitializeSubstep200ResponseDataCurrentItemDefectsNotesMin).max(substep3InitializeSubstep200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3InitializeSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3InitializeSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3InitializeSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3InitializeSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3InitializeSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const substep3GoBackParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3GoBackQueryParams = zod.object({
  "targetState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR'])
}).strict()

export const substep3GoBack200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3GoBack200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3GoBack200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3GoBack200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3GoBack200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3GoBack200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3GoBack200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3GoBack200ResponseDataCurrentItemDescriptionMin).max(substep3GoBack200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3GoBack200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3GoBack200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3GoBack200ResponseDataCurrentItemDefectsNotesMin).max(substep3GoBack200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3GoBack400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GoBack401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GoBack403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GoBack404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GoBack409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤
 */
export const substep3ProcessDefectSelectionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3ProcessDefectSelectionQueryParams = zod.object({
  "selectedDefects": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional()
}).strict()

export const substep3ProcessDefectSelection200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3ProcessDefectSelection200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3ProcessDefectSelection200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3ProcessDefectSelection200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3ProcessDefectSelection200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3ProcessDefectSelection200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3ProcessDefectSelection200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3ProcessDefectSelection200ResponseDataCurrentItemDescriptionMin).max(substep3ProcessDefectSelection200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3ProcessDefectSelection200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3ProcessDefectSelection200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3ProcessDefectSelection200ResponseDataCurrentItemDefectsNotesMin).max(substep3ProcessDefectSelection200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3ProcessDefectSelection400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectSelection401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectSelection403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectSelection404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3ProcessDefectSelection409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—ñ–¥–µ—Ç–∞–ø—É 3
 */
export const substep3CompleteSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3CompleteSubstep200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3CompleteSubstep200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3CompleteSubstep200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3CompleteSubstep200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3CompleteSubstep200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3CompleteSubstep200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3CompleteSubstep200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3CompleteSubstep200ResponseDataCurrentItemDescriptionMin).max(substep3CompleteSubstep200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3CompleteSubstep200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3CompleteSubstep200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3CompleteSubstep200ResponseDataCurrentItemDefectsNotesMin).max(substep3CompleteSubstep200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3CompleteSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3CompleteSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3CompleteSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3CompleteSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3CompleteSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î –≤—Å—ñ –≤–∏–±—Ä–∞–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 */
export const substep2ValidateCharacteristicsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2ValidateCharacteristics200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const substep2ValidateCharacteristics400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2ValidateCharacteristics409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î —Å—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É
 */
export const substep2SelectWearLevelParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectWearLevelQueryParams = zod.object({
  "wearPercentage": zod.coerce.number()
}).strict()

export const substep2SelectWearLevel200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const substep2SelectWearLevel400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectWearLevel409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –º–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const substep2SelectMaterialParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectMaterialQueryParams = zod.object({
  "materialId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectMaterial200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const substep2SelectMaterial400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectMaterial409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á
 */
export const substep2SelectFillerParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectFillerQueryIsFillerDamagedDefault = false;

export const substep2SelectFillerQueryParams = zod.object({
  "fillerType": zod.coerce.string().optional(),
  "isFillerDamaged": zod.coerce.boolean().optional()
}).strict()

export const substep2SelectFiller200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const substep2SelectFiller400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectFiller409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const substep2SelectColorParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2SelectColorQueryParams = zod.object({
  "color": zod.coerce.string()
}).strict()

export const substep2SelectColor200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const substep2SelectColor400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2SelectColor409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø—ñ–¥–µ—Ç–∞–ø 2 - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 */
export const substep2InitializeSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2InitializeSubstepQueryParams = zod.object({
  "itemId": zod.coerce.string().uuid()
}).strict()

export const substep2InitializeSubstep200ResponseCurrentItemDescriptionMin = 0;

export const substep2InitializeSubstep200ResponseCurrentItemDescriptionMax = 1000;
export const substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMin = 0;

export const substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMax = 500;
export const substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMin = 0;

export const substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMax = 1000;


export const substep2InitializeSubstep200Response = zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep2InitializeSubstep200ResponseCurrentItemDescriptionMin).max(substep2InitializeSubstep200ResponseCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMin).max(substep2InitializeSubstep200ResponseCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMin).max(substep2InitializeSubstep200ResponseCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.coerce.boolean().optional(),
  "colorSelectionCompleted": zod.coerce.boolean().optional(),
  "fillerSelectionCompleted": zod.coerce.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional()
}).strict()

export const substep2InitializeSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2InitializeSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 2
 */
export const substep2CompleteSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2CompleteSubstep200Response = zod.record(zod.string(), zod.any())

export const substep2CompleteSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CompleteSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –ø—ñ–¥–µ—Ç–∞–ø 2
 */
export const substep2CancelSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2CancelSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2CancelSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î —Ç–∞ –∑–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 1
 */
export const substep1ValidateAndCompleteParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1ValidateAndComplete200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1ValidateAndComplete400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1ValidateAndComplete409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const substep1SelectPriceListItemParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectPriceListItemQueryParams = zod.object({
  "itemId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectPriceListItem200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1SelectPriceListItem400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectPriceListItem409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥–∏
 */
export const substep1SelectServiceCategoryParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectServiceCategoryQueryParams = zod.object({
  "categoryId": zod.coerce.string().uuid()
}).strict()

export const substep1SelectServiceCategory200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1SelectServiceCategory400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1SelectServiceCategory409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î –ø—ñ–¥–µ—Ç–∞–ø 1 –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const substep1ResetParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1Reset200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1Reset400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1Reset409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 */
export const substep1EnterQuantityParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1EnterQuantityQueryParams = zod.object({
  "quantity": zod.coerce.number()
}).strict()

export const substep1EnterQuantity200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1EnterQuantity400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1EnterQuantity409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—á–∏–Ω–∞—î –Ω–æ–≤–∏–π –ø—ñ–¥–µ—Ç–∞–ø 1 - –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
 */
export const substep1StartSubstep200Response = zod.object({
  "itemId": zod.coerce.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "quantity": zod.coerce.number().optional(),
  "totalBasePrice": zod.coerce.number().optional(),
  "valid": zod.coerce.boolean().optional(),
  "complete": zod.coerce.boolean().optional()
}).strict()

export const substep1StartSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1StartSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î —Å–µ—Å—ñ—é –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const stage2ResetSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2ResetSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ResetSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ResetSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ResetSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ResetSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–¥–∞—î –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞)
 */
export const stage2AddItemToOrderParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2AddItemToOrderBodyNameMin = 0;

export const stage2AddItemToOrderBodyNameMax = 255;
export const stage2AddItemToOrderBodyDescriptionMin = 0;

export const stage2AddItemToOrderBodyDescriptionMax = 1000;
export const stage2AddItemToOrderBodySpecialInstructionsMin = 0;

export const stage2AddItemToOrderBodySpecialInstructionsMax = 500;
export const stage2AddItemToOrderBodyDefectsNotesMin = 0;

export const stage2AddItemToOrderBodyDefectsNotesMax = 1000;


export const stage2AddItemToOrderBody = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2AddItemToOrderBodyNameMin).max(stage2AddItemToOrderBodyNameMax),
  "description": zod.coerce.string().min(stage2AddItemToOrderBodyDescriptionMin).max(stage2AddItemToOrderBodyDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2AddItemToOrderBodySpecialInstructionsMin).max(stage2AddItemToOrderBodySpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2AddItemToOrderBodyDefectsNotesMin).max(stage2AddItemToOrderBodyDefectsNotesMax).optional()
}).strict()

export const stage2AddItemToOrder200ResponseAddedItemsItemNameMin = 0;

export const stage2AddItemToOrder200ResponseAddedItemsItemNameMax = 255;
export const stage2AddItemToOrder200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2AddItemToOrder200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2AddItemToOrder200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2AddItemToOrder200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2AddItemToOrder200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2AddItemToOrder200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2AddItemToOrder200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2AddItemToOrder200ResponseAddedItemsItemNameMin).max(stage2AddItemToOrder200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2AddItemToOrder200ResponseAddedItemsItemDescriptionMin).max(stage2AddItemToOrder200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2AddItemToOrder200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2AddItemToOrder200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2AddItemToOrder200ResponseAddedItemsItemDefectsNotesMin).max(stage2AddItemToOrder200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2AddItemToOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2AddItemToOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2AddItemToOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2AddItemToOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2AddItemToOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –Ω–æ–≤–∏–π —Å–µ–∞–Ω—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage2InitializeItemManagerParams = zod.object({
  "orderId": zod.coerce.string().uuid()
}).strict()

export const stage2InitializeItemManager200ResponseAddedItemsItemNameMin = 0;

export const stage2InitializeItemManager200ResponseAddedItemsItemNameMax = 255;
export const stage2InitializeItemManager200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2InitializeItemManager200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2InitializeItemManager200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2InitializeItemManager200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2InitializeItemManager200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2InitializeItemManager200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2InitializeItemManager200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2InitializeItemManager200ResponseAddedItemsItemNameMin).max(stage2InitializeItemManager200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2InitializeItemManager200ResponseAddedItemsItemDescriptionMin).max(stage2InitializeItemManager200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2InitializeItemManager200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2InitializeItemManager200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2InitializeItemManager200ResponseAddedItemsItemDefectsNotesMin).max(stage2InitializeItemManager200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2InitializeItemManager400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2InitializeItemManager401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2InitializeItemManager403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2InitializeItemManager404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2InitializeItemManager409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –µ—Ç–∞–ø 2 —Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É
 */
export const stage2CompleteStageParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2CompleteStage200ResponseAddedItemsItemNameMin = 0;

export const stage2CompleteStage200ResponseAddedItemsItemNameMax = 255;
export const stage2CompleteStage200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2CompleteStage200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2CompleteStage200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2CompleteStage200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2CompleteStage200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2CompleteStage200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2CompleteStage200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2CompleteStage200ResponseAddedItemsItemNameMin).max(stage2CompleteStage200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2CompleteStage200ResponseAddedItemsItemDescriptionMin).max(stage2CompleteStage200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2CompleteStage200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2CompleteStage200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2CompleteStage200ResponseAddedItemsItemDefectsNotesMin).max(stage2CompleteStage200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2CompleteStage400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CompleteStage401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CompleteStage403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CompleteStage404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CompleteStage409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î —Ñ–æ—Ä–º—É –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1ValidateClientFormParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1ValidateClientForm200Response = zod.object({

})

export const stage1ValidateClientForm400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateClientForm401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateClientForm403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateClientForm404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateClientForm409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1CreateClientParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CreateClient200ResponseStructuredAddressCityMin = 2;

export const stage1CreateClient200ResponseStructuredAddressCityMax = 100;

export const stage1CreateClient200ResponseStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage1CreateClient200ResponseStructuredAddressStreetMin = 2;

export const stage1CreateClient200ResponseStructuredAddressStreetMax = 150;

export const stage1CreateClient200ResponseStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage1CreateClient200ResponseStructuredAddressBuildingMin = 0;

export const stage1CreateClient200ResponseStructuredAddressBuildingMax = 20;

export const stage1CreateClient200ResponseStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1CreateClient200ResponseStructuredAddressApartmentMin = 0;

export const stage1CreateClient200ResponseStructuredAddressApartmentMax = 20;

export const stage1CreateClient200ResponseStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1CreateClient200ResponseStructuredAddressPostalCodeMin = 0;

export const stage1CreateClient200ResponseStructuredAddressPostalCodeMax = 10;

export const stage1CreateClient200ResponseStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage1CreateClient200ResponseStructuredAddressFullAddressMin = 5;

export const stage1CreateClient200ResponseStructuredAddressFullAddressMax = 500;
export const stage1CreateClient200ResponsePreferencesItemKeyMin = 0;

export const stage1CreateClient200ResponsePreferencesItemKeyMax = 100;
export const stage1CreateClient200ResponsePreferencesItemValueMin = 0;

export const stage1CreateClient200ResponsePreferencesItemValueMax = 255;


export const stage1CreateClient200Response = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage1CreateClient200ResponseStructuredAddressCityMin).max(stage1CreateClient200ResponseStructuredAddressCityMax).regex(stage1CreateClient200ResponseStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage1CreateClient200ResponseStructuredAddressStreetMin).max(stage1CreateClient200ResponseStructuredAddressStreetMax).regex(stage1CreateClient200ResponseStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage1CreateClient200ResponseStructuredAddressBuildingMin).max(stage1CreateClient200ResponseStructuredAddressBuildingMax).regex(stage1CreateClient200ResponseStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage1CreateClient200ResponseStructuredAddressApartmentMin).max(stage1CreateClient200ResponseStructuredAddressApartmentMax).regex(stage1CreateClient200ResponseStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage1CreateClient200ResponseStructuredAddressPostalCodeMin).max(stage1CreateClient200ResponseStructuredAddressPostalCodeMax).regex(stage1CreateClient200ResponseStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage1CreateClient200ResponseStructuredAddressFullAddressMin).max(stage1CreateClient200ResponseStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage1CreateClient200ResponsePreferencesItemKeyMin).max(stage1CreateClient200ResponsePreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage1CreateClient200ResponsePreferencesItemValueMin).max(stage1CreateClient200ResponsePreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict()

export const stage1CreateClient400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CreateClient401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CreateClient403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CreateClient404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CreateClient409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1CompleteClientCreationParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CompleteClientCreation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientCreation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientCreation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientCreation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientCreation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1InitializeNewClient200Response = zod.coerce.string()

export const stage1InitializeNewClient400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeNewClient401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeNewClient403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeNewClient404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeNewClient409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–ª—ñ—î–Ω—Ç–∞ –∑—ñ —Å–ø–∏—Å–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
 */
export const stage1SelectClientParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1SelectClientQueryParams = zod.object({
  "clientId": zod.coerce.string().uuid()
}).strict()

export const stage1SelectClient400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectClient401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectClient403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectClient404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectClient409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–∫–æ–Ω—É—î –ø–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
 */
export const stage1SearchClientsParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1SearchClientsBody = zod.object({
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "generalSearchTerm": zod.coerce.string().optional(),
  "page": zod.coerce.number().optional(),
  "size": zod.coerce.number().optional()
}).strict()

export const stage1SearchClients200ResponseClientsItemStructuredAddressCityMin = 2;

export const stage1SearchClients200ResponseClientsItemStructuredAddressCityMax = 100;

export const stage1SearchClients200ResponseClientsItemStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage1SearchClients200ResponseClientsItemStructuredAddressStreetMin = 2;

export const stage1SearchClients200ResponseClientsItemStructuredAddressStreetMax = 150;

export const stage1SearchClients200ResponseClientsItemStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage1SearchClients200ResponseClientsItemStructuredAddressBuildingMin = 0;

export const stage1SearchClients200ResponseClientsItemStructuredAddressBuildingMax = 20;

export const stage1SearchClients200ResponseClientsItemStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClients200ResponseClientsItemStructuredAddressApartmentMin = 0;

export const stage1SearchClients200ResponseClientsItemStructuredAddressApartmentMax = 20;

export const stage1SearchClients200ResponseClientsItemStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClients200ResponseClientsItemStructuredAddressPostalCodeMin = 0;

export const stage1SearchClients200ResponseClientsItemStructuredAddressPostalCodeMax = 10;

export const stage1SearchClients200ResponseClientsItemStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage1SearchClients200ResponseClientsItemStructuredAddressFullAddressMin = 5;

export const stage1SearchClients200ResponseClientsItemStructuredAddressFullAddressMax = 500;
export const stage1SearchClients200ResponseClientsItemPreferencesItemKeyMin = 0;

export const stage1SearchClients200ResponseClientsItemPreferencesItemKeyMax = 100;
export const stage1SearchClients200ResponseClientsItemPreferencesItemValueMin = 0;

export const stage1SearchClients200ResponseClientsItemPreferencesItemValueMax = 255;
export const stage1SearchClients200ResponseFirstClientStructuredAddressCityMin = 2;

export const stage1SearchClients200ResponseFirstClientStructuredAddressCityMax = 100;

export const stage1SearchClients200ResponseFirstClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage1SearchClients200ResponseFirstClientStructuredAddressStreetMin = 2;

export const stage1SearchClients200ResponseFirstClientStructuredAddressStreetMax = 150;

export const stage1SearchClients200ResponseFirstClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage1SearchClients200ResponseFirstClientStructuredAddressBuildingMin = 0;

export const stage1SearchClients200ResponseFirstClientStructuredAddressBuildingMax = 20;

export const stage1SearchClients200ResponseFirstClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClients200ResponseFirstClientStructuredAddressApartmentMin = 0;

export const stage1SearchClients200ResponseFirstClientStructuredAddressApartmentMax = 20;

export const stage1SearchClients200ResponseFirstClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClients200ResponseFirstClientStructuredAddressPostalCodeMin = 0;

export const stage1SearchClients200ResponseFirstClientStructuredAddressPostalCodeMax = 10;

export const stage1SearchClients200ResponseFirstClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage1SearchClients200ResponseFirstClientStructuredAddressFullAddressMin = 5;

export const stage1SearchClients200ResponseFirstClientStructuredAddressFullAddressMax = 500;
export const stage1SearchClients200ResponseFirstClientPreferencesItemKeyMin = 0;

export const stage1SearchClients200ResponseFirstClientPreferencesItemKeyMax = 100;
export const stage1SearchClients200ResponseFirstClientPreferencesItemValueMin = 0;

export const stage1SearchClients200ResponseFirstClientPreferencesItemValueMax = 255;


export const stage1SearchClients200Response = zod.object({
  "clients": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemStructuredAddressCityMin).max(stage1SearchClients200ResponseClientsItemStructuredAddressCityMax).regex(stage1SearchClients200ResponseClientsItemStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemStructuredAddressStreetMin).max(stage1SearchClients200ResponseClientsItemStructuredAddressStreetMax).regex(stage1SearchClients200ResponseClientsItemStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemStructuredAddressBuildingMin).max(stage1SearchClients200ResponseClientsItemStructuredAddressBuildingMax).regex(stage1SearchClients200ResponseClientsItemStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemStructuredAddressApartmentMin).max(stage1SearchClients200ResponseClientsItemStructuredAddressApartmentMax).regex(stage1SearchClients200ResponseClientsItemStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemStructuredAddressPostalCodeMin).max(stage1SearchClients200ResponseClientsItemStructuredAddressPostalCodeMax).regex(stage1SearchClients200ResponseClientsItemStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemStructuredAddressFullAddressMin).max(stage1SearchClients200ResponseClientsItemStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemPreferencesItemKeyMin).max(stage1SearchClients200ResponseClientsItemPreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage1SearchClients200ResponseClientsItemPreferencesItemValueMin).max(stage1SearchClients200ResponseClientsItemPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict()).optional(),
  "searchCriteria": zod.object({
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "generalSearchTerm": zod.coerce.string().optional(),
  "page": zod.coerce.number().optional(),
  "size": zod.coerce.number().optional()
}).strict().optional(),
  "totalElements": zod.coerce.number().optional(),
  "totalPages": zod.coerce.number().optional(),
  "pageNumber": zod.coerce.number().optional(),
  "pageSize": zod.coerce.number().optional(),
  "hasPrevious": zod.coerce.boolean().optional(),
  "hasNext": zod.coerce.boolean().optional(),
  "searchTimeMs": zod.coerce.number().optional(),
  "exactSearch": zod.coerce.boolean().optional(),
  "firstClient": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientStructuredAddressCityMin).max(stage1SearchClients200ResponseFirstClientStructuredAddressCityMax).regex(stage1SearchClients200ResponseFirstClientStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientStructuredAddressStreetMin).max(stage1SearchClients200ResponseFirstClientStructuredAddressStreetMax).regex(stage1SearchClients200ResponseFirstClientStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientStructuredAddressBuildingMin).max(stage1SearchClients200ResponseFirstClientStructuredAddressBuildingMax).regex(stage1SearchClients200ResponseFirstClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientStructuredAddressApartmentMin).max(stage1SearchClients200ResponseFirstClientStructuredAddressApartmentMax).regex(stage1SearchClients200ResponseFirstClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientStructuredAddressPostalCodeMin).max(stage1SearchClients200ResponseFirstClientStructuredAddressPostalCodeMax).regex(stage1SearchClients200ResponseFirstClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientStructuredAddressFullAddressMin).max(stage1SearchClients200ResponseFirstClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientPreferencesItemKeyMin).max(stage1SearchClients200ResponseFirstClientPreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage1SearchClients200ResponseFirstClientPreferencesItemValueMin).max(stage1SearchClients200ResponseFirstClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict().optional()
}).strict()

export const stage1SearchClients400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClients401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClients403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClients404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClients409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
 */
export const stage1SearchClientsByPhoneParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1SearchClientsByPhoneQueryParams = zod.object({
  "phone": zod.coerce.string()
}).strict()

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressCityMin = 2;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressCityMax = 100;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressStreetMin = 2;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressStreetMax = 150;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMin = 0;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMax = 20;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMin = 0;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMax = 20;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMin = 0;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMax = 10;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMin = 5;

export const stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMax = 500;
export const stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemKeyMin = 0;

export const stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemKeyMax = 100;
export const stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemValueMin = 0;

export const stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemValueMax = 255;
export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressCityMin = 2;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressCityMax = 100;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressStreetMin = 2;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressStreetMax = 150;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMin = 0;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMax = 20;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMin = 0;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMax = 20;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMin = 0;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMax = 10;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMin = 5;

export const stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMax = 500;
export const stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemKeyMin = 0;

export const stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemKeyMax = 100;
export const stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemValueMin = 0;

export const stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemValueMax = 255;


export const stage1SearchClientsByPhone200Response = zod.object({
  "clients": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressCityMin).max(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressCityMax).regex(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressStreetMin).max(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressStreetMax).regex(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMin).max(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMax).regex(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMin).max(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMax).regex(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMin).max(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMax).regex(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMin).max(stage1SearchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemKeyMin).max(stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemValueMin).max(stage1SearchClientsByPhone200ResponseClientsItemPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict()).optional(),
  "searchCriteria": zod.object({
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "generalSearchTerm": zod.coerce.string().optional(),
  "page": zod.coerce.number().optional(),
  "size": zod.coerce.number().optional()
}).strict().optional(),
  "totalElements": zod.coerce.number().optional(),
  "totalPages": zod.coerce.number().optional(),
  "pageNumber": zod.coerce.number().optional(),
  "pageSize": zod.coerce.number().optional(),
  "hasPrevious": zod.coerce.boolean().optional(),
  "hasNext": zod.coerce.boolean().optional(),
  "searchTimeMs": zod.coerce.number().optional(),
  "exactSearch": zod.coerce.boolean().optional(),
  "firstClient": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressCityMin).max(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressCityMax).regex(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressStreetMin).max(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressStreetMax).regex(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMin).max(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMax).regex(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMin).max(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMax).regex(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMin).max(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMax).regex(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMin).max(stage1SearchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemKeyMin).max(stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemValueMin).max(stage1SearchClientsByPhone200ResponseFirstClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict().optional()
}).strict()

export const stage1SearchClientsByPhone400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClientsByPhone401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClientsByPhone403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClientsByPhone404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SearchClientsByPhone409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –ø–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1CompleteClientSearchParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CompleteClientSearch400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientSearch401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientSearch403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientSearch404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteClientSearch409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—á–∏—â—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É
 */
export const stage1ClearClientSearchParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1ClearClientSearch400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearClientSearch401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearClientSearch403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearClientSearch404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearClientSearch409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—à—É–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
 */
export const stage1InitializeClientSearch200Response = zod.coerce.string()

export const stage1InitializeClientSearch400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeClientSearch401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeClientSearch403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeClientSearch404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeClientSearch409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—á–∏–Ω–∞—î workflow –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const stage1StartBasicOrderWorkflow200Response = zod.coerce.string()

export const stage1StartBasicOrderWorkflow400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1StartBasicOrderWorkflow401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1StartBasicOrderWorkflow403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1StartBasicOrderWorkflow404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1StartBasicOrderWorkflow409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const stage1ValidateBasicOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1ValidateBasicOrder200Response = zod.object({

})

export const stage1ValidateBasicOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateBasicOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateBasicOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateBasicOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ValidateBasicOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —É–Ω—ñ–∫–∞–ª—å–Ω—É –º—ñ—Ç–∫—É
 */
export const stage1SetUniqueTagParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1SetUniqueTagQueryParams = zod.object({
  "uniqueTag": zod.coerce.string()
}).strict()

export const stage1SetUniqueTag400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SetUniqueTag401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SetUniqueTag403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SetUniqueTag404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SetUniqueTag409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î —Ñ—ñ–ª—ñ—é –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage1SelectBranchParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1SelectBranchQueryParams = zod.object({
  "branchId": zod.coerce.string().uuid()
}).strict()

export const stage1SelectBranch400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectBranch401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectBranch403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectBranch404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1SelectBranch409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const stage1ResetBasicOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1ResetBasicOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ResetBasicOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ResetBasicOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ResetBasicOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ResetBasicOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ì–µ–Ω–µ—Ä—É—î –Ω–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const stage1GenerateReceiptNumberParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GenerateReceiptNumberQueryParams = zod.object({
  "branchCode": zod.coerce.string()
}).strict()

export const stage1GenerateReceiptNumber200Response = zod.coerce.string()

export const stage1GenerateReceiptNumber400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GenerateReceiptNumber401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GenerateReceiptNumber403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GenerateReceiptNumber404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GenerateReceiptNumber409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –∑–±—ñ—Ä –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const stage1CompleteBasicOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CompleteBasicOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteBasicOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteBasicOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteBasicOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CompleteBasicOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—á–∏—â—É—î –ø–æ–º–∏–ª–∫–∏ –¥–ª—è —Å–µ—Å—ñ—ó
 */
export const stage1ClearBasicOrderErrorsParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1ClearBasicOrderErrors400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearBasicOrderErrors401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearBasicOrderErrors403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearBasicOrderErrors404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1ClearBasicOrderErrors409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∑–±—ñ—Ä –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage1InitializeBasicOrder200Response = zod.coerce.string()

export const stage1InitializeBasicOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeBasicOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeBasicOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeBasicOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1InitializeBasicOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–ø—É—Å–∫–∞—î –Ω–æ–≤–∏–π Order Wizard
 */
export const orderWizardStart200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardStart400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardStart401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardStart403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardStart404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardStart409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –µ—Ç–∞–ø
 */
export const orderWizardGoBackParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardGoBack200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardGoBack400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGoBack401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGoBack403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGoBack404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGoBack409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ Stage4 –∑ Stage3
 */
export const orderWizardCompleteStage3Params = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardCompleteStage3200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardCompleteStage3400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage3401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage3403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage3404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage3409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ Stage3 –∑ Stage2
 */
export const orderWizardCompleteStage2Params = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardCompleteStage2200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardCompleteStage2400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage2401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage2403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage2404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage2409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É –∑ Stage1 –¥–æ Stage2
 */
export const orderWizardCompleteStage1Params = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardCompleteStage1200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardCompleteStage1400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage1401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage1403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage1404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteStage1409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è Order Wizard
 */
export const orderWizardCompleteOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardCompleteOrder200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardCompleteOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCompleteOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å—É–≤–∞–Ω–Ω—è Order Wizard
 */
export const orderWizardCancelOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardCancelOrder200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardCancelOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCancelOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCancelOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCancelOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardCancelOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è Stage4
 */
export const stage4ValidateCompleteParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4ValidateComplete200Response = zod.object({

})

export const stage4ValidateComplete400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateComplete401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateComplete403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateComplete404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4ValidateComplete409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Å–µ—Å—ñ—ó
 */
export const stage4GetSessionContextParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4GetSessionContext200Response = zod.object({

})

export const stage4GetSessionContext400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetSessionContext401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetSessionContext403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetSessionContext404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetSessionContext409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É Stage4
 */
export const stage4GetCurrentStateParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage4GetCurrentState200Response = zod.object({

})

export const stage4GetCurrentState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetCurrentState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetCurrentState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetCurrentState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetCurrentState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—ñ–¥—Å—É–º–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const stage4GetOrderSummaryParams = zod.object({
  "orderId": zod.coerce.string().uuid()
}).strict()

export const stage4GetOrderSummary200Response = zod.object({

})

export const stage4GetOrderSummary400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetOrderSummary401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetOrderSummary403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetOrderSummary404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage4GetOrderSummary409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É–≤–∞—Ç–∏ –≤—Å—ñ –ø—ñ–¥–µ—Ç–∞–ø–∏
 */
export const stage3ValidateAllSubstepsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3ValidateAllSubsteps200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const stage3ValidateAllSubsteps400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3ValidateAllSubsteps401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3ValidateAllSubsteps403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3ValidateAllSubsteps404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3ValidateAllSubsteps409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞–Ω —Å–µ—Å—ñ—ó
 */
export const stage3GetSessionStateParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3GetSessionState200Response = zod.enum(['STAGE3_INIT', 'EXECUTION_PARAMS_INIT', 'DATE_SELECTION', 'URGENCY_SELECTION', 'EXECUTION_PARAMS_COMPLETED', 'DISCOUNT_CONFIG_INIT', 'DISCOUNT_TYPE_SELECTION', 'DISCOUNT_VALIDATION', 'DISCOUNT_CONFIG_COMPLETED', 'PAYMENT_CONFIG_INIT', 'PAYMENT_METHOD_SELECTION', 'PAYMENT_AMOUNT_CALCULATION', 'PAYMENT_CONFIG_COMPLETED', 'ADDITIONAL_INFO_INIT', 'NOTES_INPUT', 'REQUIREMENTS_INPUT', 'ADDITIONAL_INFO_COMPLETED', 'STAGE3_COMPLETED', 'STAGE3_ERROR'])

export const stage3GetSessionState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å Stage3
 */
export const stage3IsStageReadyParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3IsStageReady200Response = zod.coerce.boolean()

export const stage3IsStageReady400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsStageReady401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsStageReady403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsStageReady404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsStageReady409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —Å–µ—Å—ñ—ó
 */
export const stage3GetSessionProgressParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3GetSessionProgress200Response = zod.coerce.number()

export const stage3GetSessionProgress400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionProgress401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionProgress403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionProgress404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionProgress409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –æ–ø–ª–∞—Ç–∏
 */
export const stage3IsPaymentConfigReadyParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3IsPaymentConfigReady200Response = zod.coerce.boolean()

export const stage3IsPaymentConfigReady400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsPaymentConfigReady401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsPaymentConfigReady403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsPaymentConfigReady404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsPaymentConfigReady409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø—ñ–¥–µ—Ç–∞–ø
 */
export const stage3GetNextSubstepParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3GetNextSubstep200Response = zod.enum(['STAGE3_INIT', 'EXECUTION_PARAMS_INIT', 'DATE_SELECTION', 'URGENCY_SELECTION', 'EXECUTION_PARAMS_COMPLETED', 'DISCOUNT_CONFIG_INIT', 'DISCOUNT_TYPE_SELECTION', 'DISCOUNT_VALIDATION', 'DISCOUNT_CONFIG_COMPLETED', 'PAYMENT_CONFIG_INIT', 'PAYMENT_METHOD_SELECTION', 'PAYMENT_AMOUNT_CALCULATION', 'PAYMENT_CONFIG_COMPLETED', 'ADDITIONAL_INFO_INIT', 'NOTES_INPUT', 'REQUIREMENTS_INPUT', 'ADDITIONAL_INFO_COMPLETED', 'STAGE3_COMPLETED', 'STAGE3_ERROR'])

export const stage3GetNextSubstep400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetNextSubstep401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetNextSubstep403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetNextSubstep404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetNextSubstep409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
 */
export const stage3IsExecutionParamsReadyParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3IsExecutionParamsReady200Response = zod.coerce.boolean()

export const stage3IsExecutionParamsReady400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsExecutionParamsReady401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsExecutionParamsReady403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsExecutionParamsReady404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsExecutionParamsReady409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑–Ω–∏–∂–æ–∫
 */
export const stage3IsDiscountConfigReadyParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3IsDiscountConfigReady200Response = zod.coerce.boolean()

export const stage3IsDiscountConfigReady400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsDiscountConfigReady401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsDiscountConfigReady403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsDiscountConfigReady404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsDiscountConfigReady409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—ñ—ó
 */
export const stage3GetSessionContextParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMin = 0;

export const stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMax = 100;
export const stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMin = 0;

export const stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMax = 255;
export const stage3GetSessionContext200ResponsePaymentConfigurationPaymentRequestPrepaymentAmountMin = 0;
export const stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMin = 0;

export const stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMax = 1000;
export const stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMin = 0;

export const stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMax = 1000;


export const stage3GetSessionContext200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['STAGE3_INIT', 'EXECUTION_PARAMS_INIT', 'DATE_SELECTION', 'URGENCY_SELECTION', 'EXECUTION_PARAMS_COMPLETED', 'DISCOUNT_CONFIG_INIT', 'DISCOUNT_TYPE_SELECTION', 'DISCOUNT_VALIDATION', 'DISCOUNT_CONFIG_COMPLETED', 'PAYMENT_CONFIG_INIT', 'PAYMENT_METHOD_SELECTION', 'PAYMENT_AMOUNT_CALCULATION', 'PAYMENT_CONFIG_COMPLETED', 'ADDITIONAL_INFO_INIT', 'NOTES_INPUT', 'REQUIREMENTS_INPUT', 'ADDITIONAL_INFO_COMPLETED', 'STAGE3_COMPLETED', 'STAGE3_ERROR']).optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "executionParams": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "serviceCategoryIds": zod.array(zod.coerce.string().uuid()).optional(),
  "completionDateRequest": zod.object({
  "serviceCategoryIds": zod.array(zod.coerce.string().uuid()).min(1),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H'])
}).strict().optional(),
  "completionDateResponse": zod.object({
  "expectedCompletionDate": zod.coerce.string().datetime({}).optional(),
  "standardProcessingHours": zod.coerce.number().optional(),
  "expeditedProcessingHours": zod.coerce.number().optional()
}).strict().optional(),
  "manualExecutionDate": zod.coerce.string().date().optional(),
  "useManualDate": zod.coerce.boolean().optional(),
  "needsRecalculation": zod.coerce.boolean().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "executionParamsComplete": zod.coerce.boolean().optional(),
  "effectiveExecutionDate": zod.coerce.string().datetime({}).optional()
}).strict().optional(),
  "discountConfiguration": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "discountRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']),
  "discountPercentage": zod.coerce.number().min(stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMin).max(stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMax).optional(),
  "discountDescription": zod.coerce.string().min(stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMin).max(stage3GetSessionContext200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMax).optional()
}).strict().optional(),
  "discountResponse": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.coerce.number().optional(),
  "discountDescription": zod.coerce.string().optional(),
  "totalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "nonDiscountableCategories": zod.array(zod.coerce.string()).optional(),
  "nonDiscountableAmount": zod.coerce.number().optional()
}).strict().optional(),
  "excludedCategoryIds": zod.array(zod.coerce.string().uuid()).optional(),
  "originalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "isValid": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "discountDescription": zod.coerce.string().optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.coerce.number().optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "discountConfigComplete": zod.coerce.boolean().optional()
}).strict().optional(),
  "paymentConfiguration": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "paymentRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.coerce.number().min(stage3GetSessionContext200ResponsePaymentConfigurationPaymentRequestPrepaymentAmountMin).optional()
}).strict().optional(),
  "paymentResponse": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "discountAmount": zod.coerce.number().optional(),
  "finalAmount": zod.coerce.number().optional(),
  "prepaymentAmount": zod.coerce.number().optional(),
  "balanceAmount": zod.coerce.number().optional()
}).strict().optional(),
  "totalAmount": zod.coerce.number().optional(),
  "paidAmount": zod.coerce.number().optional(),
  "remainingAmount": zod.coerce.number().optional(),
  "isValid": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "prepaymentAmount": zod.coerce.number().optional(),
  "fullyPaid": zod.coerce.boolean().optional(),
  "paymentConfigComplete": zod.coerce.boolean().optional()
}).strict().optional(),
  "additionalInfo": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "additionalInfoRequest": zod.object({
  "orderId": zod.coerce.string().uuid(),
  "additionalRequirements": zod.coerce.string().min(stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMin).max(stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMax).optional(),
  "customerNotes": zod.coerce.string().min(stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMin).max(stage3GetSessionContext200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMax).optional()
}).strict().optional(),
  "additionalInfoResponse": zod.object({
  "orderId": zod.coerce.string().uuid().optional(),
  "additionalRequirements": zod.coerce.string().optional(),
  "customerNotes": zod.coerce.string().optional()
}).strict().optional(),
  "hasAdditionalRequirements": zod.coerce.boolean().optional(),
  "hasCustomerNotes": zod.coerce.boolean().optional(),
  "isValid": zod.coerce.boolean().optional(),
  "validationMessage": zod.coerce.string().optional(),
  "lastUpdated": zod.coerce.string().datetime({}).optional(),
  "readyForCompletion": zod.coerce.boolean().optional(),
  "customerNotes": zod.coerce.string().optional(),
  "additionalRequirements": zod.coerce.string().optional(),
  "additionalInfoComplete": zod.coerce.boolean().optional()
}).strict().optional(),
  "lastAction": zod.coerce.string().optional(),
  "lastError": zod.coerce.string().optional(),
  "valid": zod.coerce.boolean().optional(),
  "completedSubstepsCount": zod.coerce.number().optional()
}).strict()

export const stage3GetSessionContext400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionContext401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionContext403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionContext404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3GetSessionContext409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const stage3IsAdditionalInfoReadyParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage3IsAdditionalInfoReady200Response = zod.coerce.boolean()

export const stage3IsAdditionalInfoReady400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsAdditionalInfoReady401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsAdditionalInfoReady403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsAdditionalInfoReady404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage3IsAdditionalInfoReady409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
export const stage2ValidateCurrentStateParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2ValidateCurrentState200Response = zod.object({
  "valid": zod.coerce.boolean().optional(),
  "errors": zod.array(zod.coerce.string()).optional(),
  "warnings": zod.array(zod.coerce.string()).optional(),
  "message": zod.coerce.string().optional(),
  "firstError": zod.coerce.string().optional(),
  "errorCount": zod.coerce.number().optional(),
  "firstWarning": zod.coerce.string().optional(),
  "warningCount": zod.coerce.number().optional(),
  "fullMessage": zod.coerce.string().optional()
}).strict()

export const stage2ValidateCurrentState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ValidateCurrentState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ValidateCurrentState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ValidateCurrentState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2ValidateCurrentState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5GetDocumentationStatusParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5GetDocumentationStatus200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5GetDocumentationStatus400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationStatus409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5GetDocumentationDataParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5GetDocumentationData200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict()

export const substep5GetDocumentationData400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5GetDocumentationData409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const substep4ValidateCurrentStateParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4ValidateCurrentState200Response = zod.coerce.boolean()

export const substep4ValidateCurrentState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateCurrentState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateCurrentState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateCurrentState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateCurrentState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ—Ç–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
 */
export const substep4ValidateDetailedParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4ValidateDetailed200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4ValidateDetailed400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateDetailed401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateDetailed403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateDetailed404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4ValidateDetailed409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É –ø—ñ–¥–µ—Ç–∞–ø—É
 */
export const substep4GetCurrentStateParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4GetCurrentState200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4GetCurrentState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Å–µ—Å—ñ—ó
 */
export const substep4SessionExistsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4SessionExists200Response = zod.coerce.boolean()

export const substep4SessionExists400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4SessionExists401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4SessionExists403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4SessionExists404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4SessionExists409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const substep4GetAvailableModifiersQueryParams = zod.object({
  "categoryCode": zod.coerce.string()
}).strict()

export const substep4GetAvailableModifiers200ResponseItem = zod.object({
  "name": zod.coerce.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.coerce.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.coerce.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.coerce.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
export const substep4GetAvailableModifiers200Response = zod.array(substep4GetAvailableModifiers200ResponseItem)

export const substep4GetAvailableModifiers400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableModifiers401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableModifiers403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableModifiers404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableModifiers409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
 */
export const substep4GetRecommendedModifiersQueryParams = zod.object({
  "categoryCode": zod.coerce.string(),
  "itemName": zod.coerce.string()
}).strict()

export const substep4GetRecommendedModifiers200ResponseItem = zod.object({
  "name": zod.coerce.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.coerce.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.coerce.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.coerce.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
export const substep4GetRecommendedModifiers200Response = zod.array(substep4GetRecommendedModifiers200ResponseItem)

export const substep4GetRecommendedModifiers400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetRecommendedModifiers401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetRecommendedModifiers403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetRecommendedModifiers404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetRecommendedModifiers409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–æ–¥—ñ–π –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const substep4GetAvailableEventsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4GetAvailableEvents200ResponseItem = zod.enum(['INITIALIZE', 'CALCULATE_BASE_PRICE', 'SELECT_MODIFIERS', 'ADD_MODIFIER', 'REMOVE_MODIFIER', 'CALCULATE_FINAL_PRICE', 'CONFIRM_CALCULATION', 'RESET_CALCULATION', 'HANDLE_ERROR'])
export const substep4GetAvailableEvents200Response = zod.array(substep4GetAvailableEvents200ResponseItem)

export const substep4GetAvailableEvents400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableEvents401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableEvents403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableEvents404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetAvailableEvents409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Å–µ—Å—ñ—ó
 */
export const substep4GetCurrentDataParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4GetCurrentData200ResponseCalculationRequestCategoryCodeRegExp = new RegExp('^[A-Z_]+$');
export const substep4GetCurrentData200ResponseCalculationRequestItemNameMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestItemNameMax = 255;
export const substep4GetCurrentData200ResponseCalculationRequestColorMax = 100;
export const substep4GetCurrentData200ResponseCalculationRequestQuantityMax = 1000;
export const substep4GetCurrentData200ResponseCalculationRequestModifierIdsMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestModifierIdsMax = 20;
export const substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMax = 200;
export const substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesMax = 10;
export const substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemQuantityMax = 100;
export const substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMax = 10;
export const substep4GetCurrentData200ResponseCalculationRequestExpeditePercentMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestExpeditePercentMax = 200;
export const substep4GetCurrentData200ResponseCalculationRequestDiscountPercentMin = 0;

export const substep4GetCurrentData200ResponseCalculationRequestDiscountPercentMax = 50;
export const substep4GetCurrentData200ResponseCalculationResponseBaseUnitPriceMin = 0;
export const substep4GetCurrentData200ResponseCalculationResponseBaseTotalPriceMin = 0;
export const substep4GetCurrentData200ResponseCalculationResponseFinalUnitPriceMin = 0;
export const substep4GetCurrentData200ResponseCalculationResponseFinalTotalPriceMin = 0;
export const substep4GetCurrentData200ResponseRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4GetCurrentData200ResponseRangeModifierValuesItemPercentageMin = 0;

export const substep4GetCurrentData200ResponseRangeModifierValuesItemPercentageMax = 200;
export const substep4GetCurrentData200ResponseFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const substep4GetCurrentData200ResponseFixedModifierQuantitiesItemQuantityMax = 100;


export const substep4GetCurrentData200Response = zod.object({
  "calculationRequest": zod.object({
  "categoryCode": zod.coerce.string().min(1).regex(substep4GetCurrentData200ResponseCalculationRequestCategoryCodeRegExp).describe('–ö–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏'),
  "itemName": zod.coerce.string().min(substep4GetCurrentData200ResponseCalculationRequestItemNameMin).max(substep4GetCurrentData200ResponseCalculationRequestItemNameMax).describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "color": zod.coerce.string().max(substep4GetCurrentData200ResponseCalculationRequestColorMax).optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—É'),
  "quantity": zod.coerce.number().min(1).max(substep4GetCurrentData200ResponseCalculationRequestQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "modifierCodes": zod.array(zod.coerce.string()).optional().describe('–°–ø–∏—Å–æ–∫ –∫–æ–¥—ñ–≤ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "modifierIds": zod.array(zod.coerce.string()).min(substep4GetCurrentData200ResponseCalculationRequestModifierIdsMin).max(substep4GetCurrentData200ResponseCalculationRequestModifierIdsMax).optional().describe('–°–ø–∏—Å–æ–∫ ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMin).max(substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).min(substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesMin).max(substep4GetCurrentData200ResponseCalculationRequestRangeModifierValuesMax).optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—É'),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.coerce.number().min(1).max(substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).min(substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMin).max(substep4GetCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMax).optional().describe('–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é'),
  "expedited": zod.coerce.boolean().optional().describe('–ß–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "expeditePercent": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationRequestExpeditePercentMin).max(substep4GetCurrentData200ResponseCalculationRequestExpeditePercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "discountPercent": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationRequestDiscountPercentMin).max(substep4GetCurrentData200ResponseCalculationRequestDiscountPercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–ó–∞–ø–∏—Ç –Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç—É –∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏'),
  "calculationResponse": zod.object({
  "baseUnitPrice": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.coerce.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.coerce.number().min(substep4GetCurrentData200ResponseCalculationResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.coerce.number().optional(),
  "stepName": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "modifierCode": zod.coerce.string().optional(),
  "modifierName": zod.coerce.string().optional(),
  "modifierValue": zod.coerce.string().optional(),
  "priceBefore": zod.coerce.number().optional(),
  "priceAfter": zod.coerce.number().optional(),
  "priceDifference": zod.coerce.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().optional().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "selectedModifierIds": zod.array(zod.coerce.string()).optional(),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4GetCurrentData200ResponseRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.coerce.number().min(substep4GetCurrentData200ResponseRangeModifierValuesItemPercentageMin).max(substep4GetCurrentData200ResponseRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).optional(),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.coerce.string().min(1).regex(substep4GetCurrentData200ResponseFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.coerce.number().min(1).max(substep4GetCurrentData200ResponseFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).optional(),
  "calculationNotes": zod.coerce.string().optional(),
  "calculationCompleted": zod.coerce.boolean().optional(),
  "hasCalculationErrors": zod.coerce.boolean().optional(),
  "errorMessage": zod.coerce.string().optional(),
  "calculationDetails": zod.array(zod.object({
  "step": zod.coerce.number().optional(),
  "stepName": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "modifierCode": zod.coerce.string().optional(),
  "modifierName": zod.coerce.string().optional(),
  "modifierValue": zod.coerce.string().optional(),
  "priceBefore": zod.coerce.number().optional(),
  "priceAfter": zod.coerce.number().optional(),
  "priceDifference": zod.coerce.number().optional()
}).strict()).optional(),
  "basePrice": zod.coerce.number().optional(),
  "finalPrice": zod.coerce.number().optional(),
  "modifiersCount": zod.coerce.number().optional()
}).strict()

export const substep4GetCurrentData400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentData401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentData403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentData404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4GetCurrentData409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º
 */
export const substep3GetAvailableStainTypes200ResponseItem = zod.coerce.string()
export const substep3GetAvailableStainTypes200Response = zod.array(substep3GetAvailableStainTypes200ResponseItem)

export const substep3GetAvailableStainTypes400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableStainTypes401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableStainTypes403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableStainTypes404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableStainTypes409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const substep3GetAvailableDefectTypes200ResponseItem = zod.coerce.string()
export const substep3GetAvailableDefectTypes200Response = zod.array(substep3GetAvailableDefectTypes200ResponseItem)

export const substep3GetAvailableDefectTypes400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableDefectTypes401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableDefectTypes403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableDefectTypes404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetAvailableDefectTypes409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
 */
export const substep3GetContextParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep3GetContext200ResponseDataCurrentItemDescriptionMin = 0;

export const substep3GetContext200ResponseDataCurrentItemDescriptionMax = 1000;
export const substep3GetContext200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const substep3GetContext200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const substep3GetContext200ResponseDataCurrentItemDefectsNotesMin = 0;

export const substep3GetContext200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const substep3GetContext200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep3GetContext200ResponseDataCurrentItemDescriptionMin).max(substep3GetContext200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep3GetContext200ResponseDataCurrentItemSpecialInstructionsMin).max(substep3GetContext200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep3GetContext200ResponseDataCurrentItemDefectsNotesMin).max(substep3GetContext200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.coerce.boolean().optional(),
  "defectsSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional(),
  "noGuaranteeReasonRequired": zod.coerce.boolean().optional(),
  "noGuarantee": zod.coerce.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.coerce.string().optional()
}).strict()

export const substep3GetContext400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetContext401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetContext403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetContext404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep3GetContext409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤
 */
export const substep2GetAvailableMaterialsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2GetAvailableMaterials200ResponseItem = zod.coerce.string()
export const substep2GetAvailableMaterials200Response = zod.array(substep2GetAvailableMaterials200ResponseItem)

export const substep2GetAvailableMaterials400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetAvailableMaterials409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 2
 */
export const substep2GetCurrentCharacteristicsParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMin = 0;

export const substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMax = 1000;
export const substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMin = 0;

export const substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMax = 500;
export const substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMin = 0;

export const substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMax = 1000;


export const substep2GetCurrentCharacteristics200Response = zod.object({
  "currentItem": zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "description": zod.coerce.string().min(substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMin).max(substep2GetCurrentCharacteristics200ResponseCurrentItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMin).max(substep2GetCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMin).max(substep2GetCurrentCharacteristics200ResponseCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.coerce.boolean().optional(),
  "colorSelectionCompleted": zod.coerce.boolean().optional(),
  "fillerSelectionCompleted": zod.coerce.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.coerce.boolean().optional(),
  "dataValid": zod.coerce.boolean().optional()
}).strict()

export const substep2GetCurrentCharacteristics400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep2GetCurrentCharacteristics409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 1
 */
export const substep1GetStatusParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1GetStatus200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep1GetStatus400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetStatus409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥
 */
export const substep1GetServiceCategories200ResponseItem = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "code": zod.coerce.string().optional(),
  "name": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "sortOrder": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional(),
  "standardProcessingDays": zod.coerce.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()).optional()
}).strict()
export const substep1GetServiceCategories200Response = zod.array(substep1GetServiceCategories200ResponseItem)

export const substep1GetServiceCategories400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetServiceCategories409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const substep1GetItemsForCategoryParams = zod.object({
  "categoryId": zod.coerce.string().uuid()
}).strict()

export const substep1GetItemsForCategory200ResponseItem = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "categoryId": zod.coerce.string().uuid().optional(),
  "catalogNumber": zod.coerce.number().optional(),
  "name": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "basePrice": zod.coerce.number().optional(),
  "priceBlack": zod.coerce.number().optional(),
  "priceColor": zod.coerce.number().optional(),
  "active": zod.coerce.boolean().optional()
}).strict()
export const substep1GetItemsForCategory200Response = zod.array(substep1GetItemsForCategory200ResponseItem)

export const substep1GetItemsForCategory400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1GetItemsForCategory409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Å–µ—Å—ñ—ó
 */
export const stage2GetCurrentStateParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2GetCurrentState200Response = zod.enum(['NOT_STARTED', 'INITIALIZING', 'ITEMS_MANAGER_SCREEN', 'ITEM_WIZARD_ACTIVE', 'READY_TO_PROCEED', 'COMPLETED', 'ERROR'])

export const stage2GetCurrentState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å–µ—Å—ñ–π
 */
export const stage2GetActiveSessionCount200Response = zod.coerce.number()

export const stage2GetActiveSessionCount400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetActiveSessionCount401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetActiveSessionCount403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetActiveSessionCount404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetActiveSessionCount409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä—è—î –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –µ—Ç–∞–ø
 */
export const stage2CheckReadinessToProceedParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2CheckReadinessToProceed200Response = zod.coerce.boolean()

export const stage2CheckReadinessToProceed400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CheckReadinessToProceed401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CheckReadinessToProceed403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CheckReadinessToProceed404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2CheckReadinessToProceed409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const stage2GetCurrentManagerParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2GetCurrentManager200ResponseAddedItemsItemNameMin = 0;

export const stage2GetCurrentManager200ResponseAddedItemsItemNameMax = 255;
export const stage2GetCurrentManager200ResponseAddedItemsItemDescriptionMin = 0;

export const stage2GetCurrentManager200ResponseAddedItemsItemDescriptionMax = 1000;
export const stage2GetCurrentManager200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const stage2GetCurrentManager200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const stage2GetCurrentManager200ResponseAddedItemsItemDefectsNotesMin = 0;

export const stage2GetCurrentManager200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const stage2GetCurrentManager200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "orderId": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(stage2GetCurrentManager200ResponseAddedItemsItemNameMin).max(stage2GetCurrentManager200ResponseAddedItemsItemNameMax),
  "description": zod.coerce.string().min(stage2GetCurrentManager200ResponseAddedItemsItemDescriptionMin).max(stage2GetCurrentManager200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.coerce.number().min(1),
  "unitPrice": zod.coerce.number(),
  "totalPrice": zod.coerce.number().optional(),
  "category": zod.coerce.string().optional(),
  "color": zod.coerce.string().optional(),
  "material": zod.coerce.string().optional(),
  "unitOfMeasure": zod.coerce.string().optional(),
  "defects": zod.coerce.string().optional(),
  "specialInstructions": zod.coerce.string().min(stage2GetCurrentManager200ResponseAddedItemsItemSpecialInstructionsMin).max(stage2GetCurrentManager200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.coerce.string().optional(),
  "fillerCompressed": zod.coerce.boolean().optional(),
  "wearDegree": zod.coerce.string().optional(),
  "stains": zod.coerce.string().optional(),
  "otherStains": zod.coerce.string().optional(),
  "defectsAndRisks": zod.coerce.string().optional(),
  "noGuaranteeReason": zod.coerce.string().optional(),
  "defectsNotes": zod.coerce.string().min(stage2GetCurrentManager200ResponseAddedItemsItemDefectsNotesMin).max(stage2GetCurrentManager200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "itemCount": zod.coerce.number().optional(),
  "canProceedToNextStage": zod.coerce.boolean().optional(),
  "activeWizardId": zod.coerce.string().uuid().optional(),
  "editingItemId": zod.coerce.string().uuid().optional(),
  "currentStatus": zod.coerce.string().optional(),
  "wizardActive": zod.coerce.boolean().optional(),
  "editMode": zod.coerce.boolean().optional()
}).strict()

export const stage2GetCurrentManager400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentManager401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentManager403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentManager404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2GetCurrentManager409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Ñ–æ—Ä–º–∏
 */
export const stage1GetClientFormStateParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetClientFormState200Response = zod.enum(['INIT', 'FILLING_BASIC_INFO', 'FILLING_CONTACT_INFO', 'VALIDATING', 'CHECKING_DUPLICATES', 'DUPLICATES_FOUND', 'SAVING', 'COMPLETED', 'ERROR', 'CANCELLED'])

export const stage1GetClientFormState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientFormState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø–æ—à—É–∫—É
 */
export const stage1GetClientSearchStateParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetClientSearchState200Response = zod.enum(['INIT', 'READY_TO_SEARCH', 'SEARCHING', 'RESULTS_FOUND', 'RESULTS_DISPLAYED', 'NO_RESULTS', 'CLIENT_SELECTED', 'CREATE_NEW_CLIENT_MODE', 'COMPLETED', 'SEARCH_ERROR', 'CANCELLED'])

export const stage1GetClientSearchState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientSearchState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientSearchState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientSearchState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetClientSearchState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –æ–±—Ä–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1GetSelectedClientParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetSelectedClient200ResponseStructuredAddressCityMin = 2;

export const stage1GetSelectedClient200ResponseStructuredAddressCityMax = 100;

export const stage1GetSelectedClient200ResponseStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const stage1GetSelectedClient200ResponseStructuredAddressStreetMin = 2;

export const stage1GetSelectedClient200ResponseStructuredAddressStreetMax = 150;

export const stage1GetSelectedClient200ResponseStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const stage1GetSelectedClient200ResponseStructuredAddressBuildingMin = 0;

export const stage1GetSelectedClient200ResponseStructuredAddressBuildingMax = 20;

export const stage1GetSelectedClient200ResponseStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1GetSelectedClient200ResponseStructuredAddressApartmentMin = 0;

export const stage1GetSelectedClient200ResponseStructuredAddressApartmentMax = 20;

export const stage1GetSelectedClient200ResponseStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const stage1GetSelectedClient200ResponseStructuredAddressPostalCodeMin = 0;

export const stage1GetSelectedClient200ResponseStructuredAddressPostalCodeMax = 10;

export const stage1GetSelectedClient200ResponseStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const stage1GetSelectedClient200ResponseStructuredAddressFullAddressMin = 5;

export const stage1GetSelectedClient200ResponseStructuredAddressFullAddressMax = 500;
export const stage1GetSelectedClient200ResponsePreferencesItemKeyMin = 0;

export const stage1GetSelectedClient200ResponsePreferencesItemKeyMax = 100;
export const stage1GetSelectedClient200ResponsePreferencesItemValueMin = 0;

export const stage1GetSelectedClient200ResponsePreferencesItemValueMax = 255;


export const stage1GetSelectedClient200Response = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "lastName": zod.coerce.string().optional(),
  "firstName": zod.coerce.string().optional(),
  "fullName": zod.coerce.string().optional(),
  "phone": zod.coerce.string().optional(),
  "email": zod.coerce.string().optional(),
  "address": zod.coerce.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.coerce.string().min(stage1GetSelectedClient200ResponseStructuredAddressCityMin).max(stage1GetSelectedClient200ResponseStructuredAddressCityMax).regex(stage1GetSelectedClient200ResponseStructuredAddressCityRegExp).optional(),
  "street": zod.coerce.string().min(stage1GetSelectedClient200ResponseStructuredAddressStreetMin).max(stage1GetSelectedClient200ResponseStructuredAddressStreetMax).regex(stage1GetSelectedClient200ResponseStructuredAddressStreetRegExp).optional(),
  "building": zod.coerce.string().min(stage1GetSelectedClient200ResponseStructuredAddressBuildingMin).max(stage1GetSelectedClient200ResponseStructuredAddressBuildingMax).regex(stage1GetSelectedClient200ResponseStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.coerce.string().min(stage1GetSelectedClient200ResponseStructuredAddressApartmentMin).max(stage1GetSelectedClient200ResponseStructuredAddressApartmentMax).regex(stage1GetSelectedClient200ResponseStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.coerce.string().min(stage1GetSelectedClient200ResponseStructuredAddressPostalCodeMin).max(stage1GetSelectedClient200ResponseStructuredAddressPostalCodeMax).regex(stage1GetSelectedClient200ResponseStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.coerce.string().min(stage1GetSelectedClient200ResponseStructuredAddressFullAddressMin).max(stage1GetSelectedClient200ResponseStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.coerce.string().optional(),
  "displayName": zod.coerce.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "key": zod.coerce.string().min(stage1GetSelectedClient200ResponsePreferencesItemKeyMin).max(stage1GetSelectedClient200ResponsePreferencesItemKeyMax),
  "value": zod.coerce.string().min(stage1GetSelectedClient200ResponsePreferencesItemValueMin).max(stage1GetSelectedClient200ResponsePreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "receiptNumber": zod.coerce.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.coerce.number().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "completionDate": zod.coerce.string().datetime({}).optional(),
  "itemCount": zod.coerce.number().optional()
}).strict()).optional(),
  "orderCount": zod.coerce.number().optional()
}).strict()

export const stage1GetSelectedClient400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetSelectedClient401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetSelectedClient403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetSelectedClient404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetSelectedClient409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const stage1GetBasicOrderStateParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetBasicOrderState200Response = zod.enum(['INIT', 'GENERATING_RECEIPT_NUMBER', 'RECEIPT_NUMBER_GENERATED', 'ENTERING_UNIQUE_TAG', 'UNIQUE_TAG_ENTERED', 'SELECTING_BRANCH', 'BRANCH_SELECTED', 'SETTING_CREATION_DATE', 'CREATION_DATE_SET', 'COMPLETED', 'ERROR'])

export const stage1GetBasicOrderState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBasicOrderState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Ñ—ñ–ª—ñ—ó –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó —Å–µ—Å—ñ—ó
 */
export const stage1GetBranchesForSessionParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1GetBranchesForSession200ResponsePhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const stage1GetBranchesForSession200ResponseItem = zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "name": zod.coerce.string().min(1),
  "address": zod.coerce.string().min(1),
  "phone": zod.coerce.string().regex(stage1GetBranchesForSession200ResponsePhoneRegExp).optional(),
  "code": zod.coerce.string().min(1),
  "active": zod.coerce.boolean().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional(),
  "updatedAt": zod.coerce.string().datetime({}).optional()
}).strict()
export const stage1GetBranchesForSession200Response = zod.array(stage1GetBranchesForSession200ResponseItem)

export const stage1GetBranchesForSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBranchesForSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBranchesForSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBranchesForSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1GetBranchesForSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —Ñ—ñ–ª—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ –¥–ª—è —Å–µ—Å—ñ—ó
 */
export const stage1AreBranchesLoadedParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1AreBranchesLoaded200Response = zod.coerce.boolean()

export const stage1AreBranchesLoaded400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1AreBranchesLoaded401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1AreBranchesLoaded403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1AreBranchesLoaded404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1AreBranchesLoaded409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –§–ª–æ—É-–∫–∞—Ä—Ç–∞ Order Wizard –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
 */
export const orderWizardGetWorkflow200Response = zod.object({
  "description": zod.coerce.string().optional(),
  "steps": zod.array(zod.object({
  "step": zod.coerce.number().optional(),
  "title": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "isReady": zod.coerce.boolean().optional()
}).strict()).optional(),
  "note": zod.coerce.string().optional()
}).strict()

export const orderWizardGetWorkflow400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetWorkflow401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetWorkflow403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetWorkflow404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetWorkflow409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏
 */
export const orderWizardGetSystemStats200Response = zod.object({
  "allAdaptersReady": zod.coerce.boolean().optional(),
  "readyAdaptersCount": zod.coerce.number().optional(),
  "totalAdapters": zod.coerce.number().optional(),
  "readinessPercentage": zod.coerce.number().optional(),
  "status": zod.coerce.string().optional(),
  "timestamp": zod.coerce.string().optional()
}).strict()

export const orderWizardGetSystemStats400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSystemStats401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSystemStats403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSystemStats404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSystemStats409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ—Ç–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –µ—Ç–∞–ø—É
 */
export const orderWizardGetStageStatusParams = zod.object({
  "stageNumber": zod.coerce.number()
}).strict()

export const orderWizardGetStageStatus200Response = zod.object({
  "status": zod.coerce.string().optional(),
  "adaptersCount": zod.coerce.number().optional(),
  "description": zod.coerce.string().optional(),
  "isReady": zod.coerce.boolean().optional()
}).strict()

export const orderWizardGetStageStatus400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageStatus401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageStatus403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageStatus404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageStatus409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –ø–æ –º–µ—Ç–æ–¥–∞—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –µ—Ç–∞–ø—É
 */
export const orderWizardGetStageMethodsParams = zod.object({
  "stageNumber": zod.coerce.number()
}).strict()

export const orderWizardGetStageMethods200Response = zod.object({
  "stageNumber": zod.coerce.number().optional(),
  "methods": zod.array(zod.object({
  "httpMethod": zod.coerce.string().optional(),
  "endpoint": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional()
}).strict()).optional()
}).strict()

export const orderWizardGetStageMethods400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageMethods401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageMethods403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageMethods404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageMethods409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –µ—Ç–∞–ø
 */
export const orderWizardGetStageInfoParams = zod.object({
  "stageNumber": zod.coerce.number()
}).strict()

export const orderWizardGetStageInfo200Response = zod.object({
  "stageNumber": zod.coerce.number().optional(),
  "title": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "substeps": zod.array(zod.coerce.string()).optional(),
  "adapterClass": zod.coerce.string().optional(),
  "isReady": zod.coerce.boolean().optional()
}).strict()

export const orderWizardGetStageInfo400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageInfo401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageInfo403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageInfo404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStageInfo409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–∞—Ç—É—Å–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –≤—Å—ñ—Ö –µ—Ç–∞–ø—ñ–≤
 */
export const orderWizardGetStagesStatus200Response = zod.object({
  "stages": zod.record(zod.string(), zod.object({
  "status": zod.coerce.string().optional(),
  "adaptersCount": zod.coerce.number().optional(),
  "description": zod.coerce.string().optional()
}).strict()).optional(),
  "overall": zod.coerce.string().optional(),
  "totalReadyStages": zod.coerce.number().optional(),
  "totalStages": zod.coerce.number().optional(),
  "totalAdapters": zod.coerce.number().optional()
}).strict()

export const orderWizardGetStagesStatus400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStagesStatus401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStagesStatus403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStagesStatus404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetStagesStatus409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω Order Wizard
 */
export const orderWizardGetCurrentStateParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardGetCurrentState200Response = zod.object({
  "sessionId": zod.coerce.string().optional(),
  "currentState": zod.enum(['INITIAL', 'CLIENT_SELECTION', 'ORDER_INITIALIZATION', 'ITEM_MANAGEMENT', 'ITEM_WIZARD_ACTIVE', 'EXECUTION_PARAMS', 'GLOBAL_DISCOUNTS', 'PAYMENT_PROCESSING', 'ADDITIONAL_INFO', 'ORDER_CONFIRMATION', 'ORDER_REVIEW', 'LEGAL_ASPECTS', 'RECEIPT_GENERATION', 'COMPLETED', 'CANCELLED']).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional()
}).strict()

export const orderWizardGetCurrentState400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCurrentState401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCurrentState403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCurrentState404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCurrentState409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–æ—Ç–æ—á–Ω—É —Å–µ—Å—ñ—é
 */
export const orderWizardGetSessionInfoParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardGetSessionInfo200Response = zod.record(zod.string(), zod.any())

export const orderWizardGetSessionInfo400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSessionInfo401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSessionInfo403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSessionInfo404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetSessionInfo409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∑ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const orderWizardGetAvailableTransitionsParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const orderWizardGetAvailableTransitions200Response = zod.record(zod.string(), zod.any())

export const orderWizardGetAvailableTransitions400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAvailableTransitions401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAvailableTransitions403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAvailableTransitions404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAvailableTransitions409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ Order Wizard API
 */
export const orderWizardHealth200Response = zod.object({
  "status": zod.coerce.string().optional(),
  "version": zod.coerce.string().optional(),
  "allStagesReady": zod.coerce.boolean().optional(),
  "totalStages": zod.coerce.number().optional(),
  "totalSubsteps": zod.coerce.number().optional(),
  "totalAdapters": zod.coerce.number().optional(),
  "architecture": zod.coerce.string().optional()
}).strict()

export const orderWizardHealth400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardHealth401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardHealth403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardHealth404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardHealth409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–Ω–∞ –º–∞–ø–∞ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö API endpoints
 */
export const orderWizardGetCompleteApiMap200Response = zod.object({
  "main": zod.object({
  "description": zod.coerce.string().optional(),
  "endpoint": zod.coerce.string().optional(),
  "adapterClass": zod.coerce.string().optional()
}).strict().optional(),
  "stage1": zod.object({
  "description": zod.coerce.string().optional(),
  "clientSearch": zod.coerce.string().optional(),
  "newClientForm": zod.coerce.string().optional(),
  "basicOrderInfo": zod.coerce.string().optional(),
  "operations": zod.array(zod.coerce.string()).optional()
}).strict().optional(),
  "stage2": zod.object({
  "description": zod.coerce.string().optional(),
  "main": zod.coerce.string().optional(),
  "substeps": zod.object({
  "substep1": zod.coerce.string().optional(),
  "substep2": zod.coerce.string().optional(),
  "substep3": zod.coerce.string().optional(),
  "substep4": zod.coerce.string().optional(),
  "substep5": zod.coerce.string().optional()
}).strict().optional(),
  "operations": zod.array(zod.coerce.string()).optional()
}).strict().optional(),
  "stage3": zod.object({
  "description": zod.coerce.string().optional(),
  "main": zod.coerce.string().optional(),
  "operations": zod.array(zod.coerce.string()).optional()
}).strict().optional(),
  "stage4": zod.object({
  "description": zod.coerce.string().optional(),
  "main": zod.coerce.string().optional(),
  "operations": zod.array(zod.coerce.string()).optional()
}).strict().optional(),
  "baseUrl": zod.coerce.string().optional(),
  "documentation": zod.coerce.string().optional()
}).strict()

export const orderWizardGetCompleteApiMap400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCompleteApiMap401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCompleteApiMap403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCompleteApiMap404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetCompleteApiMap409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—Å—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏
 */
export const orderWizardGetAdaptersInfo200Response = zod.object({
  "title": zod.coerce.string().optional(),
  "adapters": zod.record(zod.string(), zod.coerce.string()).optional(),
  "description": zod.coerce.string().optional()
}).strict()

export const orderWizardGetAdaptersInfo400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAdaptersInfo401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAdaptersInfo403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAdaptersInfo404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const orderWizardGetAdaptersInfo409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const substep5CloseSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep5CloseSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5CloseSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const substep5RemovePhotoParams = zod.object({
  "sessionId": zod.coerce.string().uuid(),
  "photoId": zod.coerce.string().uuid()
}).strict()

export const substep5RemovePhoto200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep5RemovePhoto400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep5RemovePhoto409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
 */
export const substep4RemoveSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep4RemoveSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
 */
export const substep4RemoveModifierParams = zod.object({
  "sessionId": zod.coerce.string().uuid(),
  "modifierId": zod.coerce.string()
}).strict()

export const substep4RemoveModifier200Response = zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.coerce.boolean().optional(),
  "message": zod.coerce.string().optional(),
  "details": zod.coerce.string().optional(),
  "data": zod.object({
  "sessionId": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.coerce.string().uuid().optional(),
  "itemId": zod.coerce.string().uuid().optional(),
  "fileUrl": zod.coerce.string().optional(),
  "thumbnailUrl": zod.coerce.string().optional(),
  "annotations": zod.coerce.string().optional(),
  "description": zod.coerce.string().optional(),
  "createdAt": zod.coerce.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.coerce.number().optional(),
  "maxFileSizeMB": zod.coerce.number().optional(),
  "documentationCompleted": zod.coerce.boolean().optional(),
  "startTime": zod.coerce.string().datetime({}).optional(),
  "completionTime": zod.coerce.string().datetime({}).optional(),
  "notes": zod.coerce.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.coerce.string()).optional(),
  "timestamp": zod.coerce.string().datetime({}).optional()
}).strict()

export const substep4RemoveModifier400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveModifier401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveModifier403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveModifier404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep4RemoveModifier409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é –ø—ñ–¥–µ—Ç–∞–ø—É 1
 */
export const substep1FinalizeSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const substep1FinalizeSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const substep1FinalizeSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é —Ç–∞ –∑–≤—ñ–ª—å–Ω—è—î —Ä–µ—Å—É—Ä—Å–∏
 */
export const stage2TerminateSessionParams = zod.object({
  "sessionId": zod.coerce.string().uuid()
}).strict()

export const stage2TerminateSession400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2TerminateSession401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2TerminateSession403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2TerminateSession404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage2TerminateSession409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1CancelClientCreationParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CancelClientCreation400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientCreation401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientCreation403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientCreation404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientCreation409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –ø–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const stage1CancelClientSearchParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CancelClientSearch400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientSearch401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientSearch403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientSearch404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelClientSearch409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –∑–±—ñ—Ä –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const stage1CancelBasicOrderParams = zod.object({
  "sessionId": zod.coerce.string()
}).strict()

export const stage1CancelBasicOrder400Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelBasicOrder401Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelBasicOrder403Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelBasicOrder404Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const stage1CancelBasicOrder409Response = zod.object({
  "timestamp": zod.coerce.string().optional(),
  "status": zod.coerce.number().optional(),
  "error": zod.coerce.string().optional(),
  "message": zod.coerce.string().optional(),
  "path": zod.coerce.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


