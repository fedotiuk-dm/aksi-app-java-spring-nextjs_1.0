/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ ID
 */
export const getStainTypeByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getStainTypeById200Response = zod.object({

})

export const getStainTypeById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏
 */
export const updateStainTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateStainTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –ø–ª—è–º–∏')

export const updateStainType200Response = zod.object({

})

export const updateStainType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏
 */
export const deleteStainTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deleteStainType200Response = zod.object({

})

export const deleteStainType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞ ID
 */
export const getModifierByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getModifierById200Response = zod.object({

})

export const getModifierById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏
 */
export const updateModifierParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateModifierBody = zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const updateModifier200Response = zod.object({

})

export const updateModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ–∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏
 */
export const deactivateModifierParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deactivateModifier200Response = zod.object({

})

export const deactivateModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∑–∞ ID
 */
export const getItemByIdParams = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const getItemById200Response = zod.object({

})

export const getItemById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const updatePriceListItemParams = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const updatePriceListItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()

export const updatePriceListItem200Response = zod.object({

})

export const updatePriceListItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥
 */
export const updateCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const updateCategoryBody = zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict()

export const updateCategory200Response = zod.object({

})

export const updateCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict()

export const getOrderItem200ResponseNameMinOne = 0;

export const getOrderItem200ResponseNameMaxOne = 255;
export const getOrderItem200ResponseDescriptionMinOne = 0;

export const getOrderItem200ResponseDescriptionMaxOne = 1000;
export const getOrderItem200ResponseSpecialInstructionsMinOne = 0;

export const getOrderItem200ResponseSpecialInstructionsMaxOne = 500;
export const getOrderItem200ResponseDefectsNotesMinOne = 0;

export const getOrderItem200ResponseDefectsNotesMaxOne = 1000;


export const getOrderItem200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getOrderItem200ResponseNameMinOne).max(getOrderItem200ResponseNameMaxOne),
  "description": zod.string().min(getOrderItem200ResponseDescriptionMinOne).max(getOrderItem200ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getOrderItem200ResponseSpecialInstructionsMinOne).max(getOrderItem200ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getOrderItem200ResponseDefectsNotesMinOne).max(getOrderItem200ResponseDefectsNotesMaxOne).optional()
}).strict()

export const getOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—Ä–µ–¥–º–µ—Ç —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict()

export const updateOrderItemBodyNameMinOne = 0;

export const updateOrderItemBodyNameMaxOne = 255;
export const updateOrderItemBodyDescriptionMinOne = 0;

export const updateOrderItemBodyDescriptionMaxOne = 1000;
export const updateOrderItemBodySpecialInstructionsMinOne = 0;

export const updateOrderItemBodySpecialInstructionsMaxOne = 500;
export const updateOrderItemBodyDefectsNotesMinOne = 0;

export const updateOrderItemBodyDefectsNotesMaxOne = 1000;


export const updateOrderItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateOrderItemBodyNameMinOne).max(updateOrderItemBodyNameMaxOne),
  "description": zod.string().min(updateOrderItemBodyDescriptionMinOne).max(updateOrderItemBodyDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateOrderItemBodySpecialInstructionsMinOne).max(updateOrderItemBodySpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateOrderItemBodyDefectsNotesMinOne).max(updateOrderItemBodyDefectsNotesMaxOne).optional()
}).strict()

export const updateOrderItem200ResponseNameMinOne = 0;

export const updateOrderItem200ResponseNameMaxOne = 255;
export const updateOrderItem200ResponseDescriptionMinOne = 0;

export const updateOrderItem200ResponseDescriptionMaxOne = 1000;
export const updateOrderItem200ResponseSpecialInstructionsMinOne = 0;

export const updateOrderItem200ResponseSpecialInstructionsMaxOne = 500;
export const updateOrderItem200ResponseDefectsNotesMinOne = 0;

export const updateOrderItem200ResponseDefectsNotesMaxOne = 1000;


export const updateOrderItem200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateOrderItem200ResponseNameMinOne).max(updateOrderItem200ResponseNameMaxOne),
  "description": zod.string().min(updateOrderItem200ResponseDescriptionMinOne).max(updateOrderItem200ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateOrderItem200ResponseSpecialInstructionsMinOne).max(updateOrderItem200ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateOrderItem200ResponseDefectsNotesMinOne).max(updateOrderItem200ResponseDefectsNotesMaxOne).optional()
}).strict()

export const updateOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –ø—Ä–µ–¥–º–µ—Ç —ñ–∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const deleteOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict()

export const deleteOrderItem204Response = zod.object({

})

export const deleteOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderStatusParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).describe('–ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const updateOrderStatus200ResponseClientStructuredAddressCityMinOne = 2;

export const updateOrderStatus200ResponseClientStructuredAddressCityMaxOne = 100;

export const updateOrderStatus200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateOrderStatus200ResponseClientStructuredAddressStreetMinOne = 2;

export const updateOrderStatus200ResponseClientStructuredAddressStreetMaxOne = 150;

export const updateOrderStatus200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateOrderStatus200ResponseClientStructuredAddressBuildingMinOne = 0;

export const updateOrderStatus200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const updateOrderStatus200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateOrderStatus200ResponseClientStructuredAddressApartmentMinOne = 0;

export const updateOrderStatus200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const updateOrderStatus200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateOrderStatus200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const updateOrderStatus200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const updateOrderStatus200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const updateOrderStatus200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const updateOrderStatus200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const updateOrderStatus200ResponseClientPreferencesItemKeyMinOne = 0;

export const updateOrderStatus200ResponseClientPreferencesItemKeyMaxOne = 100;
export const updateOrderStatus200ResponseClientPreferencesItemValueMinOne = 0;

export const updateOrderStatus200ResponseClientPreferencesItemValueMaxOne = 255;
export const updateOrderStatus200ResponseItemsItemNameMinOne = 0;

export const updateOrderStatus200ResponseItemsItemNameMaxOne = 255;
export const updateOrderStatus200ResponseItemsItemDescriptionMinOne = 0;

export const updateOrderStatus200ResponseItemsItemDescriptionMaxOne = 1000;
export const updateOrderStatus200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const updateOrderStatus200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const updateOrderStatus200ResponseItemsItemDefectsNotesMinOne = 0;

export const updateOrderStatus200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const updateOrderStatus200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const updateOrderStatus200ResponseCustomerNotesMinOne = 0;

export const updateOrderStatus200ResponseCustomerNotesMaxOne = 1000;
export const updateOrderStatus200ResponseInternalNotesMinOne = 0;

export const updateOrderStatus200ResponseInternalNotesMaxOne = 1000;


export const updateOrderStatus200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressCityMinOne).max(updateOrderStatus200ResponseClientStructuredAddressCityMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressStreetMinOne).max(updateOrderStatus200ResponseClientStructuredAddressStreetMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressBuildingMinOne).max(updateOrderStatus200ResponseClientStructuredAddressBuildingMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressApartmentMinOne).max(updateOrderStatus200ResponseClientStructuredAddressApartmentMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressPostalCodeMinOne).max(updateOrderStatus200ResponseClientStructuredAddressPostalCodeMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressFullAddressMinOne).max(updateOrderStatus200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(updateOrderStatus200ResponseClientPreferencesItemKeyMinOne).max(updateOrderStatus200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(updateOrderStatus200ResponseClientPreferencesItemValueMinOne).max(updateOrderStatus200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateOrderStatus200ResponseItemsItemNameMinOne).max(updateOrderStatus200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(updateOrderStatus200ResponseItemsItemDescriptionMinOne).max(updateOrderStatus200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateOrderStatus200ResponseItemsItemSpecialInstructionsMinOne).max(updateOrderStatus200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateOrderStatus200ResponseItemsItemDefectsNotesMinOne).max(updateOrderStatus200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateOrderStatus200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(updateOrderStatus200ResponseCustomerNotesMinOne).max(updateOrderStatus200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(updateOrderStatus200ResponseInternalNotesMinOne).max(updateOrderStatus200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const updateOrderStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –î–æ–¥–∞—î –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç—É
 */
export const addPrepaymentParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "amount": zod.number().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏')
}).strict()

export const addPrepayment200ResponseClientStructuredAddressCityMinOne = 2;

export const addPrepayment200ResponseClientStructuredAddressCityMaxOne = 100;

export const addPrepayment200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const addPrepayment200ResponseClientStructuredAddressStreetMinOne = 2;

export const addPrepayment200ResponseClientStructuredAddressStreetMaxOne = 150;

export const addPrepayment200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const addPrepayment200ResponseClientStructuredAddressBuildingMinOne = 0;

export const addPrepayment200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const addPrepayment200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const addPrepayment200ResponseClientStructuredAddressApartmentMinOne = 0;

export const addPrepayment200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const addPrepayment200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const addPrepayment200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const addPrepayment200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const addPrepayment200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const addPrepayment200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const addPrepayment200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const addPrepayment200ResponseClientPreferencesItemKeyMinOne = 0;

export const addPrepayment200ResponseClientPreferencesItemKeyMaxOne = 100;
export const addPrepayment200ResponseClientPreferencesItemValueMinOne = 0;

export const addPrepayment200ResponseClientPreferencesItemValueMaxOne = 255;
export const addPrepayment200ResponseItemsItemNameMinOne = 0;

export const addPrepayment200ResponseItemsItemNameMaxOne = 255;
export const addPrepayment200ResponseItemsItemDescriptionMinOne = 0;

export const addPrepayment200ResponseItemsItemDescriptionMaxOne = 1000;
export const addPrepayment200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const addPrepayment200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const addPrepayment200ResponseItemsItemDefectsNotesMinOne = 0;

export const addPrepayment200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const addPrepayment200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const addPrepayment200ResponseCustomerNotesMinOne = 0;

export const addPrepayment200ResponseCustomerNotesMaxOne = 1000;
export const addPrepayment200ResponseInternalNotesMinOne = 0;

export const addPrepayment200ResponseInternalNotesMaxOne = 1000;


export const addPrepayment200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(addPrepayment200ResponseClientStructuredAddressCityMinOne).max(addPrepayment200ResponseClientStructuredAddressCityMaxOne).regex(addPrepayment200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(addPrepayment200ResponseClientStructuredAddressStreetMinOne).max(addPrepayment200ResponseClientStructuredAddressStreetMaxOne).regex(addPrepayment200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(addPrepayment200ResponseClientStructuredAddressBuildingMinOne).max(addPrepayment200ResponseClientStructuredAddressBuildingMaxOne).regex(addPrepayment200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(addPrepayment200ResponseClientStructuredAddressApartmentMinOne).max(addPrepayment200ResponseClientStructuredAddressApartmentMaxOne).regex(addPrepayment200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(addPrepayment200ResponseClientStructuredAddressPostalCodeMinOne).max(addPrepayment200ResponseClientStructuredAddressPostalCodeMaxOne).regex(addPrepayment200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(addPrepayment200ResponseClientStructuredAddressFullAddressMinOne).max(addPrepayment200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(addPrepayment200ResponseClientPreferencesItemKeyMinOne).max(addPrepayment200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(addPrepayment200ResponseClientPreferencesItemValueMinOne).max(addPrepayment200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addPrepayment200ResponseItemsItemNameMinOne).max(addPrepayment200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(addPrepayment200ResponseItemsItemDescriptionMinOne).max(addPrepayment200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addPrepayment200ResponseItemsItemSpecialInstructionsMinOne).max(addPrepayment200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addPrepayment200ResponseItemsItemDefectsNotesMinOne).max(addPrepayment200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(addPrepayment200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(addPrepayment200ResponseCustomerNotesMinOne).max(addPrepayment200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(addPrepayment200ResponseInternalNotesMinOne).max(addPrepayment200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const addPrepayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–Ω–∏–∂–∫—É
 */
export const applyDiscountParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "amount": zod.number().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏')
}).strict()

export const applyDiscount200ResponseClientStructuredAddressCityMinOne = 2;

export const applyDiscount200ResponseClientStructuredAddressCityMaxOne = 100;

export const applyDiscount200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const applyDiscount200ResponseClientStructuredAddressStreetMinOne = 2;

export const applyDiscount200ResponseClientStructuredAddressStreetMaxOne = 150;

export const applyDiscount200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const applyDiscount200ResponseClientStructuredAddressBuildingMinOne = 0;

export const applyDiscount200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const applyDiscount200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const applyDiscount200ResponseClientStructuredAddressApartmentMinOne = 0;

export const applyDiscount200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const applyDiscount200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const applyDiscount200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const applyDiscount200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const applyDiscount200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const applyDiscount200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const applyDiscount200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const applyDiscount200ResponseClientPreferencesItemKeyMinOne = 0;

export const applyDiscount200ResponseClientPreferencesItemKeyMaxOne = 100;
export const applyDiscount200ResponseClientPreferencesItemValueMinOne = 0;

export const applyDiscount200ResponseClientPreferencesItemValueMaxOne = 255;
export const applyDiscount200ResponseItemsItemNameMinOne = 0;

export const applyDiscount200ResponseItemsItemNameMaxOne = 255;
export const applyDiscount200ResponseItemsItemDescriptionMinOne = 0;

export const applyDiscount200ResponseItemsItemDescriptionMaxOne = 1000;
export const applyDiscount200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const applyDiscount200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const applyDiscount200ResponseItemsItemDefectsNotesMinOne = 0;

export const applyDiscount200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const applyDiscount200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const applyDiscount200ResponseCustomerNotesMinOne = 0;

export const applyDiscount200ResponseCustomerNotesMaxOne = 1000;
export const applyDiscount200ResponseInternalNotesMinOne = 0;

export const applyDiscount200ResponseInternalNotesMaxOne = 1000;


export const applyDiscount200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(applyDiscount200ResponseClientStructuredAddressCityMinOne).max(applyDiscount200ResponseClientStructuredAddressCityMaxOne).regex(applyDiscount200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(applyDiscount200ResponseClientStructuredAddressStreetMinOne).max(applyDiscount200ResponseClientStructuredAddressStreetMaxOne).regex(applyDiscount200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(applyDiscount200ResponseClientStructuredAddressBuildingMinOne).max(applyDiscount200ResponseClientStructuredAddressBuildingMaxOne).regex(applyDiscount200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(applyDiscount200ResponseClientStructuredAddressApartmentMinOne).max(applyDiscount200ResponseClientStructuredAddressApartmentMaxOne).regex(applyDiscount200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(applyDiscount200ResponseClientStructuredAddressPostalCodeMinOne).max(applyDiscount200ResponseClientStructuredAddressPostalCodeMaxOne).regex(applyDiscount200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(applyDiscount200ResponseClientStructuredAddressFullAddressMinOne).max(applyDiscount200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(applyDiscount200ResponseClientPreferencesItemKeyMinOne).max(applyDiscount200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(applyDiscount200ResponseClientPreferencesItemValueMinOne).max(applyDiscount200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(applyDiscount200ResponseItemsItemNameMinOne).max(applyDiscount200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(applyDiscount200ResponseItemsItemDescriptionMinOne).max(applyDiscount200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(applyDiscount200ResponseItemsItemSpecialInstructionsMinOne).max(applyDiscount200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(applyDiscount200ResponseItemsItemDefectsNotesMinOne).max(applyDiscount200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(applyDiscount200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(applyDiscount200ResponseCustomerNotesMinOne).max(applyDiscount200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(applyDiscount200ResponseInternalNotesMinOne).max(applyDiscount200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const applyDiscount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î —á–µ—Ä–Ω–µ—Ç–∫—É –Ω–∞ –∞–∫—Ç–∏–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ —á–µ—Ä–Ω–µ—Ç–∫—É –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const convertDraftToOrderParams = zod.object({
  "id": zod.string().uuid().describe('ID —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const convertDraftToOrder200ResponseClientStructuredAddressCityMinOne = 2;

export const convertDraftToOrder200ResponseClientStructuredAddressCityMaxOne = 100;

export const convertDraftToOrder200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const convertDraftToOrder200ResponseClientStructuredAddressStreetMinOne = 2;

export const convertDraftToOrder200ResponseClientStructuredAddressStreetMaxOne = 150;

export const convertDraftToOrder200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const convertDraftToOrder200ResponseClientStructuredAddressBuildingMinOne = 0;

export const convertDraftToOrder200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const convertDraftToOrder200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const convertDraftToOrder200ResponseClientStructuredAddressApartmentMinOne = 0;

export const convertDraftToOrder200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const convertDraftToOrder200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const convertDraftToOrder200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const convertDraftToOrder200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const convertDraftToOrder200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const convertDraftToOrder200ResponseClientPreferencesItemKeyMinOne = 0;

export const convertDraftToOrder200ResponseClientPreferencesItemKeyMaxOne = 100;
export const convertDraftToOrder200ResponseClientPreferencesItemValueMinOne = 0;

export const convertDraftToOrder200ResponseClientPreferencesItemValueMaxOne = 255;
export const convertDraftToOrder200ResponseItemsItemNameMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemNameMaxOne = 255;
export const convertDraftToOrder200ResponseItemsItemDescriptionMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemDescriptionMaxOne = 1000;
export const convertDraftToOrder200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const convertDraftToOrder200ResponseItemsItemDefectsNotesMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const convertDraftToOrder200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const convertDraftToOrder200ResponseCustomerNotesMinOne = 0;

export const convertDraftToOrder200ResponseCustomerNotesMaxOne = 1000;
export const convertDraftToOrder200ResponseInternalNotesMinOne = 0;

export const convertDraftToOrder200ResponseInternalNotesMaxOne = 1000;


export const convertDraftToOrder200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressCityMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressCityMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressStreetMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressStreetMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressBuildingMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressBuildingMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressApartmentMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressApartmentMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressFullAddressMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(convertDraftToOrder200ResponseClientPreferencesItemKeyMinOne).max(convertDraftToOrder200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(convertDraftToOrder200ResponseClientPreferencesItemValueMinOne).max(convertDraftToOrder200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(convertDraftToOrder200ResponseItemsItemNameMinOne).max(convertDraftToOrder200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(convertDraftToOrder200ResponseItemsItemDescriptionMinOne).max(convertDraftToOrder200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(convertDraftToOrder200ResponseItemsItemSpecialInstructionsMinOne).max(convertDraftToOrder200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(convertDraftToOrder200ResponseItemsItemDefectsNotesMinOne).max(convertDraftToOrder200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(convertDraftToOrder200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(convertDraftToOrder200ResponseCustomerNotesMinOne).max(convertDraftToOrder200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(convertDraftToOrder200ResponseInternalNotesMinOne).max(convertDraftToOrder200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const convertDraftToOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í—ñ–¥–∑–Ω–∞—á–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
 * @summary –í—ñ–¥–∑–Ω–∞—á–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
 */
export const completeOrderParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const completeOrder200ResponseClientStructuredAddressCityMinOne = 2;

export const completeOrder200ResponseClientStructuredAddressCityMaxOne = 100;

export const completeOrder200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const completeOrder200ResponseClientStructuredAddressStreetMinOne = 2;

export const completeOrder200ResponseClientStructuredAddressStreetMaxOne = 150;

export const completeOrder200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const completeOrder200ResponseClientStructuredAddressBuildingMinOne = 0;

export const completeOrder200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const completeOrder200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const completeOrder200ResponseClientStructuredAddressApartmentMinOne = 0;

export const completeOrder200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const completeOrder200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const completeOrder200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const completeOrder200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const completeOrder200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const completeOrder200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const completeOrder200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const completeOrder200ResponseClientPreferencesItemKeyMinOne = 0;

export const completeOrder200ResponseClientPreferencesItemKeyMaxOne = 100;
export const completeOrder200ResponseClientPreferencesItemValueMinOne = 0;

export const completeOrder200ResponseClientPreferencesItemValueMaxOne = 255;
export const completeOrder200ResponseItemsItemNameMinOne = 0;

export const completeOrder200ResponseItemsItemNameMaxOne = 255;
export const completeOrder200ResponseItemsItemDescriptionMinOne = 0;

export const completeOrder200ResponseItemsItemDescriptionMaxOne = 1000;
export const completeOrder200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const completeOrder200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const completeOrder200ResponseItemsItemDefectsNotesMinOne = 0;

export const completeOrder200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const completeOrder200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const completeOrder200ResponseCustomerNotesMinOne = 0;

export const completeOrder200ResponseCustomerNotesMaxOne = 1000;
export const completeOrder200ResponseInternalNotesMinOne = 0;

export const completeOrder200ResponseInternalNotesMaxOne = 1000;


export const completeOrder200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(completeOrder200ResponseClientStructuredAddressCityMinOne).max(completeOrder200ResponseClientStructuredAddressCityMaxOne).regex(completeOrder200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(completeOrder200ResponseClientStructuredAddressStreetMinOne).max(completeOrder200ResponseClientStructuredAddressStreetMaxOne).regex(completeOrder200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(completeOrder200ResponseClientStructuredAddressBuildingMinOne).max(completeOrder200ResponseClientStructuredAddressBuildingMaxOne).regex(completeOrder200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(completeOrder200ResponseClientStructuredAddressApartmentMinOne).max(completeOrder200ResponseClientStructuredAddressApartmentMaxOne).regex(completeOrder200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(completeOrder200ResponseClientStructuredAddressPostalCodeMinOne).max(completeOrder200ResponseClientStructuredAddressPostalCodeMaxOne).regex(completeOrder200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(completeOrder200ResponseClientStructuredAddressFullAddressMinOne).max(completeOrder200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(completeOrder200ResponseClientPreferencesItemKeyMinOne).max(completeOrder200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(completeOrder200ResponseClientPreferencesItemValueMinOne).max(completeOrder200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(completeOrder200ResponseItemsItemNameMinOne).max(completeOrder200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(completeOrder200ResponseItemsItemDescriptionMinOne).max(completeOrder200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(completeOrder200ResponseItemsItemSpecialInstructionsMinOne).max(completeOrder200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(completeOrder200ResponseItemsItemDefectsNotesMinOne).max(completeOrder200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(completeOrder200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(completeOrder200ResponseCustomerNotesMinOne).max(completeOrder200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(completeOrder200ResponseInternalNotesMinOne).max(completeOrder200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const completeOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —Ç–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ —Ç–∞ –æ—á—ñ–∫—É–≤–∞–Ω—É –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderCompletionBody = zod.object({
  "orderId": zod.string().uuid(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']),
  "expectedCompletionDate": zod.string().datetime({})
}).strict()

export const updateOrderCompletion200Response = zod.object({

})

export const updateOrderCompletion400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î –∞–Ω–æ—Ç–∞—Ü—ñ—ó (–ø–æ–∑–Ω–∞—á–∫–∏) —Ç–∞ –æ–ø–∏—Å –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∞–Ω–æ—Ç–∞—Ü—ñ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const updatePhotoAnnotationsParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "photoId": zod.string().uuid().describe('ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const updatePhotoAnnotationsQueryParams = zod.object({
  "annotations": zod.string().describe('JSON –∑ –∞–Ω–æ—Ç–∞—Ü—ñ—è–º–∏'),
  "description": zod.string().optional().describe('–ù–æ–≤–∏–π –æ–ø–∏—Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const updatePhotoAnnotations200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()

export const updatePhotoAnnotations400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ ID
 */
export const getDefectTypeByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getDefectTypeById200Response = zod.object({

})

export const getDefectTypeById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É
 */
export const updateDefectTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateDefectTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const updateDefectType200Response = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const updateDefectType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É
 */
export const deleteDefectTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deleteDefectType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ ID
 */
export const getClientByIdParams = zod.object({
  "id": zod.string().uuid().describe('ID –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const getClientById200ResponseStructuredAddressCityMinOne = 2;

export const getClientById200ResponseStructuredAddressCityMaxOne = 100;

export const getClientById200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getClientById200ResponseStructuredAddressStreetMinOne = 2;

export const getClientById200ResponseStructuredAddressStreetMaxOne = 150;

export const getClientById200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getClientById200ResponseStructuredAddressBuildingMinOne = 0;

export const getClientById200ResponseStructuredAddressBuildingMaxOne = 20;

export const getClientById200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getClientById200ResponseStructuredAddressApartmentMinOne = 0;

export const getClientById200ResponseStructuredAddressApartmentMaxOne = 20;

export const getClientById200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getClientById200ResponseStructuredAddressPostalCodeMinOne = 0;

export const getClientById200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const getClientById200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getClientById200ResponseStructuredAddressFullAddressMinOne = 5;

export const getClientById200ResponseStructuredAddressFullAddressMaxOne = 500;
export const getClientById200ResponsePreferencesItemKeyMinOne = 0;

export const getClientById200ResponsePreferencesItemKeyMaxOne = 100;
export const getClientById200ResponsePreferencesItemValueMinOne = 0;

export const getClientById200ResponsePreferencesItemValueMaxOne = 255;


export const getClientById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getClientById200ResponseStructuredAddressCityMinOne).max(getClientById200ResponseStructuredAddressCityMaxOne).regex(getClientById200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getClientById200ResponseStructuredAddressStreetMinOne).max(getClientById200ResponseStructuredAddressStreetMaxOne).regex(getClientById200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getClientById200ResponseStructuredAddressBuildingMinOne).max(getClientById200ResponseStructuredAddressBuildingMaxOne).regex(getClientById200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getClientById200ResponseStructuredAddressApartmentMinOne).max(getClientById200ResponseStructuredAddressApartmentMaxOne).regex(getClientById200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getClientById200ResponseStructuredAddressPostalCodeMinOne).max(getClientById200ResponseStructuredAddressPostalCodeMaxOne).regex(getClientById200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getClientById200ResponseStructuredAddressFullAddressMinOne).max(getClientById200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getClientById200ResponsePreferencesItemKeyMinOne).max(getClientById200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(getClientById200ResponsePreferencesItemValueMinOne).max(getClientById200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const getClientById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const updateClientParams = zod.object({
  "id": zod.string().uuid().describe('ID –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const updateClientBodyLastNameMinOne = 2;

export const updateClientBodyLastNameMaxOne = 50;

export const updateClientBodyLastNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const updateClientBodyFirstNameMinOne = 2;

export const updateClientBodyFirstNameMaxOne = 50;

export const updateClientBodyFirstNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const updateClientBodyPhoneRegExpOne = new RegExp('^\\+?[0-9]{10,15}$');
export const updateClientBodyStructuredAddressCityMinOne = 2;

export const updateClientBodyStructuredAddressCityMaxOne = 100;

export const updateClientBodyStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateClientBodyStructuredAddressStreetMinOne = 2;

export const updateClientBodyStructuredAddressStreetMaxOne = 150;

export const updateClientBodyStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateClientBodyStructuredAddressBuildingMinOne = 0;

export const updateClientBodyStructuredAddressBuildingMaxOne = 20;

export const updateClientBodyStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClientBodyStructuredAddressApartmentMinOne = 0;

export const updateClientBodyStructuredAddressApartmentMaxOne = 20;

export const updateClientBodyStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClientBodyStructuredAddressPostalCodeMinOne = 0;

export const updateClientBodyStructuredAddressPostalCodeMaxOne = 10;

export const updateClientBodyStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const updateClientBodyStructuredAddressFullAddressMinOne = 5;

export const updateClientBodyStructuredAddressFullAddressMaxOne = 500;


export const updateClientBody = zod.object({
  "lastName": zod.string().min(updateClientBodyLastNameMinOne).max(updateClientBodyLastNameMaxOne).regex(updateClientBodyLastNameRegExpOne),
  "firstName": zod.string().min(updateClientBodyFirstNameMinOne).max(updateClientBodyFirstNameMaxOne).regex(updateClientBodyFirstNameRegExpOne),
  "phone": zod.string().min(1).regex(updateClientBodyPhoneRegExpOne),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateClientBodyStructuredAddressCityMinOne).max(updateClientBodyStructuredAddressCityMaxOne).regex(updateClientBodyStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(updateClientBodyStructuredAddressStreetMinOne).max(updateClientBodyStructuredAddressStreetMaxOne).regex(updateClientBodyStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(updateClientBodyStructuredAddressBuildingMinOne).max(updateClientBodyStructuredAddressBuildingMaxOne).regex(updateClientBodyStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(updateClientBodyStructuredAddressApartmentMinOne).max(updateClientBodyStructuredAddressApartmentMaxOne).regex(updateClientBodyStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(updateClientBodyStructuredAddressPostalCodeMinOne).max(updateClientBodyStructuredAddressPostalCodeMaxOne).regex(updateClientBodyStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(updateClientBodyStructuredAddressFullAddressMinOne).max(updateClientBodyStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞')

export const updateClient200ResponseStructuredAddressCityMinOne = 2;

export const updateClient200ResponseStructuredAddressCityMaxOne = 100;

export const updateClient200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateClient200ResponseStructuredAddressStreetMinOne = 2;

export const updateClient200ResponseStructuredAddressStreetMaxOne = 150;

export const updateClient200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateClient200ResponseStructuredAddressBuildingMinOne = 0;

export const updateClient200ResponseStructuredAddressBuildingMaxOne = 20;

export const updateClient200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClient200ResponseStructuredAddressApartmentMinOne = 0;

export const updateClient200ResponseStructuredAddressApartmentMaxOne = 20;

export const updateClient200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClient200ResponseStructuredAddressPostalCodeMinOne = 0;

export const updateClient200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const updateClient200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const updateClient200ResponseStructuredAddressFullAddressMinOne = 5;

export const updateClient200ResponseStructuredAddressFullAddressMaxOne = 500;
export const updateClient200ResponsePreferencesItemKeyMinOne = 0;

export const updateClient200ResponsePreferencesItemKeyMaxOne = 100;
export const updateClient200ResponsePreferencesItemValueMinOne = 0;

export const updateClient200ResponsePreferencesItemValueMaxOne = 255;


export const updateClient200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateClient200ResponseStructuredAddressCityMinOne).max(updateClient200ResponseStructuredAddressCityMaxOne).regex(updateClient200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(updateClient200ResponseStructuredAddressStreetMinOne).max(updateClient200ResponseStructuredAddressStreetMaxOne).regex(updateClient200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(updateClient200ResponseStructuredAddressBuildingMinOne).max(updateClient200ResponseStructuredAddressBuildingMaxOne).regex(updateClient200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(updateClient200ResponseStructuredAddressApartmentMinOne).max(updateClient200ResponseStructuredAddressApartmentMaxOne).regex(updateClient200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(updateClient200ResponseStructuredAddressPostalCodeMinOne).max(updateClient200ResponseStructuredAddressPostalCodeMaxOne).regex(updateClient200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(updateClient200ResponseStructuredAddressFullAddressMinOne).max(updateClient200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(updateClient200ResponsePreferencesItemKeyMinOne).max(updateClient200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(updateClient200ResponsePreferencesItemValueMinOne).max(updateClient200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const updateClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –π–æ–≥–æ ID
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const deleteClientParams = zod.object({
  "id": zod.string().uuid().describe('ID –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const deleteClient204Response = zod.object({

})

export const deleteClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ ID
 */
export const getBranchLocationByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getBranchLocationById200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getBranchLocationById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getBranchLocationById200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getBranchLocationById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É
 */
export const updateBranchLocationParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateBranchLocationBodyPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const updateBranchLocationBodyCodeRegExpOne = new RegExp('^[A-Z0-9]{2,5}$');


export const updateBranchLocationBody = zod.object({
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateBranchLocationBodyPhoneRegExpOne).optional(),
  "code": zod.string().min(1).regex(updateBranchLocationBodyCodeRegExpOne),
  "active": zod.boolean().optional()
}).strict()

export const updateBranchLocation200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const updateBranchLocation200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateBranchLocation200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const updateBranchLocation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É
 */
export const deleteBranchLocationParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deleteBranchLocation204Response = zod.object({

})

export const deleteBranchLocation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–º—ñ–Ω—é—î —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –ø—É–Ω–∫—Ç—É –ø—Ä–∏–π–æ–º—É
 * @summary –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
 */
export const setActiveStatusParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const setActiveStatusQueryParams = zod.object({
  "active": zod.boolean()
}).strict()

export const setActiveStatus200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const setActiveStatus200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(setActiveStatus200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const setActiveStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∞–±–æ —Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –∑–∞ —Ä—ñ–≤–Ω–µ–º —Ä–∏–∑–∏–∫—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –ø–ª—è–º
 */
export const getStainTypesQueryActiveOnlyDefaultOne = true;

export const getStainTypesQueryParams = zod.object({
  "activeOnly": zod.boolean().default(getStainTypesQueryActiveOnlyDefaultOne),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional()
}).strict()

export const getStainTypes200ResponseItem = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –ø–ª—è–º–∏')
export const getStainTypes200Response = zod.array(getStainTypes200ResponseItem)

export const getStainTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π —Ç–∏–ø –ø–ª—è–º–∏ –∑ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏
 */
export const createStainTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –ø–ª—è–º–∏')

export const createStainType200Response = zod.object({

})

export const createStainType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –Ω–æ–≤–∏–π –∞–±–æ –æ–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞
 * @summary –ó–±–µ—Ä–µ–≥—Ç–∏ –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞
 */
export const saveSignatureBody = zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().min(1),
  "termsAccepted": zod.boolean(),
  "signatureType": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞')

export const saveSignature201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const saveSignature400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ì–µ–Ω–µ—Ä—É—î PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 * @summary –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é
 */
export const generatePdfReceiptBody = zod.object({
  "orderId": zod.string().uuid(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const generatePdfReceipt200Response = zod.object({
  "orderId": zod.string().uuid().optional(),
  "pdfUrl": zod.string().optional(),
  "pdfData": zod.string().optional(),
  "generatedAt": zod.string().datetime({}).optional(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional(),
  "fileSize": zod.number().optional(),
  "fileName": zod.string().optional()
}).strict()

export const generatePdfReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –Ω–∞ –≤–∫–∞–∑–∞–Ω–∏–π email
 * @summary –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –Ω–∞ email
 */
export const sendReceiptByEmailBody = zod.object({
  "orderId": zod.string().uuid(),
  "recipientEmail": zod.string().min(1),
  "subject": zod.string().optional(),
  "message": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const sendReceiptByEmail200Response = zod.object({
  "orderId": zod.string().uuid().optional(),
  "recipientEmail": zod.string().optional(),
  "sentAt": zod.string().datetime({}).optional(),
  "messageId": zod.string().optional(),
  "status": zod.enum(['SENT', 'FAILED', 'PENDING']).optional(),
  "subject": zod.string().optional(),
  "message": zod.string().optional()
}).strict()

export const sendReceiptByEmail400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏
 */
export const getAllModifiers200Response = zod.object({

})

export const getAllModifiers400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏
 */
export const createModifierBody = zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const createModifier200Response = zod.object({

})

export const createModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const createPriceListItemParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const createPriceListItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()

export const createPriceListItem200Response = zod.object({

})

export const createPriceListItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥
 */
export const createCategoryBody = zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict()

export const createCategory200Response = zod.object({

})

export const createCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ —Å–ø–∏—Å–∫–æ–º —ó—Ö –∫–æ–¥—ñ–≤
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫—ñ–ª—å–∫–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
 */
export const getModifiersByCodesBodyItem = zod.string()
export const getModifiersByCodesBody = zod.array(getModifiersByCodesBodyItem)

export const getModifiersByCodes200Response = zod.object({

})

export const getModifiersByCodes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –î–µ—Ç–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –±–∞–∑–æ–≤–æ—ó —Ü—ñ–Ω–∏, –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤, –∑–Ω–∏–∂–æ–∫ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ
 * @summary –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ü—ñ–Ω—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤–∏–±—Ä–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
 */
export const calculatePriceBody = zod.object({
  "categoryCode": zod.string().describe('–ö–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏'),
  "itemName": zod.string().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "color": zod.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—É'),
  "quantity": zod.number().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "modifierCodes": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –∫–æ–¥—ñ–≤ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "rangeModifierValues": zod.array(zod.object({
  "modifierCode": zod.string().optional(),
  "value": zod.number().optional()
}).strict()).optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∑ –¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º'),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierCode": zod.string().optional(),
  "quantity": zod.number().optional()
}).strict()).optional().describe('–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "expedited": zod.boolean().optional().describe('–ß–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "expeditePercent": zod.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "discountPercent": zod.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().describe('–ó–∞–ø–∏—Ç –Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞')

export const calculatePrice200ResponseBaseUnitPriceMin = 0;
export const calculatePrice200ResponseBaseTotalPriceMin = 0;
export const calculatePrice200ResponseFinalUnitPriceMin = 0;
export const calculatePrice200ResponseFinalTotalPriceMin = 0;


export const calculatePrice200Response = zod.object({
  "baseUnitPrice": zod.number().min(calculatePrice200ResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.number().min(calculatePrice200ResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.number().min(calculatePrice200ResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.number().min(calculatePrice200ResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞')

export const calculatePrice401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getAllOrders200ResponseClientStructuredAddressCityMinOne = 2;

export const getAllOrders200ResponseClientStructuredAddressCityMaxOne = 100;

export const getAllOrders200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getAllOrders200ResponseClientStructuredAddressStreetMinOne = 2;

export const getAllOrders200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getAllOrders200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getAllOrders200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getAllOrders200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getAllOrders200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllOrders200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getAllOrders200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getAllOrders200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllOrders200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getAllOrders200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getAllOrders200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getAllOrders200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getAllOrders200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getAllOrders200ResponseClientPreferencesItemKeyMinOne = 0;

export const getAllOrders200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getAllOrders200ResponseClientPreferencesItemValueMinOne = 0;

export const getAllOrders200ResponseClientPreferencesItemValueMaxOne = 255;
export const getAllOrders200ResponseItemsItemNameMinOne = 0;

export const getAllOrders200ResponseItemsItemNameMaxOne = 255;
export const getAllOrders200ResponseItemsItemDescriptionMinOne = 0;

export const getAllOrders200ResponseItemsItemDescriptionMaxOne = 1000;
export const getAllOrders200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getAllOrders200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getAllOrders200ResponseItemsItemDefectsNotesMinOne = 0;

export const getAllOrders200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getAllOrders200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getAllOrders200ResponseCustomerNotesMinOne = 0;

export const getAllOrders200ResponseCustomerNotesMaxOne = 1000;
export const getAllOrders200ResponseInternalNotesMinOne = 0;

export const getAllOrders200ResponseInternalNotesMaxOne = 1000;


export const getAllOrders200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getAllOrders200ResponseClientStructuredAddressCityMinOne).max(getAllOrders200ResponseClientStructuredAddressCityMaxOne).regex(getAllOrders200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getAllOrders200ResponseClientStructuredAddressStreetMinOne).max(getAllOrders200ResponseClientStructuredAddressStreetMaxOne).regex(getAllOrders200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getAllOrders200ResponseClientStructuredAddressBuildingMinOne).max(getAllOrders200ResponseClientStructuredAddressBuildingMaxOne).regex(getAllOrders200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getAllOrders200ResponseClientStructuredAddressApartmentMinOne).max(getAllOrders200ResponseClientStructuredAddressApartmentMaxOne).regex(getAllOrders200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getAllOrders200ResponseClientStructuredAddressPostalCodeMinOne).max(getAllOrders200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getAllOrders200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getAllOrders200ResponseClientStructuredAddressFullAddressMinOne).max(getAllOrders200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getAllOrders200ResponseClientPreferencesItemKeyMinOne).max(getAllOrders200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getAllOrders200ResponseClientPreferencesItemValueMinOne).max(getAllOrders200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getAllOrders200ResponseItemsItemNameMinOne).max(getAllOrders200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getAllOrders200ResponseItemsItemDescriptionMinOne).max(getAllOrders200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getAllOrders200ResponseItemsItemSpecialInstructionsMinOne).max(getAllOrders200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getAllOrders200ResponseItemsItemDefectsNotesMinOne).max(getAllOrders200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getAllOrders200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getAllOrders200ResponseCustomerNotesMinOne).max(getAllOrders200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getAllOrders200ResponseInternalNotesMinOne).max(getAllOrders200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()
export const getAllOrders200Response = zod.array(getAllOrders200ResponseItem)

export const getAllOrders400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const createOrderBodyItemsItemNameMinOne = 0;

export const createOrderBodyItemsItemNameMaxOne = 255;
export const createOrderBodyItemsItemDescriptionMinOne = 0;

export const createOrderBodyItemsItemDescriptionMaxOne = 1000;
export const createOrderBodyItemsItemSpecialInstructionsMinOne = 0;

export const createOrderBodyItemsItemSpecialInstructionsMaxOne = 500;
export const createOrderBodyItemsItemDefectsNotesMinOne = 0;

export const createOrderBodyItemsItemDefectsNotesMaxOne = 1000;
export const createOrderBodyCustomerNotesMinOne = 0;

export const createOrderBodyCustomerNotesMaxOne = 1000;
export const createOrderBodyInternalNotesMinOne = 0;

export const createOrderBodyInternalNotesMaxOne = 1000;


export const createOrderBody = zod.object({
  "tagNumber": zod.string().optional(),
  "clientId": zod.string().uuid(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(createOrderBodyItemsItemNameMinOne).max(createOrderBodyItemsItemNameMaxOne),
  "description": zod.string().min(createOrderBodyItemsItemDescriptionMinOne).max(createOrderBodyItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(createOrderBodyItemsItemSpecialInstructionsMinOne).max(createOrderBodyItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(createOrderBodyItemsItemDefectsNotesMinOne).max(createOrderBodyItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "discountAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "branchLocationId": zod.string().uuid(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(createOrderBodyCustomerNotesMinOne).max(createOrderBodyCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(createOrderBodyInternalNotesMinOne).max(createOrderBodyInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "draft": zod.boolean().optional()
}).strict().describe('–î–∞–Ω—ñ –¥–ª—è —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const createOrder201ResponseClientStructuredAddressCityMinOne = 2;

export const createOrder201ResponseClientStructuredAddressCityMaxOne = 100;

export const createOrder201ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createOrder201ResponseClientStructuredAddressStreetMinOne = 2;

export const createOrder201ResponseClientStructuredAddressStreetMaxOne = 150;

export const createOrder201ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createOrder201ResponseClientStructuredAddressBuildingMinOne = 0;

export const createOrder201ResponseClientStructuredAddressBuildingMaxOne = 20;

export const createOrder201ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createOrder201ResponseClientStructuredAddressApartmentMinOne = 0;

export const createOrder201ResponseClientStructuredAddressApartmentMaxOne = 20;

export const createOrder201ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createOrder201ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const createOrder201ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const createOrder201ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const createOrder201ResponseClientStructuredAddressFullAddressMinOne = 5;

export const createOrder201ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const createOrder201ResponseClientPreferencesItemKeyMinOne = 0;

export const createOrder201ResponseClientPreferencesItemKeyMaxOne = 100;
export const createOrder201ResponseClientPreferencesItemValueMinOne = 0;

export const createOrder201ResponseClientPreferencesItemValueMaxOne = 255;
export const createOrder201ResponseItemsItemNameMinOne = 0;

export const createOrder201ResponseItemsItemNameMaxOne = 255;
export const createOrder201ResponseItemsItemDescriptionMinOne = 0;

export const createOrder201ResponseItemsItemDescriptionMaxOne = 1000;
export const createOrder201ResponseItemsItemSpecialInstructionsMinOne = 0;

export const createOrder201ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const createOrder201ResponseItemsItemDefectsNotesMinOne = 0;

export const createOrder201ResponseItemsItemDefectsNotesMaxOne = 1000;
export const createOrder201ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const createOrder201ResponseCustomerNotesMinOne = 0;

export const createOrder201ResponseCustomerNotesMaxOne = 1000;
export const createOrder201ResponseInternalNotesMinOne = 0;

export const createOrder201ResponseInternalNotesMaxOne = 1000;


export const createOrder201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createOrder201ResponseClientStructuredAddressCityMinOne).max(createOrder201ResponseClientStructuredAddressCityMaxOne).regex(createOrder201ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(createOrder201ResponseClientStructuredAddressStreetMinOne).max(createOrder201ResponseClientStructuredAddressStreetMaxOne).regex(createOrder201ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(createOrder201ResponseClientStructuredAddressBuildingMinOne).max(createOrder201ResponseClientStructuredAddressBuildingMaxOne).regex(createOrder201ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(createOrder201ResponseClientStructuredAddressApartmentMinOne).max(createOrder201ResponseClientStructuredAddressApartmentMaxOne).regex(createOrder201ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(createOrder201ResponseClientStructuredAddressPostalCodeMinOne).max(createOrder201ResponseClientStructuredAddressPostalCodeMaxOne).regex(createOrder201ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(createOrder201ResponseClientStructuredAddressFullAddressMinOne).max(createOrder201ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(createOrder201ResponseClientPreferencesItemKeyMinOne).max(createOrder201ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(createOrder201ResponseClientPreferencesItemValueMinOne).max(createOrder201ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(createOrder201ResponseItemsItemNameMinOne).max(createOrder201ResponseItemsItemNameMaxOne),
  "description": zod.string().min(createOrder201ResponseItemsItemDescriptionMinOne).max(createOrder201ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(createOrder201ResponseItemsItemSpecialInstructionsMinOne).max(createOrder201ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(createOrder201ResponseItemsItemDefectsNotesMinOne).max(createOrder201ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(createOrder201ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(createOrder201ResponseCustomerNotesMinOne).max(createOrder201ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(createOrder201ResponseInternalNotesMinOne).max(createOrder201ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const createOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getRequirementsParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const getRequirements200Response = zod.object({

})

export const getRequirements400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateRequirementsParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const updateRequirementsBodyAdditionalRequirementsMinOne = 0;

export const updateRequirementsBodyAdditionalRequirementsMaxOne = 1000;
export const updateRequirementsBodyCustomerNotesMinOne = 0;

export const updateRequirementsBodyCustomerNotesMaxOne = 1000;


export const updateRequirementsBody = zod.object({
  "orderId": zod.string().uuid(),
  "additionalRequirements": zod.string().min(updateRequirementsBodyAdditionalRequirementsMinOne).max(updateRequirementsBodyAdditionalRequirementsMaxOne).optional(),
  "customerNotes": zod.string().min(updateRequirementsBodyCustomerNotesMinOne).max(updateRequirementsBodyCustomerNotesMaxOne).optional()
}).strict()

export const updateRequirements200Response = zod.object({

})

export const updateRequirements400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –æ–ø–ª–∞—Ç—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderPaymentParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const getOrderPayment200Response = zod.object({

})

export const getOrderPayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É —Ç–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ñ—ñ–Ω–∞–ª—å–Ω—ñ —Å—É–º–∏
 * @summary –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const applyPaymentParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const applyPaymentBodyPrepaymentAmountMinOne = 0;


export const applyPaymentBody = zod.object({
  "orderId": zod.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.number().min(applyPaymentBodyPrepaymentAmountMinOne).optional()
}).strict()

export const applyPayment200Response = zod.object({

})

export const applyPayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –†–æ–∑—Ä–∞—Ö–æ–≤—É—î —Å—É–º–∏ –æ–ø–ª–∞—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
 * @summary –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –æ–ø–ª–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const calculatePaymentParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const calculatePaymentBodyPrepaymentAmountMinOne = 0;


export const calculatePaymentBody = zod.object({
  "orderId": zod.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.number().min(calculatePaymentBodyPrepaymentAmountMinOne).optional()
}).strict()

export const calculatePayment200Response = zod.object({

})

export const calculatePayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderItemsParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderItems200ResponseNameMinOne = 0;

export const getOrderItems200ResponseNameMaxOne = 255;
export const getOrderItems200ResponseDescriptionMinOne = 0;

export const getOrderItems200ResponseDescriptionMaxOne = 1000;
export const getOrderItems200ResponseSpecialInstructionsMinOne = 0;

export const getOrderItems200ResponseSpecialInstructionsMaxOne = 500;
export const getOrderItems200ResponseDefectsNotesMinOne = 0;

export const getOrderItems200ResponseDefectsNotesMaxOne = 1000;


export const getOrderItems200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getOrderItems200ResponseNameMinOne).max(getOrderItems200ResponseNameMaxOne),
  "description": zod.string().min(getOrderItems200ResponseDescriptionMinOne).max(getOrderItems200ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getOrderItems200ResponseSpecialInstructionsMinOne).max(getOrderItems200ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getOrderItems200ResponseDefectsNotesMinOne).max(getOrderItems200ResponseDefectsNotesMaxOne).optional()
}).strict()
export const getOrderItems200Response = zod.array(getOrderItems200ResponseItem)

export const getOrderItems400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –î–æ–¥–∞—î –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const addOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const addOrderItemBodyNameMinOne = 0;

export const addOrderItemBodyNameMaxOne = 255;
export const addOrderItemBodyDescriptionMinOne = 0;

export const addOrderItemBodyDescriptionMaxOne = 1000;
export const addOrderItemBodySpecialInstructionsMinOne = 0;

export const addOrderItemBodySpecialInstructionsMaxOne = 500;
export const addOrderItemBodyDefectsNotesMinOne = 0;

export const addOrderItemBodyDefectsNotesMaxOne = 1000;


export const addOrderItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addOrderItemBodyNameMinOne).max(addOrderItemBodyNameMaxOne),
  "description": zod.string().min(addOrderItemBodyDescriptionMinOne).max(addOrderItemBodyDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addOrderItemBodySpecialInstructionsMinOne).max(addOrderItemBodySpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addOrderItemBodyDefectsNotesMinOne).max(addOrderItemBodyDefectsNotesMaxOne).optional()
}).strict()

export const addOrderItem201ResponseNameMinOne = 0;

export const addOrderItem201ResponseNameMaxOne = 255;
export const addOrderItem201ResponseDescriptionMinOne = 0;

export const addOrderItem201ResponseDescriptionMaxOne = 1000;
export const addOrderItem201ResponseSpecialInstructionsMinOne = 0;

export const addOrderItem201ResponseSpecialInstructionsMaxOne = 500;
export const addOrderItem201ResponseDefectsNotesMinOne = 0;

export const addOrderItem201ResponseDefectsNotesMaxOne = 1000;


export const addOrderItem201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addOrderItem201ResponseNameMinOne).max(addOrderItem201ResponseNameMaxOne),
  "description": zod.string().min(addOrderItem201ResponseDescriptionMinOne).max(addOrderItem201ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addOrderItem201ResponseSpecialInstructionsMinOne).max(addOrderItem201ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addOrderItem201ResponseDefectsNotesMinOne).max(addOrderItem201ResponseDefectsNotesMaxOne).optional()
}).strict()

export const addOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î PDF-—á–µ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ email –∫–ª—ñ—î–Ω—Ç–∞
 * @summary –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —á–µ–∫ –Ω–∞ email
 */
export const emailReceiptParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const emailReceiptBody = zod.object({
  "orderId": zod.string().uuid(),
  "recipientEmail": zod.string().min(1),
  "subject": zod.string().optional(),
  "message": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const emailReceipt200Response = zod.object({

})

export const emailReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –§—ñ–Ω–∞–ª—ñ–∑—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—î –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –∑–º—ñ–Ω—é—î —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const finalizeOrderBody = zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "sendReceiptByEmail": zod.boolean().optional(),
  "generatePrintableReceipt": zod.boolean().optional(),
  "comments": zod.string().optional()
}).strict()

export const finalizeOrder200ResponseClientStructuredAddressCityMinOne = 2;

export const finalizeOrder200ResponseClientStructuredAddressCityMaxOne = 100;

export const finalizeOrder200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const finalizeOrder200ResponseClientStructuredAddressStreetMinOne = 2;

export const finalizeOrder200ResponseClientStructuredAddressStreetMaxOne = 150;

export const finalizeOrder200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const finalizeOrder200ResponseClientStructuredAddressBuildingMinOne = 0;

export const finalizeOrder200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const finalizeOrder200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const finalizeOrder200ResponseClientStructuredAddressApartmentMinOne = 0;

export const finalizeOrder200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const finalizeOrder200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const finalizeOrder200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const finalizeOrder200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const finalizeOrder200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const finalizeOrder200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const finalizeOrder200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const finalizeOrder200ResponseClientPreferencesItemKeyMinOne = 0;

export const finalizeOrder200ResponseClientPreferencesItemKeyMaxOne = 100;
export const finalizeOrder200ResponseClientPreferencesItemValueMinOne = 0;

export const finalizeOrder200ResponseClientPreferencesItemValueMaxOne = 255;
export const finalizeOrder200ResponseItemsItemNameMinOne = 0;

export const finalizeOrder200ResponseItemsItemNameMaxOne = 255;
export const finalizeOrder200ResponseItemsItemDescriptionMinOne = 0;

export const finalizeOrder200ResponseItemsItemDescriptionMaxOne = 1000;
export const finalizeOrder200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const finalizeOrder200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const finalizeOrder200ResponseItemsItemDefectsNotesMinOne = 0;

export const finalizeOrder200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const finalizeOrder200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const finalizeOrder200ResponseCustomerNotesMinOne = 0;

export const finalizeOrder200ResponseCustomerNotesMaxOne = 1000;
export const finalizeOrder200ResponseInternalNotesMinOne = 0;

export const finalizeOrder200ResponseInternalNotesMaxOne = 1000;


export const finalizeOrder200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(finalizeOrder200ResponseClientStructuredAddressCityMinOne).max(finalizeOrder200ResponseClientStructuredAddressCityMaxOne).regex(finalizeOrder200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(finalizeOrder200ResponseClientStructuredAddressStreetMinOne).max(finalizeOrder200ResponseClientStructuredAddressStreetMaxOne).regex(finalizeOrder200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(finalizeOrder200ResponseClientStructuredAddressBuildingMinOne).max(finalizeOrder200ResponseClientStructuredAddressBuildingMaxOne).regex(finalizeOrder200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(finalizeOrder200ResponseClientStructuredAddressApartmentMinOne).max(finalizeOrder200ResponseClientStructuredAddressApartmentMaxOne).regex(finalizeOrder200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(finalizeOrder200ResponseClientStructuredAddressPostalCodeMinOne).max(finalizeOrder200ResponseClientStructuredAddressPostalCodeMaxOne).regex(finalizeOrder200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(finalizeOrder200ResponseClientStructuredAddressFullAddressMinOne).max(finalizeOrder200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(finalizeOrder200ResponseClientPreferencesItemKeyMinOne).max(finalizeOrder200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(finalizeOrder200ResponseClientPreferencesItemValueMinOne).max(finalizeOrder200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(finalizeOrder200ResponseItemsItemNameMinOne).max(finalizeOrder200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(finalizeOrder200ResponseItemsItemDescriptionMinOne).max(finalizeOrder200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(finalizeOrder200ResponseItemsItemSpecialInstructionsMinOne).max(finalizeOrder200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(finalizeOrder200ResponseItemsItemDefectsNotesMinOne).max(finalizeOrder200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(finalizeOrder200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(finalizeOrder200ResponseCustomerNotesMinOne).max(finalizeOrder200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(finalizeOrder200ResponseInternalNotesMinOne).max(finalizeOrder200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const finalizeOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ —á–µ—Ä–Ω–µ—Ç–∫—É
 * @summary –ó–±–µ—Ä–µ–≥—Ç–∏ —á–µ—Ä–Ω–µ—Ç–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const saveOrderDraftBodyItemsItemNameMinOne = 0;

export const saveOrderDraftBodyItemsItemNameMaxOne = 255;
export const saveOrderDraftBodyItemsItemDescriptionMinOne = 0;

export const saveOrderDraftBodyItemsItemDescriptionMaxOne = 1000;
export const saveOrderDraftBodyItemsItemSpecialInstructionsMinOne = 0;

export const saveOrderDraftBodyItemsItemSpecialInstructionsMaxOne = 500;
export const saveOrderDraftBodyItemsItemDefectsNotesMinOne = 0;

export const saveOrderDraftBodyItemsItemDefectsNotesMaxOne = 1000;
export const saveOrderDraftBodyCustomerNotesMinOne = 0;

export const saveOrderDraftBodyCustomerNotesMaxOne = 1000;
export const saveOrderDraftBodyInternalNotesMinOne = 0;

export const saveOrderDraftBodyInternalNotesMaxOne = 1000;


export const saveOrderDraftBody = zod.object({
  "tagNumber": zod.string().optional(),
  "clientId": zod.string().uuid(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(saveOrderDraftBodyItemsItemNameMinOne).max(saveOrderDraftBodyItemsItemNameMaxOne),
  "description": zod.string().min(saveOrderDraftBodyItemsItemDescriptionMinOne).max(saveOrderDraftBodyItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(saveOrderDraftBodyItemsItemSpecialInstructionsMinOne).max(saveOrderDraftBodyItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(saveOrderDraftBodyItemsItemDefectsNotesMinOne).max(saveOrderDraftBodyItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "discountAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "branchLocationId": zod.string().uuid(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(saveOrderDraftBodyCustomerNotesMinOne).max(saveOrderDraftBodyCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(saveOrderDraftBodyInternalNotesMinOne).max(saveOrderDraftBodyInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "draft": zod.boolean().optional()
}).strict().describe('–î–∞–Ω—ñ –¥–ª—è —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const saveOrderDraft201ResponseClientStructuredAddressCityMinOne = 2;

export const saveOrderDraft201ResponseClientStructuredAddressCityMaxOne = 100;

export const saveOrderDraft201ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const saveOrderDraft201ResponseClientStructuredAddressStreetMinOne = 2;

export const saveOrderDraft201ResponseClientStructuredAddressStreetMaxOne = 150;

export const saveOrderDraft201ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const saveOrderDraft201ResponseClientStructuredAddressBuildingMinOne = 0;

export const saveOrderDraft201ResponseClientStructuredAddressBuildingMaxOne = 20;

export const saveOrderDraft201ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const saveOrderDraft201ResponseClientStructuredAddressApartmentMinOne = 0;

export const saveOrderDraft201ResponseClientStructuredAddressApartmentMaxOne = 20;

export const saveOrderDraft201ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const saveOrderDraft201ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const saveOrderDraft201ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const saveOrderDraft201ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const saveOrderDraft201ResponseClientStructuredAddressFullAddressMinOne = 5;

export const saveOrderDraft201ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const saveOrderDraft201ResponseClientPreferencesItemKeyMinOne = 0;

export const saveOrderDraft201ResponseClientPreferencesItemKeyMaxOne = 100;
export const saveOrderDraft201ResponseClientPreferencesItemValueMinOne = 0;

export const saveOrderDraft201ResponseClientPreferencesItemValueMaxOne = 255;
export const saveOrderDraft201ResponseItemsItemNameMinOne = 0;

export const saveOrderDraft201ResponseItemsItemNameMaxOne = 255;
export const saveOrderDraft201ResponseItemsItemDescriptionMinOne = 0;

export const saveOrderDraft201ResponseItemsItemDescriptionMaxOne = 1000;
export const saveOrderDraft201ResponseItemsItemSpecialInstructionsMinOne = 0;

export const saveOrderDraft201ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const saveOrderDraft201ResponseItemsItemDefectsNotesMinOne = 0;

export const saveOrderDraft201ResponseItemsItemDefectsNotesMaxOne = 1000;
export const saveOrderDraft201ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const saveOrderDraft201ResponseCustomerNotesMinOne = 0;

export const saveOrderDraft201ResponseCustomerNotesMaxOne = 1000;
export const saveOrderDraft201ResponseInternalNotesMinOne = 0;

export const saveOrderDraft201ResponseInternalNotesMaxOne = 1000;


export const saveOrderDraft201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressCityMinOne).max(saveOrderDraft201ResponseClientStructuredAddressCityMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressStreetMinOne).max(saveOrderDraft201ResponseClientStructuredAddressStreetMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressBuildingMinOne).max(saveOrderDraft201ResponseClientStructuredAddressBuildingMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressApartmentMinOne).max(saveOrderDraft201ResponseClientStructuredAddressApartmentMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressPostalCodeMinOne).max(saveOrderDraft201ResponseClientStructuredAddressPostalCodeMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressFullAddressMinOne).max(saveOrderDraft201ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(saveOrderDraft201ResponseClientPreferencesItemKeyMinOne).max(saveOrderDraft201ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(saveOrderDraft201ResponseClientPreferencesItemValueMinOne).max(saveOrderDraft201ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(saveOrderDraft201ResponseItemsItemNameMinOne).max(saveOrderDraft201ResponseItemsItemNameMaxOne),
  "description": zod.string().min(saveOrderDraft201ResponseItemsItemDescriptionMinOne).max(saveOrderDraft201ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(saveOrderDraft201ResponseItemsItemSpecialInstructionsMinOne).max(saveOrderDraft201ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(saveOrderDraft201ResponseItemsItemDefectsNotesMinOne).max(saveOrderDraft201ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(saveOrderDraft201ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(saveOrderDraft201ResponseCustomerNotesMinOne).max(saveOrderDraft201ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(saveOrderDraft201ResponseInternalNotesMinOne).max(saveOrderDraft201ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const saveOrderDraft400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –æ–±–º–µ–∂–µ–Ω—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 * @summary –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const applyDiscount1BodyDiscountPercentageMinOne = 0;

export const applyDiscount1BodyDiscountPercentageMaxOne = 100;
export const applyDiscount1BodyDiscountDescriptionMinOne = 0;

export const applyDiscount1BodyDiscountDescriptionMaxOne = 255;


export const applyDiscount1Body = zod.object({
  "orderId": zod.string().uuid(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']),
  "discountPercentage": zod.number().min(applyDiscount1BodyDiscountPercentageMinOne).max(applyDiscount1BodyDiscountPercentageMaxOne).optional(),
  "discountDescription": zod.string().min(applyDiscount1BodyDiscountDescriptionMinOne).max(applyDiscount1BodyDiscountDescriptionMaxOne).optional()
}).strict()

export const applyDiscount1200Response = zod.object({

})

export const applyDiscount1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –†–æ–∑—Ä–∞—Ö–æ–≤—É—î –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥ —Ç–∞ —Ç–∏–ø—É —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ
 * @summary –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –æ—á—ñ–∫—É–≤–∞–Ω—É –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const calculateCompletionDateBody = zod.object({
  "serviceCategoryIds": zod.array(zod.string().uuid()).min(1),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H'])
}).strict()

export const calculateCompletionDate200Response = zod.object({

})

export const calculateCompletionDate400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getPhotosByItemIdParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getPhotosByItemId200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()
export const getPhotosByItemId200Response = zod.array(getPhotosByItemId200ResponseItem)

export const getPhotosByItemId400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –Ω–æ–≤—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const uploadPhotoParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const uploadPhotoQueryParams = zod.object({
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)')
}).strict()

export const uploadPhotoBody = zod.object({
  "file": zod.instanceof(File).describe('–§–∞–π–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const uploadPhoto201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()

export const uploadPhoto400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∞–±–æ —Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –∑–∞ —Ä—ñ–≤–Ω–µ–º —Ä–∏–∑–∏–∫—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getDefectTypesQueryActiveOnlyDefaultOne = true;

export const getDefectTypesQueryParams = zod.object({
  "activeOnly": zod.boolean().default(getDefectTypesQueryActiveOnlyDefaultOne),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional()
}).strict()

export const getDefectTypes200ResponseItem = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')
export const getDefectTypes200Response = zod.array(getDefectTypes200ResponseItem)

export const getDefectTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É
 */
export const createDefectTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const createDefectType200Response = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const createDefectType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
 */
export const getAllClientsQueryPageDefaultOne = 0;export const getAllClientsQuerySizeDefaultOne = 20;

export const getAllClientsQueryParams = zod.object({
  "page": zod.number().optional().describe('–ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–∑ 0)'),
  "size": zod.number().default(getAllClientsQuerySizeDefaultOne).describe('–†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏')
}).strict()

export const getAllClients200ResponseStructuredAddressCityMinOne = 2;

export const getAllClients200ResponseStructuredAddressCityMaxOne = 100;

export const getAllClients200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getAllClients200ResponseStructuredAddressStreetMinOne = 2;

export const getAllClients200ResponseStructuredAddressStreetMaxOne = 150;

export const getAllClients200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getAllClients200ResponseStructuredAddressBuildingMinOne = 0;

export const getAllClients200ResponseStructuredAddressBuildingMaxOne = 20;

export const getAllClients200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllClients200ResponseStructuredAddressApartmentMinOne = 0;

export const getAllClients200ResponseStructuredAddressApartmentMaxOne = 20;

export const getAllClients200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllClients200ResponseStructuredAddressPostalCodeMinOne = 0;

export const getAllClients200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const getAllClients200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getAllClients200ResponseStructuredAddressFullAddressMinOne = 5;

export const getAllClients200ResponseStructuredAddressFullAddressMaxOne = 500;
export const getAllClients200ResponsePreferencesItemKeyMinOne = 0;

export const getAllClients200ResponsePreferencesItemKeyMaxOne = 100;
export const getAllClients200ResponsePreferencesItemValueMinOne = 0;

export const getAllClients200ResponsePreferencesItemValueMaxOne = 255;


export const getAllClients200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getAllClients200ResponseStructuredAddressCityMinOne).max(getAllClients200ResponseStructuredAddressCityMaxOne).regex(getAllClients200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getAllClients200ResponseStructuredAddressStreetMinOne).max(getAllClients200ResponseStructuredAddressStreetMaxOne).regex(getAllClients200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getAllClients200ResponseStructuredAddressBuildingMinOne).max(getAllClients200ResponseStructuredAddressBuildingMaxOne).regex(getAllClients200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getAllClients200ResponseStructuredAddressApartmentMinOne).max(getAllClients200ResponseStructuredAddressApartmentMaxOne).regex(getAllClients200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getAllClients200ResponseStructuredAddressPostalCodeMinOne).max(getAllClients200ResponseStructuredAddressPostalCodeMaxOne).regex(getAllClients200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getAllClients200ResponseStructuredAddressFullAddressMinOne).max(getAllClients200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getAllClients200ResponsePreferencesItemKeyMinOne).max(getAllClients200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(getAllClients200ResponsePreferencesItemValueMinOne).max(getAllClients200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const getAllClients400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –Ω–∞–¥–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const createClientBodyLastNameMinOne = 2;

export const createClientBodyLastNameMaxOne = 50;

export const createClientBodyLastNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const createClientBodyFirstNameMinOne = 2;

export const createClientBodyFirstNameMaxOne = 50;

export const createClientBodyFirstNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const createClientBodyPhoneRegExpOne = new RegExp('^\\+?[0-9]{10,15}$');
export const createClientBodyStructuredAddressCityMinOne = 2;

export const createClientBodyStructuredAddressCityMaxOne = 100;

export const createClientBodyStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createClientBodyStructuredAddressStreetMinOne = 2;

export const createClientBodyStructuredAddressStreetMaxOne = 150;

export const createClientBodyStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createClientBodyStructuredAddressBuildingMinOne = 0;

export const createClientBodyStructuredAddressBuildingMaxOne = 20;

export const createClientBodyStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClientBodyStructuredAddressApartmentMinOne = 0;

export const createClientBodyStructuredAddressApartmentMaxOne = 20;

export const createClientBodyStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClientBodyStructuredAddressPostalCodeMinOne = 0;

export const createClientBodyStructuredAddressPostalCodeMaxOne = 10;

export const createClientBodyStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const createClientBodyStructuredAddressFullAddressMinOne = 5;

export const createClientBodyStructuredAddressFullAddressMaxOne = 500;


export const createClientBody = zod.object({
  "lastName": zod.string().min(createClientBodyLastNameMinOne).max(createClientBodyLastNameMaxOne).regex(createClientBodyLastNameRegExpOne),
  "firstName": zod.string().min(createClientBodyFirstNameMinOne).max(createClientBodyFirstNameMaxOne).regex(createClientBodyFirstNameRegExpOne),
  "phone": zod.string().min(1).regex(createClientBodyPhoneRegExpOne),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createClientBodyStructuredAddressCityMinOne).max(createClientBodyStructuredAddressCityMaxOne).regex(createClientBodyStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(createClientBodyStructuredAddressStreetMinOne).max(createClientBodyStructuredAddressStreetMaxOne).regex(createClientBodyStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(createClientBodyStructuredAddressBuildingMinOne).max(createClientBodyStructuredAddressBuildingMaxOne).regex(createClientBodyStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(createClientBodyStructuredAddressApartmentMinOne).max(createClientBodyStructuredAddressApartmentMaxOne).regex(createClientBodyStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(createClientBodyStructuredAddressPostalCodeMinOne).max(createClientBodyStructuredAddressPostalCodeMaxOne).regex(createClientBodyStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(createClientBodyStructuredAddressFullAddressMinOne).max(createClientBodyStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞')

export const createClient201ResponseStructuredAddressCityMinOne = 2;

export const createClient201ResponseStructuredAddressCityMaxOne = 100;

export const createClient201ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createClient201ResponseStructuredAddressStreetMinOne = 2;

export const createClient201ResponseStructuredAddressStreetMaxOne = 150;

export const createClient201ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createClient201ResponseStructuredAddressBuildingMinOne = 0;

export const createClient201ResponseStructuredAddressBuildingMaxOne = 20;

export const createClient201ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClient201ResponseStructuredAddressApartmentMinOne = 0;

export const createClient201ResponseStructuredAddressApartmentMaxOne = 20;

export const createClient201ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClient201ResponseStructuredAddressPostalCodeMinOne = 0;

export const createClient201ResponseStructuredAddressPostalCodeMaxOne = 10;

export const createClient201ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const createClient201ResponseStructuredAddressFullAddressMinOne = 5;

export const createClient201ResponseStructuredAddressFullAddressMaxOne = 500;
export const createClient201ResponsePreferencesItemKeyMinOne = 0;

export const createClient201ResponsePreferencesItemKeyMaxOne = 100;
export const createClient201ResponsePreferencesItemValueMinOne = 0;

export const createClient201ResponsePreferencesItemValueMaxOne = 255;


export const createClient201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createClient201ResponseStructuredAddressCityMinOne).max(createClient201ResponseStructuredAddressCityMaxOne).regex(createClient201ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(createClient201ResponseStructuredAddressStreetMinOne).max(createClient201ResponseStructuredAddressStreetMaxOne).regex(createClient201ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(createClient201ResponseStructuredAddressBuildingMinOne).max(createClient201ResponseStructuredAddressBuildingMaxOne).regex(createClient201ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(createClient201ResponseStructuredAddressApartmentMinOne).max(createClient201ResponseStructuredAddressApartmentMaxOne).regex(createClient201ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(createClient201ResponseStructuredAddressPostalCodeMinOne).max(createClient201ResponseStructuredAddressPostalCodeMaxOne).regex(createClient201ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(createClient201ResponseStructuredAddressFullAddressMinOne).max(createClient201ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(createClient201ResponsePreferencesItemKeyMinOne).max(createClient201ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(createClient201ResponsePreferencesItemValueMinOne).max(createClient201ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const createClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –∑–∞–ø–∏—Ç–æ–º –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
 * @summary –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é
 */
export const searchClientsWithPaginationBodyPageMinOne = 0;


export const searchClientsWithPaginationBody = zod.object({
  "query": zod.string().min(1),
  "page": zod.number().min(searchClientsWithPaginationBodyPageMinOne).optional(),
  "size": zod.number().min(1).optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É —Ç–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó')

export const searchClientsWithPagination200ResponseContentItemStructuredAddressCityMinOne = 2;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressCityMaxOne = 100;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMinOne = 2;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMaxOne = 150;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMaxOne = 20;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMaxOne = 20;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMaxOne = 10;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMinOne = 5;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMaxOne = 500;
export const searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMaxOne = 100;
export const searchClientsWithPagination200ResponseContentItemPreferencesItemValueMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemPreferencesItemValueMaxOne = 255;


export const searchClientsWithPagination200Response = zod.object({
  "content": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressCityMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressCityMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMinOne).max(searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMaxOne),
  "value": zod.string().min(searchClientsWithPagination200ResponseContentItemPreferencesItemValueMinOne).max(searchClientsWithPagination200ResponseContentItemPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()).optional(),
  "totalElements": zod.number().optional(),
  "totalPages": zod.number().optional(),
  "pageNumber": zod.number().optional(),
  "pageSize": zod.number().optional(),
  "hasPrevious": zod.boolean().optional(),
  "hasNext": zod.boolean().optional()
}).strict()

export const searchClientsWithPagination400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ø—É–Ω–∫—Ç—ñ–≤ –ø—Ä–∏–π–æ–º—É, —è–∫—â–æ active=true - —Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω—ñ
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—É–Ω–∫—Ç–∏ –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 */
export const getAllBranchLocationsQueryParams = zod.object({
  "active": zod.boolean().optional()
}).strict()

export const getAllBranchLocations200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getAllBranchLocations200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getAllBranchLocations200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getAllBranchLocations400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É
 */
export const createBranchLocationBodyPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const createBranchLocationBodyCodeRegExpOne = new RegExp('^[A-Z0-9]{2,5}$');


export const createBranchLocationBody = zod.object({
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(createBranchLocationBodyPhoneRegExpOne).optional(),
  "code": zod.string().min(1).regex(createBranchLocationBodyCodeRegExpOne),
  "active": zod.boolean().optional()
}).strict()

export const createBranchLocation201ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const createBranchLocation201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(createBranchLocation201ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const createBranchLocation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î JWT —Ç–æ–∫–µ–Ω
 * @summary –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const registerBodyNameMinOne = 2;

export const registerBodyNameMaxOne = 50;
export const registerBodyUsernameMinOne = 3;

export const registerBodyUsernameMaxOne = 20;

export const registerBodyUsernameRegExpOne = new RegExp('^[a-zA-Z0-9._-]+$');
export const registerBodyPasswordMinOne = 6;

export const registerBodyPasswordMaxOne = 2147483647;


export const registerBody = zod.object({
  "name": zod.string().min(registerBodyNameMinOne).max(registerBodyNameMaxOne),
  "username": zod.string().min(registerBodyUsernameMinOne).max(registerBodyUsernameMaxOne).regex(registerBodyUsernameRegExpOne),
  "email": zod.string().min(1),
  "password": zod.string().min(registerBodyPasswordMinOne).max(registerBodyPasswordMaxOne),
  "role": zod.enum(['ADMIN', 'MANAGER', 'STAFF']).optional(),
  "position": zod.string().optional()
}).strict()

export const register200Response = zod.object({

})

export const register400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î JWT —Ç–æ–∫–µ–Ω –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é refresh —Ç–æ–∫–µ–Ω–∞
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
 */
export const refreshTokenBody = zod.string()

export const refreshToken200Response = zod.object({

})

export const refreshToken400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î JWT —Ç–æ–∫–µ–Ω
 * @summary –í—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const loginBody = zod.object({
  "username": zod.string().min(1),
  "password": zod.string().min(1)
}).strict()

export const login200Response = zod.object({

})

export const login400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—É –æ–¥–∏–Ω–∏—Ü—é –≤–∏–º—ñ—Ä—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const getRecommendedUnitOfMeasureQueryParams = zod.object({
  "categoryId": zod.string().uuid(),
  "itemName": zod.string()
}).strict()

export const getRecommendedUnitOfMeasure200Response = zod.string()

export const getRecommendedUnitOfMeasure400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const isUnitSupportedForItemQueryParams = zod.object({
  "categoryId": zod.string().uuid(),
  "itemName": zod.string(),
  "unitOfMeasure": zod.string()
}).strict()

export const isUnitSupportedForItem200Response = zod.boolean()

export const isUnitSupportedForItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableUnitsForCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getAvailableUnitsForCategory200ResponseItem = zod.string()
export const getAvailableUnitsForCategory200Response = zod.array(getAvailableUnitsForCategory200ResponseItem)

export const getAvailableUnitsForCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–µ—Å—Ç–æ–≤–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
 * @summary –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç
 */
export const hello200Response = zod.object({
  "message": zod.string().optional()
}).strict()

export const hello400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –∫–æ–¥–æ–º
 */
export const getStainTypeByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getStainTypeByCode200Response = zod.object({

})

export const getStainTypeByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å –∑–∞ ID
 */
export const getSignatureByIdParams = zod.object({
  "id": zod.string().uuid().describe('ID –ø—ñ–¥–ø–∏—Å—É')
}).strict()

export const getSignatureById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getSignatureById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –≤—Å—ñ –ø—ñ–¥–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—ñ–¥–ø–∏—Å–∏ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getSignaturesByOrderIdParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getSignaturesByOrderId200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()
export const getSignaturesByOrderId200Response = zod.array(getSignaturesByOrderId200ResponseItem)

export const getSignaturesByOrderId400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—ñ–¥–ø–∏—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø—É –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å –∑–∞ —Ç–∏–ø–æ–º –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getSignatureByOrderIdAndTypeParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "signatureType": zod.string().describe('–¢–∏–ø –ø—ñ–¥–ø–∏—Å—É')
}).strict()

export const getSignatureByOrderIdAndType200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getSignatureByOrderIdAndType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥
 */
export const getAllActiveCategories200Response = zod.object({

})

export const getAllActiveCategories400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ ID
 */
export const getCategoryByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getCategoryById200Response = zod.object({

})

export const getCategoryById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ –∫–æ–¥–æ–º
 */
export const getCategoryByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getCategoryByCode200Response = zod.object({

})

export const getCategoryByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞ ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const getReceiptDataParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getReceiptData200Response = zod.object({
  "orderId": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "tagNumber": zod.string().optional(),
  "createdDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "branchInfo": zod.object({
  "branchName": zod.string().optional(),
  "address": zod.string().optional(),
  "phone": zod.string().optional(),
  "operatorName": zod.string().optional()
}).strict().optional(),
  "clientInfo": zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "communicationChannels": zod.array(zod.string()).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "serviceCategory": zod.string().optional(),
  "quantity": zod.number().optional(),
  "unitOfMeasure": zod.string().optional(),
  "material": zod.string().optional(),
  "color": zod.string().optional(),
  "filler": zod.string().optional(),
  "wearPercentage": zod.number().optional(),
  "basePrice": zod.number().optional(),
  "finalPrice": zod.number().optional(),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "percentageValue": zod.number().optional(),
  "fixedValue": zod.number().optional(),
  "impact": zod.number().optional()
}).strict()).optional(),
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "notes": zod.string().optional()
}).strict()).optional(),
  "financialInfo": zod.object({
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "discountType": zod.string().optional(),
  "expediteSurcharge": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional()
}).strict().optional(),
  "legalTerms": zod.string().optional(),
  "customerSignatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "additionalNotes": zod.string().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional()
}).strict()

export const getReceiptData400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ —Ñ–∞–π–ª
 * @summary –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é
 */
export const downloadPdfReceiptParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const downloadPdfReceipt200Response = zod.object({

})

export const downloadPdfReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 */
export const getModifiersForServiceCategoryParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getModifiersForServiceCategory200Response = zod.object({

})

export const getModifiersForServiceCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞ –∫–æ–¥–æ–º
 */
export const getModifierByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getModifierByCode200Response = zod.object({

})

export const getModifierByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
 */
export const getModifiersByCategoryQueryParams = zod.object({
  "category": zod.enum(['GENERAL', 'TEXTILE', 'LEATHER'])
}).strict()

export const getModifiersByCategory200Response = zod.object({

})

export const getModifiersByCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 */
export const getAllCategories200Response = zod.object({

})

export const getAllCategories400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 */
export const getCategoryById1Params = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getCategoryById1200Response = zod.object({

})

export const getCategoryById1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ –∫–æ–¥–æ–º
 */
export const getCategoryByCode1Params = zod.object({
  "code": zod.string()
}).strict()

export const getCategoryByCode1200Response = zod.object({

})

export const getCategoryByCode1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableUnitsOfMeasureParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getAvailableUnitsOfMeasure200Response = zod.object({

})

export const getAvailableUnitsOfMeasure400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
 */
export const getItemsByCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getItemsByCategory200Response = zod.object({

})

export const getItemsByCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –Ω–∞–π–º–µ–Ω—É–≤–∞–Ω—å –≤–∏—Ä–æ–±—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
 */
export const getItemNamesByCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getItemNamesByCategory200Response = zod.object({

})

export const getItemNamesByCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∑–∞ –∫–æ–¥–æ–º –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getItemsByCategoryCodeParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getItemsByCategoryCode200Response = zod.object({

})

export const getItemsByCategoryCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –ø—Ä–æ —Ä–∏–∑–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –π–æ–≥–æ –ø–ª—è–º, –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ —Ä–∏–∑–∏–∫–∏
 */
export const getRiskWarningsQueryParams = zod.object({
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRiskWarnings200Response = zod.object({

})

export const getRiskWarnings400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –π–æ–≥–æ –ø–ª—è–º, –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–ª—è–º —Ç–∞ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getRecommendedModifiersQueryParams = zod.object({
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRecommendedModifiers200Response = zod.object({

})

export const getRecommendedModifiers400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞ –π–æ–≥–æ –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä
 */
export const getModifierByCode1Params = zod.object({
  "code": zod.string()
}).strict()

export const getModifierByCode1200Response = zod.object({

})

export const getModifierByCode1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ —Ç–∏–ø–æ–º (–∑–∞–≥–∞–ª—å–Ω—ñ, —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ñ, —à–∫—ñ—Ä—è–Ω—ñ)
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ —Ç–∏–ø–æ–º
 */
export const getModifiersByCategory1Params = zod.object({
  "category": zod.enum(['GENERAL', 'TEXTILE', 'LEATHER'])
}).strict()

export const getModifiersByCategory1200Response = zod.object({

})

export const getModifiersByCategory1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 */
export const getModifiersForServiceCategory1Params = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getModifiersForServiceCategory1200Response = zod.object({

})

export const getModifiersForServiceCategory1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤—É —Ü—ñ–Ω—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const getBasePriceQueryParams = zod.object({
  "categoryCode": zod.string(),
  "itemName": zod.string(),
  "color": zod.string().optional()
}).strict()

export const getBasePrice200Response = zod.object({

})

export const getBasePrice400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableModifiersForCategoryQueryParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getAvailableModifiersForCategory200Response = zod.object({

})

export const getAvailableModifiersForCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è. –í–∫–ª—é—á–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–ª—ñ—î–Ω—Ç–∞, —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑ –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—î—é –≤–∞—Ä—Ç–æ—Å—Ç—ñ, –∑–∞–≥–∞–ª—å–Ω—ñ —Å—É–º–∏ —Ç–∞ –¥–∞—Ç–∏.
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderDetailedSummaryParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderDetailedSummary200ResponseClientStructuredAddressCityMinOne = 2;

export const getOrderDetailedSummary200ResponseClientStructuredAddressCityMaxOne = 100;

export const getOrderDetailedSummary200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressStreetMinOne = 2;

export const getOrderDetailedSummary200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getOrderDetailedSummary200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getOrderDetailedSummary200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getOrderDetailedSummary200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getOrderDetailedSummary200ResponseClientPreferencesItemKeyMinOne = 0;

export const getOrderDetailedSummary200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getOrderDetailedSummary200ResponseClientPreferencesItemValueMinOne = 0;

export const getOrderDetailedSummary200ResponseClientPreferencesItemValueMaxOne = 255;
export const getOrderDetailedSummary200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getOrderDetailedSummary200Response = zod.object({
  "id": zod.string().uuid().optional().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "receiptNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "tagNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –º—ñ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressCityMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressCityMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressStreetMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressStreetMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getOrderDetailedSummary200ResponseClientPreferencesItemKeyMinOne).max(getOrderDetailedSummary200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getOrderDetailedSummary200ResponseClientPreferencesItemValueMinOne).max(getOrderDetailedSummary200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getOrderDetailedSummary200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "category": zod.string().optional().describe('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏'),
  "quantity": zod.number().optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å'),
  "unitOfMeasure": zod.string().optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "material": zod.string().optional().describe('–ú–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "color": zod.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "filler": zod.string().optional().describe('–ù–∞–ø–æ–≤–Ω—é–≤–∞—á –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "fillerClumped": zod.boolean().optional().describe('–ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ —î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –∑–±–∏—Ç–∏–º'),
  "wearPercentage": zod.number().optional().describe('–°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö)'),
  "stains": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –ø–ª—è–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ'),
  "defects": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤'),
  "defectNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ —â–æ–¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤'),
  "basePrice": zod.number().optional().describe('–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')).optional().describe('–°–ø–∏—Å–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω–∏'),
  "finalPrice": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional().describe('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ')).optional().describe('–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏'),
  "totalAmount": zod.number().optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –∑–Ω–∏–∂–æ–∫'),
  "discountAmount": zod.number().optional().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏'),
  "expediteSurchargeAmount": zod.number().optional().describe('–°—É–º–∞ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "finalAmount": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–æ–∫ —Ç–∞ –Ω–∞–¥–±–∞–≤–æ–∫'),
  "prepaymentAmount": zod.number().optional().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏'),
  "balanceAmount": zod.number().optional().describe('–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ'),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional().describe('–¢–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'),
  "expectedCompletionDate": zod.string().datetime({}).optional().describe('–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "createdDate": zod.string().datetime({}).optional().describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "customerNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞'),
  "discountType": zod.string().optional().describe('–¢–∏–ø –∑–Ω–∏–∂–∫–∏'),
  "discountPercentage": zod.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –µ—Ç–∞–ø—É –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è')

export const getOrderDetailedSummary400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDetailedSummary401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDetailedSummary403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDetailedSummary409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ ID
 */
export const getOrderByIdParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderById200ResponseClientStructuredAddressCityMinOne = 2;

export const getOrderById200ResponseClientStructuredAddressCityMaxOne = 100;

export const getOrderById200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getOrderById200ResponseClientStructuredAddressStreetMinOne = 2;

export const getOrderById200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getOrderById200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getOrderById200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getOrderById200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getOrderById200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderById200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getOrderById200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getOrderById200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderById200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getOrderById200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getOrderById200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getOrderById200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getOrderById200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getOrderById200ResponseClientPreferencesItemKeyMinOne = 0;

export const getOrderById200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getOrderById200ResponseClientPreferencesItemValueMinOne = 0;

export const getOrderById200ResponseClientPreferencesItemValueMaxOne = 255;
export const getOrderById200ResponseItemsItemNameMinOne = 0;

export const getOrderById200ResponseItemsItemNameMaxOne = 255;
export const getOrderById200ResponseItemsItemDescriptionMinOne = 0;

export const getOrderById200ResponseItemsItemDescriptionMaxOne = 1000;
export const getOrderById200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getOrderById200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getOrderById200ResponseItemsItemDefectsNotesMinOne = 0;

export const getOrderById200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getOrderById200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getOrderById200ResponseCustomerNotesMinOne = 0;

export const getOrderById200ResponseCustomerNotesMaxOne = 1000;
export const getOrderById200ResponseInternalNotesMinOne = 0;

export const getOrderById200ResponseInternalNotesMaxOne = 1000;


export const getOrderById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getOrderById200ResponseClientStructuredAddressCityMinOne).max(getOrderById200ResponseClientStructuredAddressCityMaxOne).regex(getOrderById200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getOrderById200ResponseClientStructuredAddressStreetMinOne).max(getOrderById200ResponseClientStructuredAddressStreetMaxOne).regex(getOrderById200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getOrderById200ResponseClientStructuredAddressBuildingMinOne).max(getOrderById200ResponseClientStructuredAddressBuildingMaxOne).regex(getOrderById200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getOrderById200ResponseClientStructuredAddressApartmentMinOne).max(getOrderById200ResponseClientStructuredAddressApartmentMaxOne).regex(getOrderById200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getOrderById200ResponseClientStructuredAddressPostalCodeMinOne).max(getOrderById200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getOrderById200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getOrderById200ResponseClientStructuredAddressFullAddressMinOne).max(getOrderById200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getOrderById200ResponseClientPreferencesItemKeyMinOne).max(getOrderById200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getOrderById200ResponseClientPreferencesItemValueMinOne).max(getOrderById200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getOrderById200ResponseItemsItemNameMinOne).max(getOrderById200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getOrderById200ResponseItemsItemDescriptionMinOne).max(getOrderById200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getOrderById200ResponseItemsItemSpecialInstructionsMinOne).max(getOrderById200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getOrderById200ResponseItemsItemDefectsNotesMinOne).max(getOrderById200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getOrderById200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getOrderById200ResponseCustomerNotesMinOne).max(getOrderById200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getOrderById200ResponseInternalNotesMinOne).max(getOrderById200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const getOrderById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î PDF-—Ñ–∞–π–ª –∑ —á–µ–∫–æ–º –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ PDF-—á–µ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderReceiptParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderReceiptQueryIncludeSignatureDefaultOne = true;

export const getOrderReceiptQueryParams = zod.object({
  "includeSignature": zod.boolean().default(getOrderReceiptQueryIncludeSignatureDefaultOne).describe('–í–∫–ª—é—á–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const getOrderReceipt200Response = zod.object({

})

export const getOrderReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–µ—Ç–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å
 */
export const getDraftOrders200ResponseClientStructuredAddressCityMinOne = 2;

export const getDraftOrders200ResponseClientStructuredAddressCityMaxOne = 100;

export const getDraftOrders200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getDraftOrders200ResponseClientStructuredAddressStreetMinOne = 2;

export const getDraftOrders200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getDraftOrders200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getDraftOrders200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getDraftOrders200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getDraftOrders200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getDraftOrders200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getDraftOrders200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getDraftOrders200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getDraftOrders200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getDraftOrders200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getDraftOrders200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getDraftOrders200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getDraftOrders200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getDraftOrders200ResponseClientPreferencesItemKeyMinOne = 0;

export const getDraftOrders200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getDraftOrders200ResponseClientPreferencesItemValueMinOne = 0;

export const getDraftOrders200ResponseClientPreferencesItemValueMaxOne = 255;
export const getDraftOrders200ResponseItemsItemNameMinOne = 0;

export const getDraftOrders200ResponseItemsItemNameMaxOne = 255;
export const getDraftOrders200ResponseItemsItemDescriptionMinOne = 0;

export const getDraftOrders200ResponseItemsItemDescriptionMaxOne = 1000;
export const getDraftOrders200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getDraftOrders200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getDraftOrders200ResponseItemsItemDefectsNotesMinOne = 0;

export const getDraftOrders200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getDraftOrders200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getDraftOrders200ResponseCustomerNotesMinOne = 0;

export const getDraftOrders200ResponseCustomerNotesMaxOne = 1000;
export const getDraftOrders200ResponseInternalNotesMinOne = 0;

export const getDraftOrders200ResponseInternalNotesMaxOne = 1000;


export const getDraftOrders200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getDraftOrders200ResponseClientStructuredAddressCityMinOne).max(getDraftOrders200ResponseClientStructuredAddressCityMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getDraftOrders200ResponseClientStructuredAddressStreetMinOne).max(getDraftOrders200ResponseClientStructuredAddressStreetMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getDraftOrders200ResponseClientStructuredAddressBuildingMinOne).max(getDraftOrders200ResponseClientStructuredAddressBuildingMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getDraftOrders200ResponseClientStructuredAddressApartmentMinOne).max(getDraftOrders200ResponseClientStructuredAddressApartmentMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getDraftOrders200ResponseClientStructuredAddressPostalCodeMinOne).max(getDraftOrders200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getDraftOrders200ResponseClientStructuredAddressFullAddressMinOne).max(getDraftOrders200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getDraftOrders200ResponseClientPreferencesItemKeyMinOne).max(getDraftOrders200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getDraftOrders200ResponseClientPreferencesItemValueMinOne).max(getDraftOrders200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getDraftOrders200ResponseItemsItemNameMinOne).max(getDraftOrders200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getDraftOrders200ResponseItemsItemDescriptionMinOne).max(getDraftOrders200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getDraftOrders200ResponseItemsItemSpecialInstructionsMinOne).max(getDraftOrders200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getDraftOrders200ResponseItemsItemDefectsNotesMinOne).max(getDraftOrders200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getDraftOrders200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getDraftOrders200ResponseCustomerNotesMinOne).max(getDraftOrders200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getDraftOrders200ResponseInternalNotesMinOne).max(getDraftOrders200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()
export const getDraftOrders200Response = zod.array(getDraftOrders200ResponseItem)

export const getDraftOrders400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–Ω–∏–∂–∫—É
 */
export const getOrderDiscountParams = zod.object({
  "orderId": zod.string()
}).strict()

export const getOrderDiscount200Response = zod.object({

})

export const getOrderDiscount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –∑–Ω–∏–∂–∫—É –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–Ω–∏–∂–∫—É
 */
export const removeDiscountParams = zod.object({
  "orderId": zod.string()
}).strict()

export const removeDiscount200Response = zod.object({

})

export const removeDiscount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getActiveOrders200ResponseClientStructuredAddressCityMinOne = 2;

export const getActiveOrders200ResponseClientStructuredAddressCityMaxOne = 100;

export const getActiveOrders200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getActiveOrders200ResponseClientStructuredAddressStreetMinOne = 2;

export const getActiveOrders200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getActiveOrders200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getActiveOrders200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getActiveOrders200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getActiveOrders200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getActiveOrders200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getActiveOrders200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getActiveOrders200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getActiveOrders200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getActiveOrders200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getActiveOrders200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getActiveOrders200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getActiveOrders200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getActiveOrders200ResponseClientPreferencesItemKeyMinOne = 0;

export const getActiveOrders200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getActiveOrders200ResponseClientPreferencesItemValueMinOne = 0;

export const getActiveOrders200ResponseClientPreferencesItemValueMaxOne = 255;
export const getActiveOrders200ResponseItemsItemNameMinOne = 0;

export const getActiveOrders200ResponseItemsItemNameMaxOne = 255;
export const getActiveOrders200ResponseItemsItemDescriptionMinOne = 0;

export const getActiveOrders200ResponseItemsItemDescriptionMaxOne = 1000;
export const getActiveOrders200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getActiveOrders200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getActiveOrders200ResponseItemsItemDefectsNotesMinOne = 0;

export const getActiveOrders200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getActiveOrders200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getActiveOrders200ResponseCustomerNotesMinOne = 0;

export const getActiveOrders200ResponseCustomerNotesMaxOne = 1000;
export const getActiveOrders200ResponseInternalNotesMinOne = 0;

export const getActiveOrders200ResponseInternalNotesMaxOne = 1000;


export const getActiveOrders200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getActiveOrders200ResponseClientStructuredAddressCityMinOne).max(getActiveOrders200ResponseClientStructuredAddressCityMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getActiveOrders200ResponseClientStructuredAddressStreetMinOne).max(getActiveOrders200ResponseClientStructuredAddressStreetMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getActiveOrders200ResponseClientStructuredAddressBuildingMinOne).max(getActiveOrders200ResponseClientStructuredAddressBuildingMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getActiveOrders200ResponseClientStructuredAddressApartmentMinOne).max(getActiveOrders200ResponseClientStructuredAddressApartmentMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getActiveOrders200ResponseClientStructuredAddressPostalCodeMinOne).max(getActiveOrders200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getActiveOrders200ResponseClientStructuredAddressFullAddressMinOne).max(getActiveOrders200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getActiveOrders200ResponseClientPreferencesItemKeyMinOne).max(getActiveOrders200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getActiveOrders200ResponseClientPreferencesItemValueMinOne).max(getActiveOrders200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getActiveOrders200ResponseItemsItemNameMinOne).max(getActiveOrders200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getActiveOrders200ResponseItemsItemDescriptionMinOne).max(getActiveOrders200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getActiveOrders200ResponseItemsItemSpecialInstructionsMinOne).max(getActiveOrders200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getActiveOrders200ResponseItemsItemDefectsNotesMinOne).max(getActiveOrders200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getActiveOrders200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getActiveOrders200ResponseCustomerNotesMinOne).max(getActiveOrders200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getActiveOrders200ResponseInternalNotesMinOne).max(getActiveOrders200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()
export const getActiveOrders200Response = zod.array(getActiveOrders200ResponseItem)

export const getActiveOrders400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –∑–∞ ID
 */
export const getPhotoByIdParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "photoId": zod.string().uuid().describe('ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const getPhotoById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()

export const getPhotoById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –≤–∫–∞–∑–∞–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é
 */
export const deletePhotoParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "photoId": zod.string().uuid().describe('ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const deletePhoto204Response = zod.object({

})

export const deletePhoto400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–ª—è–º
 */
export const getRecommendedModifiersForStainsQueryParams = zod.object({
  "stains": zod.array(zod.string()),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRecommendedModifiersForStains200ResponseItem = zod.object({
  "modifierId": zod.string().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "reason": zod.string().optional(),
  "recommendedValue": zod.number().optional(),
  "priority": zod.enum(['HIGH', 'MEDIUM', 'LOW']).optional(),
  "riskWarning": zod.string().optional()
}).strict()
export const getRecommendedModifiersForStains200Response = zod.array(getRecommendedModifiersForStains200ResponseItem)

export const getRecommendedModifiersForStains400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –ø—Ä–æ —Ä–∏–∑–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö –ø–ª—è–º, –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –º–∞—Ç–µ—Ä—ñ–∞–ª—É —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ —Ä–∏–∑–∏–∫–∏
 */
export const getRiskWarningsForItemQueryParams = zod.object({
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "materialType": zod.string().optional(),
  "categoryCode": zod.string().optional()
}).strict()

export const getRiskWarningsForItem200ResponseItem = zod.string()
export const getRiskWarningsForItem200Response = zod.array(getRiskWarningsForItem200ResponseItem)

export const getRiskWarningsForItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getRecommendedModifiersForDefectsQueryParams = zod.object({
  "defects": zod.array(zod.string()),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRecommendedModifiersForDefects200ResponseItem = zod.object({
  "modifierId": zod.string().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "reason": zod.string().optional(),
  "recommendedValue": zod.number().optional(),
  "priority": zod.enum(['HIGH', 'MEDIUM', 'LOW']).optional(),
  "riskWarning": zod.string().optional()
}).strict()
export const getRecommendedModifiersForDefects200Response = zod.array(getRecommendedModifiersForDefects200ResponseItem)

export const getRecommendedModifiersForDefects400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç—É–ø–µ–Ω—ñ –∑–Ω–æ—Å—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getWearDegrees200ResponseItem = zod.string()
export const getWearDegrees200Response = zod.array(getWearDegrees200ResponseItem)

export const getWearDegrees400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –ø–ª—è–º –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getStainTypes1200ResponseItem = zod.string()
export const getStainTypes1200Response = zod.array(getStainTypes1200ResponseItem)

export const getStainTypes1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ä–∏–∑–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getRisks200ResponseItem = zod.string()
export const getRisks200Response = zod.array(getRisks200ResponseItem)

export const getRisks400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getMaterialsQueryParams = zod.object({
  "category": zod.string().optional()
}).strict()

export const getMaterials200ResponseItem = zod.string()
export const getMaterials200Response = zod.array(getMaterials200ResponseItem)

export const getMaterials400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á—ñ–≤ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getFillerTypes200ResponseItem = zod.string()
export const getFillerTypes200Response = zod.array(getFillerTypes200ResponseItem)

export const getFillerTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –¥–µ—Ñ–µ–∫—Ç–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getDefects200ResponseItem = zod.string()
export const getDefects200Response = zod.array(getDefects200ResponseItem)

export const getDefects400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ñ–µ–∫—Ç–∏ —Ç–∞ —Ä–∏–∑–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getDefectsAndRisks200ResponseItem = zod.string()
export const getDefectsAndRisks200Response = zod.array(getDefectsAndRisks200ResponseItem)

export const getDefectsAndRisks400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤—ñ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getColors200ResponseItem = zod.string()
export const getColors200Response = zod.array(getColors200ResponseItem)

export const getColors400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ñ–∞–π–ª –∑–∞ –π–æ–≥–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º —ñ–º–µ–Ω–µ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ñ–∞–π–ª
 */
export const getFileParams = zod.object({
  "fileName": zod.string()
}).strict()

export const getFile200Response = zod.object({

})

export const getFile400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –∫–æ–¥–æ–º
 */
export const getDefectTypeByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getDefectTypeByCode200Response = zod.object({

})

export const getDefectTypeByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º
 * @deprecated
 * @summary –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤
 */
export const searchClientsQueryParams = zod.object({
  "keyword": zod.string().describe('–ö–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ—à—É–∫—É')
}).strict()

export const searchClients200ResponseStructuredAddressCityMinOne = 2;

export const searchClients200ResponseStructuredAddressCityMaxOne = 100;

export const searchClients200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClients200ResponseStructuredAddressStreetMinOne = 2;

export const searchClients200ResponseStructuredAddressStreetMaxOne = 150;

export const searchClients200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClients200ResponseStructuredAddressBuildingMinOne = 0;

export const searchClients200ResponseStructuredAddressBuildingMaxOne = 20;

export const searchClients200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients200ResponseStructuredAddressApartmentMinOne = 0;

export const searchClients200ResponseStructuredAddressApartmentMaxOne = 20;

export const searchClients200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients200ResponseStructuredAddressPostalCodeMinOne = 0;

export const searchClients200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const searchClients200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const searchClients200ResponseStructuredAddressFullAddressMinOne = 5;

export const searchClients200ResponseStructuredAddressFullAddressMaxOne = 500;
export const searchClients200ResponsePreferencesItemKeyMinOne = 0;

export const searchClients200ResponsePreferencesItemKeyMaxOne = 100;
export const searchClients200ResponsePreferencesItemValueMinOne = 0;

export const searchClients200ResponsePreferencesItemValueMaxOne = 255;


export const searchClients200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClients200ResponseStructuredAddressCityMinOne).max(searchClients200ResponseStructuredAddressCityMaxOne).regex(searchClients200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(searchClients200ResponseStructuredAddressStreetMinOne).max(searchClients200ResponseStructuredAddressStreetMaxOne).regex(searchClients200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(searchClients200ResponseStructuredAddressBuildingMinOne).max(searchClients200ResponseStructuredAddressBuildingMaxOne).regex(searchClients200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(searchClients200ResponseStructuredAddressApartmentMinOne).max(searchClients200ResponseStructuredAddressApartmentMaxOne).regex(searchClients200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(searchClients200ResponseStructuredAddressPostalCodeMinOne).max(searchClients200ResponseStructuredAddressPostalCodeMaxOne).regex(searchClients200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(searchClients200ResponseStructuredAddressFullAddressMinOne).max(searchClients200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClients200ResponsePreferencesItemKeyMinOne).max(searchClients200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(searchClients200ResponsePreferencesItemValueMinOne).max(searchClients200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const searchClients400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ –∫–æ–¥–æ–º
 */
export const getBranchLocationByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getBranchLocationByCode200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getBranchLocationByCode200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getBranchLocationByCode200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getBranchLocationByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
 */
export const testAuthEndpoint200Response = zod.string()

export const testAuthEndpoint400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


export const healthCheck200Response = zod.record(zod.string(), zod.any())

export const healthCheck400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


export const ping200Response = zod.string()

export const ping400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°–∫–∞—Å–æ–≤—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const cancelOrderParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const cancelOrder204Response = zod.object({

})

export const cancelOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


