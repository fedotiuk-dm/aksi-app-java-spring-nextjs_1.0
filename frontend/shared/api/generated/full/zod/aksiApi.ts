/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –æ–ø–ª–∞—Ç–∏
 */
export const updatePaymentConfigParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updatePaymentConfigBodyPaymentRequestPrepaymentAmountMin = 0;


export const updatePaymentConfigBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "paymentRequest": zod.object({
  "orderId": zod.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.number().min(updatePaymentConfigBodyPaymentRequestPrepaymentAmountMin).optional()
}).strict().optional(),
  "paymentResponse": zod.object({
  "orderId": zod.string().uuid().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional()
}).strict().optional(),
  "totalAmount": zod.number().optional(),
  "paidAmount": zod.number().optional(),
  "remainingAmount": zod.number().optional(),
  "isValid": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "fullyPaid": zod.boolean().optional(),
  "prepaymentAmount": zod.number().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "readyForCompletion": zod.boolean().optional(),
  "paymentConfigComplete": zod.boolean().optional()
}).strict()

export const updatePaymentConfig200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const updatePaymentConfig400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePaymentConfig401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePaymentConfig403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePaymentConfig404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePaymentConfig409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
 */
export const updateExecutionParamsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateExecutionParamsBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "serviceCategoryIds": zod.array(zod.string().uuid()).optional(),
  "completionDateRequest": zod.object({
  "serviceCategoryIds": zod.array(zod.string().uuid()).min(1),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H'])
}).strict().optional(),
  "completionDateResponse": zod.object({
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "standardProcessingHours": zod.number().optional(),
  "expeditedProcessingHours": zod.number().optional()
}).strict().optional(),
  "manualExecutionDate": zod.string().date().optional(),
  "useManualDate": zod.boolean().optional(),
  "needsRecalculation": zod.boolean().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "readyForCompletion": zod.boolean().optional(),
  "executionParamsComplete": zod.boolean().optional(),
  "effectiveExecutionDate": zod.string().datetime({}).optional()
}).strict()

export const updateExecutionParams200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const updateExecutionParams400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateExecutionParams401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateExecutionParams403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateExecutionParams404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateExecutionParams409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∑–Ω–∏–∂–æ–∫
 */
export const updateDiscountConfigParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateDiscountConfigBodyDiscountRequestDiscountPercentageMin = 0;

export const updateDiscountConfigBodyDiscountRequestDiscountPercentageMax = 100;
export const updateDiscountConfigBodyDiscountRequestDiscountDescriptionMin = 0;

export const updateDiscountConfigBodyDiscountRequestDiscountDescriptionMax = 255;


export const updateDiscountConfigBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "discountRequest": zod.object({
  "orderId": zod.string().uuid(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']),
  "discountPercentage": zod.number().min(updateDiscountConfigBodyDiscountRequestDiscountPercentageMin).max(updateDiscountConfigBodyDiscountRequestDiscountPercentageMax).optional(),
  "discountDescription": zod.string().min(updateDiscountConfigBodyDiscountRequestDiscountDescriptionMin).max(updateDiscountConfigBodyDiscountRequestDiscountDescriptionMax).optional()
}).strict().optional(),
  "discountResponse": zod.object({
  "orderId": zod.string().uuid().optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.number().optional(),
  "discountDescription": zod.string().optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "nonDiscountableCategories": zod.array(zod.string()).optional(),
  "nonDiscountableAmount": zod.number().optional()
}).strict().optional(),
  "excludedCategoryIds": zod.array(zod.string().uuid()).optional(),
  "originalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "isValid": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.number().optional(),
  "discountDescription": zod.string().optional(),
  "readyForCompletion": zod.boolean().optional(),
  "discountConfigComplete": zod.boolean().optional()
}).strict()

export const updateDiscountConfig200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const updateDiscountConfig400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDiscountConfig401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDiscountConfig403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDiscountConfig404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDiscountConfig409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const updateAdditionalInfoParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMin = 0;

export const updateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMax = 1000;
export const updateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMin = 0;

export const updateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMax = 1000;


export const updateAdditionalInfoBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "additionalInfoRequest": zod.object({
  "orderId": zod.string().uuid(),
  "additionalRequirements": zod.string().min(updateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMin).max(updateAdditionalInfoBodyAdditionalInfoRequestAdditionalRequirementsMax).optional(),
  "customerNotes": zod.string().min(updateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMin).max(updateAdditionalInfoBodyAdditionalInfoRequestCustomerNotesMax).optional()
}).strict().optional(),
  "additionalInfoResponse": zod.object({
  "orderId": zod.string().uuid().optional(),
  "additionalRequirements": zod.string().optional(),
  "customerNotes": zod.string().optional()
}).strict().optional(),
  "hasAdditionalRequirements": zod.boolean().optional(),
  "hasCustomerNotes": zod.boolean().optional(),
  "isValid": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().optional(),
  "additionalRequirements": zod.string().optional(),
  "readyForCompletion": zod.boolean().optional(),
  "additionalInfoComplete": zod.boolean().optional()
}).strict()

export const updateAdditionalInfo200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const updateAdditionalInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateAdditionalInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateAdditionalInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateAdditionalInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateAdditionalInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞)
 */
export const updateItemInOrderParams = zod.object({
  "sessionId": zod.string().uuid(),
  "itemId": zod.string().uuid()
}).strict()

export const updateItemInOrderBodyNameMin = 0;

export const updateItemInOrderBodyNameMax = 255;
export const updateItemInOrderBodyDescriptionMin = 0;

export const updateItemInOrderBodyDescriptionMax = 1000;
export const updateItemInOrderBodySpecialInstructionsMin = 0;

export const updateItemInOrderBodySpecialInstructionsMax = 500;
export const updateItemInOrderBodyDefectsNotesMin = 0;

export const updateItemInOrderBodyDefectsNotesMax = 1000;


export const updateItemInOrderBody = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateItemInOrderBodyNameMin).max(updateItemInOrderBodyNameMax),
  "description": zod.string().min(updateItemInOrderBodyDescriptionMin).max(updateItemInOrderBodyDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateItemInOrderBodySpecialInstructionsMin).max(updateItemInOrderBodySpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateItemInOrderBodyDefectsNotesMin).max(updateItemInOrderBodyDefectsNotesMax).optional()
}).strict()

export const updateItemInOrder200ResponseAddedItemsItemNameMin = 0;

export const updateItemInOrder200ResponseAddedItemsItemNameMax = 255;
export const updateItemInOrder200ResponseAddedItemsItemDescriptionMin = 0;

export const updateItemInOrder200ResponseAddedItemsItemDescriptionMax = 1000;
export const updateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const updateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const updateItemInOrder200ResponseAddedItemsItemDefectsNotesMin = 0;

export const updateItemInOrder200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const updateItemInOrder200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateItemInOrder200ResponseAddedItemsItemNameMin).max(updateItemInOrder200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(updateItemInOrder200ResponseAddedItemsItemDescriptionMin).max(updateItemInOrder200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMin).max(updateItemInOrder200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateItemInOrder200ResponseAddedItemsItemDefectsNotesMin).max(updateItemInOrder200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const updateItemInOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateItemInOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateItemInOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateItemInOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateItemInOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª—è—î –ø—Ä–µ–¥–º–µ—Ç –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const deleteItemFromOrderParams = zod.object({
  "sessionId": zod.string().uuid(),
  "itemId": zod.string().uuid()
}).strict()

export const deleteItemFromOrder200ResponseAddedItemsItemNameMin = 0;

export const deleteItemFromOrder200ResponseAddedItemsItemNameMax = 255;
export const deleteItemFromOrder200ResponseAddedItemsItemDescriptionMin = 0;

export const deleteItemFromOrder200ResponseAddedItemsItemDescriptionMax = 1000;
export const deleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const deleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const deleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMin = 0;

export const deleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const deleteItemFromOrder200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(deleteItemFromOrder200ResponseAddedItemsItemNameMin).max(deleteItemFromOrder200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(deleteItemFromOrder200ResponseAddedItemsItemDescriptionMin).max(deleteItemFromOrder200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(deleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMin).max(deleteItemFromOrder200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(deleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMin).max(deleteItemFromOrder200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const deleteItemFromOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteItemFromOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteItemFromOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteItemFromOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteItemFromOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏
 */
export const getCurrentNewClientFormParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const getCurrentNewClientForm200Response = zod.object({
  "firstName": zod.string().optional(),
  "lastName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "informationSource": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "status": zod.enum(['EMPTY', 'BASIC_FILLED', 'DETAILED_FILLED', 'COMMUNICATION_SET', 'SOURCE_SET', 'READY_FOR_VALIDATION', 'VALID', 'INVALID']).optional(),
  "fullName": zod.string().optional(),
  "otherInformationSource": zod.boolean().optional()
}).strict()

export const getCurrentNewClientForm400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentNewClientForm401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentNewClientForm403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentNewClientForm404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentNewClientForm409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ —Ñ–æ—Ä–º–∏ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const updateNewClientDataParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const updateNewClientDataBody = zod.object({
  "firstName": zod.string().optional(),
  "lastName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "informationSource": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "status": zod.enum(['EMPTY', 'BASIC_FILLED', 'DETAILED_FILLED', 'COMMUNICATION_SET', 'SOURCE_SET', 'READY_FOR_VALIDATION', 'VALID', 'INVALID']).optional(),
  "fullName": zod.string().optional(),
  "otherInformationSource": zod.boolean().optional()
}).strict()

export const updateNewClientData400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateNewClientData401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateNewClientData403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateNewClientData404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateNewClientData409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω—É –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const getCurrentBasicOrderInfoParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const getCurrentBasicOrderInfo200ResponseSelectedBranchPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getCurrentBasicOrderInfo200Response = zod.object({
  "receiptNumber": zod.string().optional(),
  "uniqueTag": zod.string().optional(),
  "selectedBranch": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getCurrentBasicOrderInfo200ResponseSelectedBranchPhoneRegExp).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict().optional(),
  "selectedBranchId": zod.string().uuid().optional(),
  "creationDate": zod.string().datetime({}).optional(),
  "receiptNumberGenerated": zod.boolean().optional(),
  "uniqueTagEntered": zod.boolean().optional(),
  "branchSelected": zod.boolean().optional(),
  "creationDateSet": zod.boolean().optional(),
  "complete": zod.boolean().optional(),
  "receiptNumberValid": zod.boolean().optional(),
  "uniqueTagValid": zod.boolean().optional()
}).strict()

export const getCurrentBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª—é—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const updateBasicOrderInfoParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const updateBasicOrderInfoBodySelectedBranchPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const updateBasicOrderInfoBody = zod.object({
  "receiptNumber": zod.string().optional(),
  "uniqueTag": zod.string().optional(),
  "selectedBranch": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateBasicOrderInfoBodySelectedBranchPhoneRegExp).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict().optional(),
  "selectedBranchId": zod.string().uuid().optional(),
  "creationDate": zod.string().datetime({}).optional(),
  "receiptNumberGenerated": zod.boolean().optional(),
  "uniqueTagEntered": zod.boolean().optional(),
  "branchSelected": zod.boolean().optional(),
  "creationDateSet": zod.boolean().optional(),
  "complete": zod.boolean().optional(),
  "receiptNumberValid": zod.boolean().optional(),
  "uniqueTagValid": zod.boolean().optional()
}).strict()

export const updateBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ ID
 */
export const getStainTypeByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getStainTypeById200Response = zod.object({

})

export const getStainTypeById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏
 */
export const updateStainTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateStainTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –ø–ª—è–º–∏')

export const updateStainType200Response = zod.object({

})

export const updateStainType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateStainType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏
 */
export const deleteStainTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deleteStainType200Response = zod.object({

})

export const deleteStainType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteStainType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞ ID
 */
export const getModifierByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getModifierById200Response = zod.object({

})

export const getModifierById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏
 */
export const updateModifierParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateModifierBody = zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const updateModifier200Response = zod.object({

})

export const updateModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ–∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏
 */
export const deactivateModifierParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deactivateModifier200Response = zod.object({

})

export const deactivateModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deactivateModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∑–∞ ID
 */
export const getItemByIdParams = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const getItemById200Response = zod.object({

})

export const getItemById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const updatePriceListItemParams = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const updatePriceListItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()

export const updatePriceListItem200Response = zod.object({

})

export const updatePriceListItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePriceListItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥
 */
export const updateCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const updateCategoryBody = zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict()

export const updateCategory200Response = zod.object({

})

export const updateCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict()

export const getOrderItem200ResponseNameMinOne = 0;

export const getOrderItem200ResponseNameMaxOne = 255;
export const getOrderItem200ResponseDescriptionMinOne = 0;

export const getOrderItem200ResponseDescriptionMaxOne = 1000;
export const getOrderItem200ResponseSpecialInstructionsMinOne = 0;

export const getOrderItem200ResponseSpecialInstructionsMaxOne = 500;
export const getOrderItem200ResponseDefectsNotesMinOne = 0;

export const getOrderItem200ResponseDefectsNotesMaxOne = 1000;


export const getOrderItem200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getOrderItem200ResponseNameMinOne).max(getOrderItem200ResponseNameMaxOne),
  "description": zod.string().min(getOrderItem200ResponseDescriptionMinOne).max(getOrderItem200ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getOrderItem200ResponseSpecialInstructionsMinOne).max(getOrderItem200ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getOrderItem200ResponseDefectsNotesMinOne).max(getOrderItem200ResponseDefectsNotesMaxOne).optional()
}).strict()

export const getOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—Ä–µ–¥–º–µ—Ç —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict()

export const updateOrderItemBodyNameMinOne = 0;

export const updateOrderItemBodyNameMaxOne = 255;
export const updateOrderItemBodyDescriptionMinOne = 0;

export const updateOrderItemBodyDescriptionMaxOne = 1000;
export const updateOrderItemBodySpecialInstructionsMinOne = 0;

export const updateOrderItemBodySpecialInstructionsMaxOne = 500;
export const updateOrderItemBodyDefectsNotesMinOne = 0;

export const updateOrderItemBodyDefectsNotesMaxOne = 1000;


export const updateOrderItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateOrderItemBodyNameMinOne).max(updateOrderItemBodyNameMaxOne),
  "description": zod.string().min(updateOrderItemBodyDescriptionMinOne).max(updateOrderItemBodyDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateOrderItemBodySpecialInstructionsMinOne).max(updateOrderItemBodySpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateOrderItemBodyDefectsNotesMinOne).max(updateOrderItemBodyDefectsNotesMaxOne).optional()
}).strict()

export const updateOrderItem200ResponseNameMinOne = 0;

export const updateOrderItem200ResponseNameMaxOne = 255;
export const updateOrderItem200ResponseDescriptionMinOne = 0;

export const updateOrderItem200ResponseDescriptionMaxOne = 1000;
export const updateOrderItem200ResponseSpecialInstructionsMinOne = 0;

export const updateOrderItem200ResponseSpecialInstructionsMaxOne = 500;
export const updateOrderItem200ResponseDefectsNotesMinOne = 0;

export const updateOrderItem200ResponseDefectsNotesMaxOne = 1000;


export const updateOrderItem200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateOrderItem200ResponseNameMinOne).max(updateOrderItem200ResponseNameMaxOne),
  "description": zod.string().min(updateOrderItem200ResponseDescriptionMinOne).max(updateOrderItem200ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateOrderItem200ResponseSpecialInstructionsMinOne).max(updateOrderItem200ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateOrderItem200ResponseDefectsNotesMinOne).max(updateOrderItem200ResponseDefectsNotesMaxOne).optional()
}).strict()

export const updateOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –ø—Ä–µ–¥–º–µ—Ç —ñ–∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const deleteOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict()

export const deleteOrderItem204Response = zod.object({

})

export const deleteOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderStatusParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).describe('–ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const updateOrderStatus200ResponseClientStructuredAddressCityMinOne = 2;

export const updateOrderStatus200ResponseClientStructuredAddressCityMaxOne = 100;

export const updateOrderStatus200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateOrderStatus200ResponseClientStructuredAddressStreetMinOne = 2;

export const updateOrderStatus200ResponseClientStructuredAddressStreetMaxOne = 150;

export const updateOrderStatus200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateOrderStatus200ResponseClientStructuredAddressBuildingMinOne = 0;

export const updateOrderStatus200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const updateOrderStatus200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateOrderStatus200ResponseClientStructuredAddressApartmentMinOne = 0;

export const updateOrderStatus200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const updateOrderStatus200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateOrderStatus200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const updateOrderStatus200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const updateOrderStatus200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const updateOrderStatus200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const updateOrderStatus200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const updateOrderStatus200ResponseClientPreferencesItemKeyMinOne = 0;

export const updateOrderStatus200ResponseClientPreferencesItemKeyMaxOne = 100;
export const updateOrderStatus200ResponseClientPreferencesItemValueMinOne = 0;

export const updateOrderStatus200ResponseClientPreferencesItemValueMaxOne = 255;
export const updateOrderStatus200ResponseItemsItemNameMinOne = 0;

export const updateOrderStatus200ResponseItemsItemNameMaxOne = 255;
export const updateOrderStatus200ResponseItemsItemDescriptionMinOne = 0;

export const updateOrderStatus200ResponseItemsItemDescriptionMaxOne = 1000;
export const updateOrderStatus200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const updateOrderStatus200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const updateOrderStatus200ResponseItemsItemDefectsNotesMinOne = 0;

export const updateOrderStatus200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const updateOrderStatus200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const updateOrderStatus200ResponseCustomerNotesMinOne = 0;

export const updateOrderStatus200ResponseCustomerNotesMaxOne = 1000;
export const updateOrderStatus200ResponseInternalNotesMinOne = 0;

export const updateOrderStatus200ResponseInternalNotesMaxOne = 1000;


export const updateOrderStatus200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressCityMinOne).max(updateOrderStatus200ResponseClientStructuredAddressCityMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressStreetMinOne).max(updateOrderStatus200ResponseClientStructuredAddressStreetMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressBuildingMinOne).max(updateOrderStatus200ResponseClientStructuredAddressBuildingMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressApartmentMinOne).max(updateOrderStatus200ResponseClientStructuredAddressApartmentMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressPostalCodeMinOne).max(updateOrderStatus200ResponseClientStructuredAddressPostalCodeMaxOne).regex(updateOrderStatus200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(updateOrderStatus200ResponseClientStructuredAddressFullAddressMinOne).max(updateOrderStatus200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(updateOrderStatus200ResponseClientPreferencesItemKeyMinOne).max(updateOrderStatus200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(updateOrderStatus200ResponseClientPreferencesItemValueMinOne).max(updateOrderStatus200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(updateOrderStatus200ResponseItemsItemNameMinOne).max(updateOrderStatus200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(updateOrderStatus200ResponseItemsItemDescriptionMinOne).max(updateOrderStatus200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(updateOrderStatus200ResponseItemsItemSpecialInstructionsMinOne).max(updateOrderStatus200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(updateOrderStatus200ResponseItemsItemDefectsNotesMinOne).max(updateOrderStatus200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateOrderStatus200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(updateOrderStatus200ResponseCustomerNotesMinOne).max(updateOrderStatus200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(updateOrderStatus200ResponseInternalNotesMinOne).max(updateOrderStatus200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const updateOrderStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –î–æ–¥–∞—î –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –î–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç—É
 */
export const addPrepaymentParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "amount": zod.number().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏')
}).strict()

export const addPrepayment200ResponseClientStructuredAddressCityMinOne = 2;

export const addPrepayment200ResponseClientStructuredAddressCityMaxOne = 100;

export const addPrepayment200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const addPrepayment200ResponseClientStructuredAddressStreetMinOne = 2;

export const addPrepayment200ResponseClientStructuredAddressStreetMaxOne = 150;

export const addPrepayment200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const addPrepayment200ResponseClientStructuredAddressBuildingMinOne = 0;

export const addPrepayment200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const addPrepayment200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const addPrepayment200ResponseClientStructuredAddressApartmentMinOne = 0;

export const addPrepayment200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const addPrepayment200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const addPrepayment200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const addPrepayment200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const addPrepayment200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const addPrepayment200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const addPrepayment200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const addPrepayment200ResponseClientPreferencesItemKeyMinOne = 0;

export const addPrepayment200ResponseClientPreferencesItemKeyMaxOne = 100;
export const addPrepayment200ResponseClientPreferencesItemValueMinOne = 0;

export const addPrepayment200ResponseClientPreferencesItemValueMaxOne = 255;
export const addPrepayment200ResponseItemsItemNameMinOne = 0;

export const addPrepayment200ResponseItemsItemNameMaxOne = 255;
export const addPrepayment200ResponseItemsItemDescriptionMinOne = 0;

export const addPrepayment200ResponseItemsItemDescriptionMaxOne = 1000;
export const addPrepayment200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const addPrepayment200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const addPrepayment200ResponseItemsItemDefectsNotesMinOne = 0;

export const addPrepayment200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const addPrepayment200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const addPrepayment200ResponseCustomerNotesMinOne = 0;

export const addPrepayment200ResponseCustomerNotesMaxOne = 1000;
export const addPrepayment200ResponseInternalNotesMinOne = 0;

export const addPrepayment200ResponseInternalNotesMaxOne = 1000;


export const addPrepayment200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(addPrepayment200ResponseClientStructuredAddressCityMinOne).max(addPrepayment200ResponseClientStructuredAddressCityMaxOne).regex(addPrepayment200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(addPrepayment200ResponseClientStructuredAddressStreetMinOne).max(addPrepayment200ResponseClientStructuredAddressStreetMaxOne).regex(addPrepayment200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(addPrepayment200ResponseClientStructuredAddressBuildingMinOne).max(addPrepayment200ResponseClientStructuredAddressBuildingMaxOne).regex(addPrepayment200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(addPrepayment200ResponseClientStructuredAddressApartmentMinOne).max(addPrepayment200ResponseClientStructuredAddressApartmentMaxOne).regex(addPrepayment200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(addPrepayment200ResponseClientStructuredAddressPostalCodeMinOne).max(addPrepayment200ResponseClientStructuredAddressPostalCodeMaxOne).regex(addPrepayment200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(addPrepayment200ResponseClientStructuredAddressFullAddressMinOne).max(addPrepayment200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(addPrepayment200ResponseClientPreferencesItemKeyMinOne).max(addPrepayment200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(addPrepayment200ResponseClientPreferencesItemValueMinOne).max(addPrepayment200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addPrepayment200ResponseItemsItemNameMinOne).max(addPrepayment200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(addPrepayment200ResponseItemsItemDescriptionMinOne).max(addPrepayment200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addPrepayment200ResponseItemsItemSpecialInstructionsMinOne).max(addPrepayment200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addPrepayment200ResponseItemsItemDefectsNotesMinOne).max(addPrepayment200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(addPrepayment200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(addPrepayment200ResponseCustomerNotesMinOne).max(addPrepayment200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(addPrepayment200ResponseInternalNotesMinOne).max(addPrepayment200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const addPrepayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPrepayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–Ω–∏–∂–∫—É
 */
export const applyDiscountParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "amount": zod.number().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏')
}).strict()

export const applyDiscount200ResponseClientStructuredAddressCityMinOne = 2;

export const applyDiscount200ResponseClientStructuredAddressCityMaxOne = 100;

export const applyDiscount200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const applyDiscount200ResponseClientStructuredAddressStreetMinOne = 2;

export const applyDiscount200ResponseClientStructuredAddressStreetMaxOne = 150;

export const applyDiscount200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const applyDiscount200ResponseClientStructuredAddressBuildingMinOne = 0;

export const applyDiscount200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const applyDiscount200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const applyDiscount200ResponseClientStructuredAddressApartmentMinOne = 0;

export const applyDiscount200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const applyDiscount200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const applyDiscount200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const applyDiscount200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const applyDiscount200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const applyDiscount200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const applyDiscount200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const applyDiscount200ResponseClientPreferencesItemKeyMinOne = 0;

export const applyDiscount200ResponseClientPreferencesItemKeyMaxOne = 100;
export const applyDiscount200ResponseClientPreferencesItemValueMinOne = 0;

export const applyDiscount200ResponseClientPreferencesItemValueMaxOne = 255;
export const applyDiscount200ResponseItemsItemNameMinOne = 0;

export const applyDiscount200ResponseItemsItemNameMaxOne = 255;
export const applyDiscount200ResponseItemsItemDescriptionMinOne = 0;

export const applyDiscount200ResponseItemsItemDescriptionMaxOne = 1000;
export const applyDiscount200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const applyDiscount200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const applyDiscount200ResponseItemsItemDefectsNotesMinOne = 0;

export const applyDiscount200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const applyDiscount200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const applyDiscount200ResponseCustomerNotesMinOne = 0;

export const applyDiscount200ResponseCustomerNotesMaxOne = 1000;
export const applyDiscount200ResponseInternalNotesMinOne = 0;

export const applyDiscount200ResponseInternalNotesMaxOne = 1000;


export const applyDiscount200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(applyDiscount200ResponseClientStructuredAddressCityMinOne).max(applyDiscount200ResponseClientStructuredAddressCityMaxOne).regex(applyDiscount200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(applyDiscount200ResponseClientStructuredAddressStreetMinOne).max(applyDiscount200ResponseClientStructuredAddressStreetMaxOne).regex(applyDiscount200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(applyDiscount200ResponseClientStructuredAddressBuildingMinOne).max(applyDiscount200ResponseClientStructuredAddressBuildingMaxOne).regex(applyDiscount200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(applyDiscount200ResponseClientStructuredAddressApartmentMinOne).max(applyDiscount200ResponseClientStructuredAddressApartmentMaxOne).regex(applyDiscount200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(applyDiscount200ResponseClientStructuredAddressPostalCodeMinOne).max(applyDiscount200ResponseClientStructuredAddressPostalCodeMaxOne).regex(applyDiscount200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(applyDiscount200ResponseClientStructuredAddressFullAddressMinOne).max(applyDiscount200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(applyDiscount200ResponseClientPreferencesItemKeyMinOne).max(applyDiscount200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(applyDiscount200ResponseClientPreferencesItemValueMinOne).max(applyDiscount200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(applyDiscount200ResponseItemsItemNameMinOne).max(applyDiscount200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(applyDiscount200ResponseItemsItemDescriptionMinOne).max(applyDiscount200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(applyDiscount200ResponseItemsItemSpecialInstructionsMinOne).max(applyDiscount200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(applyDiscount200ResponseItemsItemDefectsNotesMinOne).max(applyDiscount200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(applyDiscount200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(applyDiscount200ResponseCustomerNotesMinOne).max(applyDiscount200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(applyDiscount200ResponseInternalNotesMinOne).max(applyDiscount200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const applyDiscount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î —á–µ—Ä–Ω–µ—Ç–∫—É –Ω–∞ –∞–∫—Ç–∏–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ü–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ —á–µ—Ä–Ω–µ—Ç–∫—É –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const convertDraftToOrderParams = zod.object({
  "id": zod.string().uuid().describe('ID —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const convertDraftToOrder200ResponseClientStructuredAddressCityMinOne = 2;

export const convertDraftToOrder200ResponseClientStructuredAddressCityMaxOne = 100;

export const convertDraftToOrder200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const convertDraftToOrder200ResponseClientStructuredAddressStreetMinOne = 2;

export const convertDraftToOrder200ResponseClientStructuredAddressStreetMaxOne = 150;

export const convertDraftToOrder200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const convertDraftToOrder200ResponseClientStructuredAddressBuildingMinOne = 0;

export const convertDraftToOrder200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const convertDraftToOrder200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const convertDraftToOrder200ResponseClientStructuredAddressApartmentMinOne = 0;

export const convertDraftToOrder200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const convertDraftToOrder200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const convertDraftToOrder200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const convertDraftToOrder200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const convertDraftToOrder200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const convertDraftToOrder200ResponseClientPreferencesItemKeyMinOne = 0;

export const convertDraftToOrder200ResponseClientPreferencesItemKeyMaxOne = 100;
export const convertDraftToOrder200ResponseClientPreferencesItemValueMinOne = 0;

export const convertDraftToOrder200ResponseClientPreferencesItemValueMaxOne = 255;
export const convertDraftToOrder200ResponseItemsItemNameMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemNameMaxOne = 255;
export const convertDraftToOrder200ResponseItemsItemDescriptionMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemDescriptionMaxOne = 1000;
export const convertDraftToOrder200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const convertDraftToOrder200ResponseItemsItemDefectsNotesMinOne = 0;

export const convertDraftToOrder200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const convertDraftToOrder200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const convertDraftToOrder200ResponseCustomerNotesMinOne = 0;

export const convertDraftToOrder200ResponseCustomerNotesMaxOne = 1000;
export const convertDraftToOrder200ResponseInternalNotesMinOne = 0;

export const convertDraftToOrder200ResponseInternalNotesMaxOne = 1000;


export const convertDraftToOrder200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressCityMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressCityMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressStreetMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressStreetMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressBuildingMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressBuildingMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressApartmentMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressApartmentMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressPostalCodeMaxOne).regex(convertDraftToOrder200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(convertDraftToOrder200ResponseClientStructuredAddressFullAddressMinOne).max(convertDraftToOrder200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(convertDraftToOrder200ResponseClientPreferencesItemKeyMinOne).max(convertDraftToOrder200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(convertDraftToOrder200ResponseClientPreferencesItemValueMinOne).max(convertDraftToOrder200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(convertDraftToOrder200ResponseItemsItemNameMinOne).max(convertDraftToOrder200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(convertDraftToOrder200ResponseItemsItemDescriptionMinOne).max(convertDraftToOrder200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(convertDraftToOrder200ResponseItemsItemSpecialInstructionsMinOne).max(convertDraftToOrder200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(convertDraftToOrder200ResponseItemsItemDefectsNotesMinOne).max(convertDraftToOrder200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(convertDraftToOrder200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(convertDraftToOrder200ResponseCustomerNotesMinOne).max(convertDraftToOrder200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(convertDraftToOrder200ResponseInternalNotesMinOne).max(convertDraftToOrder200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const convertDraftToOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const convertDraftToOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í—ñ–¥–∑–Ω–∞—á–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
 * @summary –í—ñ–¥–∑–Ω–∞—á–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ
 */
export const completeOrderParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const completeOrder200ResponseClientStructuredAddressCityMinOne = 2;

export const completeOrder200ResponseClientStructuredAddressCityMaxOne = 100;

export const completeOrder200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const completeOrder200ResponseClientStructuredAddressStreetMinOne = 2;

export const completeOrder200ResponseClientStructuredAddressStreetMaxOne = 150;

export const completeOrder200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const completeOrder200ResponseClientStructuredAddressBuildingMinOne = 0;

export const completeOrder200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const completeOrder200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const completeOrder200ResponseClientStructuredAddressApartmentMinOne = 0;

export const completeOrder200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const completeOrder200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const completeOrder200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const completeOrder200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const completeOrder200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const completeOrder200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const completeOrder200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const completeOrder200ResponseClientPreferencesItemKeyMinOne = 0;

export const completeOrder200ResponseClientPreferencesItemKeyMaxOne = 100;
export const completeOrder200ResponseClientPreferencesItemValueMinOne = 0;

export const completeOrder200ResponseClientPreferencesItemValueMaxOne = 255;
export const completeOrder200ResponseItemsItemNameMinOne = 0;

export const completeOrder200ResponseItemsItemNameMaxOne = 255;
export const completeOrder200ResponseItemsItemDescriptionMinOne = 0;

export const completeOrder200ResponseItemsItemDescriptionMaxOne = 1000;
export const completeOrder200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const completeOrder200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const completeOrder200ResponseItemsItemDefectsNotesMinOne = 0;

export const completeOrder200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const completeOrder200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const completeOrder200ResponseCustomerNotesMinOne = 0;

export const completeOrder200ResponseCustomerNotesMaxOne = 1000;
export const completeOrder200ResponseInternalNotesMinOne = 0;

export const completeOrder200ResponseInternalNotesMaxOne = 1000;


export const completeOrder200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(completeOrder200ResponseClientStructuredAddressCityMinOne).max(completeOrder200ResponseClientStructuredAddressCityMaxOne).regex(completeOrder200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(completeOrder200ResponseClientStructuredAddressStreetMinOne).max(completeOrder200ResponseClientStructuredAddressStreetMaxOne).regex(completeOrder200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(completeOrder200ResponseClientStructuredAddressBuildingMinOne).max(completeOrder200ResponseClientStructuredAddressBuildingMaxOne).regex(completeOrder200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(completeOrder200ResponseClientStructuredAddressApartmentMinOne).max(completeOrder200ResponseClientStructuredAddressApartmentMaxOne).regex(completeOrder200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(completeOrder200ResponseClientStructuredAddressPostalCodeMinOne).max(completeOrder200ResponseClientStructuredAddressPostalCodeMaxOne).regex(completeOrder200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(completeOrder200ResponseClientStructuredAddressFullAddressMinOne).max(completeOrder200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(completeOrder200ResponseClientPreferencesItemKeyMinOne).max(completeOrder200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(completeOrder200ResponseClientPreferencesItemValueMinOne).max(completeOrder200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(completeOrder200ResponseItemsItemNameMinOne).max(completeOrder200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(completeOrder200ResponseItemsItemDescriptionMinOne).max(completeOrder200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(completeOrder200ResponseItemsItemSpecialInstructionsMinOne).max(completeOrder200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(completeOrder200ResponseItemsItemDefectsNotesMinOne).max(completeOrder200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(completeOrder200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(completeOrder200ResponseCustomerNotesMinOne).max(completeOrder200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(completeOrder200ResponseInternalNotesMinOne).max(completeOrder200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const completeOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —Ç–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ —Ç–∞ –æ—á—ñ–∫—É–≤–∞–Ω—É –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderCompletionBody = zod.object({
  "orderId": zod.string().uuid(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']),
  "expectedCompletionDate": zod.string().datetime({})
}).strict()

export const updateOrderCompletion200Response = zod.object({

})

export const updateOrderCompletion400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î –∞–Ω–æ—Ç–∞—Ü—ñ—ó (–ø–æ–∑–Ω–∞—á–∫–∏) —Ç–∞ –æ–ø–∏—Å –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∞–Ω–æ—Ç–∞—Ü—ñ—ó —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const updatePhotoAnnotationsParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "photoId": zod.string().uuid().describe('ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const updatePhotoAnnotationsQueryParams = zod.object({
  "annotations": zod.string().describe('JSON –∑ –∞–Ω–æ—Ç–∞—Ü—ñ—è–º–∏'),
  "description": zod.string().optional().describe('–ù–æ–≤–∏–π –æ–ø–∏—Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const updatePhotoAnnotations200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()

export const updatePhotoAnnotations400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updatePhotoAnnotations409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ ID
 */
export const getDefectTypeByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getDefectTypeById200Response = zod.object({

})

export const getDefectTypeById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û–Ω–æ–≤–∏—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É
 */
export const updateDefectTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateDefectTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const updateDefectType200Response = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const updateDefectType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateDefectType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É
 */
export const deleteDefectTypeParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deleteDefectType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteDefectType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ ID
 */
export const getClientByIdParams = zod.object({
  "id": zod.string().uuid().describe('ID –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const getClientById200ResponseStructuredAddressCityMinOne = 2;

export const getClientById200ResponseStructuredAddressCityMaxOne = 100;

export const getClientById200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getClientById200ResponseStructuredAddressStreetMinOne = 2;

export const getClientById200ResponseStructuredAddressStreetMaxOne = 150;

export const getClientById200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getClientById200ResponseStructuredAddressBuildingMinOne = 0;

export const getClientById200ResponseStructuredAddressBuildingMaxOne = 20;

export const getClientById200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getClientById200ResponseStructuredAddressApartmentMinOne = 0;

export const getClientById200ResponseStructuredAddressApartmentMaxOne = 20;

export const getClientById200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getClientById200ResponseStructuredAddressPostalCodeMinOne = 0;

export const getClientById200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const getClientById200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getClientById200ResponseStructuredAddressFullAddressMinOne = 5;

export const getClientById200ResponseStructuredAddressFullAddressMaxOne = 500;
export const getClientById200ResponsePreferencesItemKeyMinOne = 0;

export const getClientById200ResponsePreferencesItemKeyMaxOne = 100;
export const getClientById200ResponsePreferencesItemValueMinOne = 0;

export const getClientById200ResponsePreferencesItemValueMaxOne = 255;


export const getClientById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getClientById200ResponseStructuredAddressCityMinOne).max(getClientById200ResponseStructuredAddressCityMaxOne).regex(getClientById200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getClientById200ResponseStructuredAddressStreetMinOne).max(getClientById200ResponseStructuredAddressStreetMaxOne).regex(getClientById200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getClientById200ResponseStructuredAddressBuildingMinOne).max(getClientById200ResponseStructuredAddressBuildingMaxOne).regex(getClientById200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getClientById200ResponseStructuredAddressApartmentMinOne).max(getClientById200ResponseStructuredAddressApartmentMaxOne).regex(getClientById200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getClientById200ResponseStructuredAddressPostalCodeMinOne).max(getClientById200ResponseStructuredAddressPostalCodeMaxOne).regex(getClientById200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getClientById200ResponseStructuredAddressFullAddressMinOne).max(getClientById200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getClientById200ResponsePreferencesItemKeyMinOne).max(getClientById200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(getClientById200ResponsePreferencesItemValueMinOne).max(getClientById200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const getClientById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ —ñ—Å–Ω—É—é—á–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const updateClientParams = zod.object({
  "id": zod.string().uuid().describe('ID –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const updateClientBodyLastNameMinOne = 2;

export const updateClientBodyLastNameMaxOne = 50;

export const updateClientBodyLastNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const updateClientBodyFirstNameMinOne = 2;

export const updateClientBodyFirstNameMaxOne = 50;

export const updateClientBodyFirstNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const updateClientBodyPhoneRegExpOne = new RegExp('^\\+?[0-9]{10,15}$');
export const updateClientBodyStructuredAddressCityMinOne = 2;

export const updateClientBodyStructuredAddressCityMaxOne = 100;

export const updateClientBodyStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateClientBodyStructuredAddressStreetMinOne = 2;

export const updateClientBodyStructuredAddressStreetMaxOne = 150;

export const updateClientBodyStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateClientBodyStructuredAddressBuildingMinOne = 0;

export const updateClientBodyStructuredAddressBuildingMaxOne = 20;

export const updateClientBodyStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClientBodyStructuredAddressApartmentMinOne = 0;

export const updateClientBodyStructuredAddressApartmentMaxOne = 20;

export const updateClientBodyStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClientBodyStructuredAddressPostalCodeMinOne = 0;

export const updateClientBodyStructuredAddressPostalCodeMaxOne = 10;

export const updateClientBodyStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const updateClientBodyStructuredAddressFullAddressMinOne = 5;

export const updateClientBodyStructuredAddressFullAddressMaxOne = 500;


export const updateClientBody = zod.object({
  "lastName": zod.string().min(updateClientBodyLastNameMinOne).max(updateClientBodyLastNameMaxOne).regex(updateClientBodyLastNameRegExpOne),
  "firstName": zod.string().min(updateClientBodyFirstNameMinOne).max(updateClientBodyFirstNameMaxOne).regex(updateClientBodyFirstNameRegExpOne),
  "phone": zod.string().min(1).regex(updateClientBodyPhoneRegExpOne),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateClientBodyStructuredAddressCityMinOne).max(updateClientBodyStructuredAddressCityMaxOne).regex(updateClientBodyStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(updateClientBodyStructuredAddressStreetMinOne).max(updateClientBodyStructuredAddressStreetMaxOne).regex(updateClientBodyStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(updateClientBodyStructuredAddressBuildingMinOne).max(updateClientBodyStructuredAddressBuildingMaxOne).regex(updateClientBodyStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(updateClientBodyStructuredAddressApartmentMinOne).max(updateClientBodyStructuredAddressApartmentMaxOne).regex(updateClientBodyStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(updateClientBodyStructuredAddressPostalCodeMinOne).max(updateClientBodyStructuredAddressPostalCodeMaxOne).regex(updateClientBodyStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(updateClientBodyStructuredAddressFullAddressMinOne).max(updateClientBodyStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞')

export const updateClient200ResponseStructuredAddressCityMinOne = 2;

export const updateClient200ResponseStructuredAddressCityMaxOne = 100;

export const updateClient200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateClient200ResponseStructuredAddressStreetMinOne = 2;

export const updateClient200ResponseStructuredAddressStreetMaxOne = 150;

export const updateClient200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateClient200ResponseStructuredAddressBuildingMinOne = 0;

export const updateClient200ResponseStructuredAddressBuildingMaxOne = 20;

export const updateClient200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClient200ResponseStructuredAddressApartmentMinOne = 0;

export const updateClient200ResponseStructuredAddressApartmentMaxOne = 20;

export const updateClient200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateClient200ResponseStructuredAddressPostalCodeMinOne = 0;

export const updateClient200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const updateClient200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const updateClient200ResponseStructuredAddressFullAddressMinOne = 5;

export const updateClient200ResponseStructuredAddressFullAddressMaxOne = 500;
export const updateClient200ResponsePreferencesItemKeyMinOne = 0;

export const updateClient200ResponsePreferencesItemKeyMaxOne = 100;
export const updateClient200ResponsePreferencesItemValueMinOne = 0;

export const updateClient200ResponsePreferencesItemValueMaxOne = 255;


export const updateClient200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateClient200ResponseStructuredAddressCityMinOne).max(updateClient200ResponseStructuredAddressCityMaxOne).regex(updateClient200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(updateClient200ResponseStructuredAddressStreetMinOne).max(updateClient200ResponseStructuredAddressStreetMaxOne).regex(updateClient200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(updateClient200ResponseStructuredAddressBuildingMinOne).max(updateClient200ResponseStructuredAddressBuildingMaxOne).regex(updateClient200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(updateClient200ResponseStructuredAddressApartmentMinOne).max(updateClient200ResponseStructuredAddressApartmentMaxOne).regex(updateClient200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(updateClient200ResponseStructuredAddressPostalCodeMinOne).max(updateClient200ResponseStructuredAddressPostalCodeMaxOne).regex(updateClient200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(updateClient200ResponseStructuredAddressFullAddressMinOne).max(updateClient200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(updateClient200ResponsePreferencesItemKeyMinOne).max(updateClient200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(updateClient200ResponsePreferencesItemValueMinOne).max(updateClient200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const updateClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –π–æ–≥–æ ID
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const deleteClientParams = zod.object({
  "id": zod.string().uuid().describe('ID –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const deleteClient204Response = zod.object({

})

export const deleteClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ ID
 */
export const getBranchLocationByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getBranchLocationById200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getBranchLocationById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getBranchLocationById200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getBranchLocationById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É
 */
export const updateBranchLocationParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const updateBranchLocationBodyPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const updateBranchLocationBodyCodeRegExpOne = new RegExp('^[A-Z0-9]{2,5}$');


export const updateBranchLocationBody = zod.object({
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateBranchLocationBodyPhoneRegExpOne).optional(),
  "code": zod.string().min(1).regex(updateBranchLocationBodyCodeRegExpOne),
  "active": zod.boolean().optional()
}).strict()

export const updateBranchLocation200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const updateBranchLocation200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateBranchLocation200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const updateBranchLocation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateBranchLocation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É
 */
export const deleteBranchLocationParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const deleteBranchLocation204Response = zod.object({

})

export const deleteBranchLocation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deleteBranchLocation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–º—ñ–Ω—é—î —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –ø—É–Ω–∫—Ç—É –ø—Ä–∏–π–æ–º—É
 * @summary –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
 */
export const setActiveStatusParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const setActiveStatusQueryParams = zod.object({
  "active": zod.boolean()
}).strict()

export const setActiveStatus200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const setActiveStatus200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(setActiveStatus200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const setActiveStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setActiveStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const validateReceiptConfigurationBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "generationRequest": zod.object({
  "orderId": zod.string().uuid(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().optional().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó'),
  "generatedReceipt": zod.object({
  "orderId": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "tagNumber": zod.string().optional(),
  "createdDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "branchInfo": zod.object({
  "branchName": zod.string().optional(),
  "address": zod.string().optional(),
  "phone": zod.string().optional(),
  "operatorName": zod.string().optional()
}).strict().optional(),
  "clientInfo": zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "communicationChannels": zod.array(zod.string()).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "serviceCategory": zod.string().optional(),
  "quantity": zod.number().optional(),
  "unitOfMeasure": zod.string().optional(),
  "material": zod.string().optional(),
  "color": zod.string().optional(),
  "filler": zod.string().optional(),
  "wearPercentage": zod.number().optional(),
  "basePrice": zod.number().optional(),
  "finalPrice": zod.number().optional(),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "percentageValue": zod.number().optional(),
  "fixedValue": zod.number().optional(),
  "impact": zod.number().optional()
}).strict()).optional(),
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "notes": zod.string().optional()
}).strict()).optional(),
  "financialInfo": zod.object({
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "discountType": zod.string().optional(),
  "expediteSurcharge": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional()
}).strict().optional(),
  "legalTerms": zod.string().optional(),
  "customerSignatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "additionalNotes": zod.string().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional()
}).strict().optional(),
  "pdfGenerated": zod.boolean().optional(),
  "emailSent": zod.boolean().optional(),
  "readyForPrint": zod.boolean().optional(),
  "pdfFilePath": zod.string().optional(),
  "generationTimestamp": zod.string().datetime({}).optional(),
  "validationMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const validateReceiptConfiguration200Response = zod.object({

})

export const validateReceiptConfiguration400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateReceiptConfiguration401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateReceiptConfiguration403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateReceiptConfiguration404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateReceiptConfiguration409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin = 2;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax = 100;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin = 2;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax = 150;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin = 0;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax = 20;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin = 0;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax = 20;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin = 0;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax = 10;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin = 5;

export const validateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax = 500;
export const validateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin = 0;

export const validateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax = 100;
export const validateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin = 0;

export const validateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax = 255;
export const validateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const validateOrderConfirmationBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "orderSummary": zod.object({
  "id": zod.string().uuid().optional().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "receiptNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "tagNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –º—ñ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin).max(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax).regex(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin).max(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax).regex(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin).max(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax).regex(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin).max(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax).regex(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin).max(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax).regex(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin).max(validateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin).max(validateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax),
  "value": zod.string().min(validateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin).max(validateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(validateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "category": zod.string().optional().describe('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏'),
  "quantity": zod.number().optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å'),
  "unitOfMeasure": zod.string().optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "material": zod.string().optional().describe('–ú–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "color": zod.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "filler": zod.string().optional().describe('–ù–∞–ø–æ–≤–Ω—é–≤–∞—á –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "fillerClumped": zod.boolean().optional().describe('–ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ —î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –∑–±–∏—Ç–∏–º'),
  "wearPercentage": zod.number().optional().describe('–°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö)'),
  "stains": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –ø–ª—è–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ'),
  "defects": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤'),
  "defectNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ —â–æ–¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤'),
  "basePrice": zod.number().optional().describe('–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')).optional().describe('–°–ø–∏—Å–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω–∏'),
  "finalPrice": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional().describe('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ')).optional().describe('–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏'),
  "totalAmount": zod.number().optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –∑–Ω–∏–∂–æ–∫'),
  "discountAmount": zod.number().optional().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏'),
  "expediteSurchargeAmount": zod.number().optional().describe('–°—É–º–∞ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "finalAmount": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–æ–∫ —Ç–∞ –Ω–∞–¥–±–∞–≤–æ–∫'),
  "prepaymentAmount": zod.number().optional().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏'),
  "balanceAmount": zod.number().optional().describe('–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ'),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional().describe('–¢–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'),
  "expectedCompletionDate": zod.string().datetime({}).optional().describe('–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "createdDate": zod.string().datetime({}).optional().describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "customerNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞'),
  "discountType": zod.string().optional().describe('–¢–∏–ø –∑–Ω–∏–∂–∫–∏'),
  "discountPercentage": zod.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–î–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –µ—Ç–∞–ø—É –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è'),
  "readyForConfirmation": zod.boolean().optional(),
  "summaryReviewed": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const validateOrderConfirmation200Response = zod.object({

})

export const validateOrderConfirmation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderConfirmation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderConfirmation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderConfirmation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderConfirmation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const validateOrderCompletionBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "finalizationRequest": zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "sendReceiptByEmail": zod.boolean().optional(),
  "generatePrintableReceipt": zod.boolean().optional(),
  "comments": zod.string().optional()
}).strict().optional(),
  "orderProcessed": zod.boolean().optional(),
  "orderSaved": zod.boolean().optional(),
  "wizardCompleted": zod.boolean().optional(),
  "completionTimestamp": zod.string().datetime({}).optional(),
  "createdOrderNumber": zod.string().optional(),
  "completionMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const validateOrderCompletion200Response = zod.object({

})

export const validateOrderCompletion400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderCompletion401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderCompletion403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderCompletion404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateOrderCompletion409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è —é—Ä–∏–¥–∏—á–Ω–æ–≥–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è
 */
export const validateLegalAcceptanceBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "signatureRequest": zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().min(1),
  "termsAccepted": zod.boolean(),
  "signatureType": zod.string().optional()
}).strict().optional().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞'),
  "termsRead": zod.boolean().optional(),
  "signatureCaptured": zod.boolean().optional(),
  "legalConfirmed": zod.boolean().optional(),
  "acceptanceTimestamp": zod.string().datetime({}).optional(),
  "validationMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const validateLegalAcceptance200Response = zod.object({

})

export const validateLegalAcceptance400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateLegalAcceptance401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateLegalAcceptance403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateLegalAcceptance404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateLegalAcceptance409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞
 */
export const saveSignatureBody = zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().min(1),
  "termsAccepted": zod.boolean(),
  "signatureType": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞')

export const saveSignature200Response = zod.object({

})

export const saveSignature400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const updateReceiptConfigurationParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateReceiptConfigurationBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "generationRequest": zod.object({
  "orderId": zod.string().uuid(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().optional().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó'),
  "generatedReceipt": zod.object({
  "orderId": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "tagNumber": zod.string().optional(),
  "createdDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "branchInfo": zod.object({
  "branchName": zod.string().optional(),
  "address": zod.string().optional(),
  "phone": zod.string().optional(),
  "operatorName": zod.string().optional()
}).strict().optional(),
  "clientInfo": zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "communicationChannels": zod.array(zod.string()).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "serviceCategory": zod.string().optional(),
  "quantity": zod.number().optional(),
  "unitOfMeasure": zod.string().optional(),
  "material": zod.string().optional(),
  "color": zod.string().optional(),
  "filler": zod.string().optional(),
  "wearPercentage": zod.number().optional(),
  "basePrice": zod.number().optional(),
  "finalPrice": zod.number().optional(),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "percentageValue": zod.number().optional(),
  "fixedValue": zod.number().optional(),
  "impact": zod.number().optional()
}).strict()).optional(),
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "notes": zod.string().optional()
}).strict()).optional(),
  "financialInfo": zod.object({
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "discountType": zod.string().optional(),
  "expediteSurcharge": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional()
}).strict().optional(),
  "legalTerms": zod.string().optional(),
  "customerSignatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "additionalNotes": zod.string().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional()
}).strict().optional(),
  "pdfGenerated": zod.boolean().optional(),
  "emailSent": zod.boolean().optional(),
  "readyForPrint": zod.boolean().optional(),
  "pdfFilePath": zod.string().optional(),
  "generationTimestamp": zod.string().datetime({}).optional(),
  "validationMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const updateReceiptConfiguration200Response = zod.object({

})

export const updateReceiptConfiguration400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateReceiptConfiguration401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateReceiptConfiguration403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateReceiptConfiguration404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateReceiptConfiguration409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderConfirmationParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin = 2;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax = 100;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin = 2;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax = 150;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin = 0;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax = 20;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin = 0;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax = 20;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin = 0;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax = 10;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin = 5;

export const updateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax = 500;
export const updateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin = 0;

export const updateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax = 100;
export const updateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin = 0;

export const updateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax = 255;
export const updateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const updateOrderConfirmationBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "orderSummary": zod.object({
  "id": zod.string().uuid().optional().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "receiptNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "tagNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –º—ñ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMin).max(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityMax).regex(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMin).max(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetMax).regex(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMin).max(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingMax).regex(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMin).max(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentMax).regex(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMin).max(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeMax).regex(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMin).max(updateOrderConfirmationBodyOrderSummaryClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMin).max(updateOrderConfirmationBodyOrderSummaryClientPreferencesItemKeyMax),
  "value": zod.string().min(updateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMin).max(updateOrderConfirmationBodyOrderSummaryClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(updateOrderConfirmationBodyOrderSummaryBranchLocationPhoneRegExp).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "category": zod.string().optional().describe('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏'),
  "quantity": zod.number().optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å'),
  "unitOfMeasure": zod.string().optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "material": zod.string().optional().describe('–ú–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "color": zod.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "filler": zod.string().optional().describe('–ù–∞–ø–æ–≤–Ω—é–≤–∞—á –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "fillerClumped": zod.boolean().optional().describe('–ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ —î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –∑–±–∏—Ç–∏–º'),
  "wearPercentage": zod.number().optional().describe('–°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö)'),
  "stains": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –ø–ª—è–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ'),
  "defects": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤'),
  "defectNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ —â–æ–¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤'),
  "basePrice": zod.number().optional().describe('–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')).optional().describe('–°–ø–∏—Å–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω–∏'),
  "finalPrice": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional().describe('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ')).optional().describe('–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏'),
  "totalAmount": zod.number().optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –∑–Ω–∏–∂–æ–∫'),
  "discountAmount": zod.number().optional().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏'),
  "expediteSurchargeAmount": zod.number().optional().describe('–°—É–º–∞ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "finalAmount": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–æ–∫ —Ç–∞ –Ω–∞–¥–±–∞–≤–æ–∫'),
  "prepaymentAmount": zod.number().optional().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏'),
  "balanceAmount": zod.number().optional().describe('–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ'),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional().describe('–¢–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'),
  "expectedCompletionDate": zod.string().datetime({}).optional().describe('–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "createdDate": zod.string().datetime({}).optional().describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "customerNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞'),
  "discountType": zod.string().optional().describe('–¢–∏–ø –∑–Ω–∏–∂–∫–∏'),
  "discountPercentage": zod.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–î–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –µ—Ç–∞–ø—É –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è'),
  "readyForConfirmation": zod.boolean().optional(),
  "summaryReviewed": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const updateOrderConfirmation200Response = zod.object({

})

export const updateOrderConfirmation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderConfirmation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderConfirmation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderConfirmation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderConfirmation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateOrderCompletion1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateOrderCompletion1Body = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "finalizationRequest": zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "sendReceiptByEmail": zod.boolean().optional(),
  "generatePrintableReceipt": zod.boolean().optional(),
  "comments": zod.string().optional()
}).strict().optional(),
  "orderProcessed": zod.boolean().optional(),
  "orderSaved": zod.boolean().optional(),
  "wizardCompleted": zod.boolean().optional(),
  "completionTimestamp": zod.string().datetime({}).optional(),
  "createdOrderNumber": zod.string().optional(),
  "completionMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const updateOrderCompletion1200Response = zod.object({

})

export const updateOrderCompletion1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateOrderCompletion1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è —é—Ä–∏–¥–∏—á–Ω–æ–≥–æ –ø—Ä–∏–π–Ω—è—Ç—Ç—è
 */
export const updateLegalAcceptanceParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const updateLegalAcceptanceBody = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE4_INITIALIZED', 'ORDER_SUMMARY_REVIEW', 'LEGAL_ACCEPTANCE', 'LEGAL_ACCEPTANCE_COMPLETED', 'RECEIPT_GENERATION', 'RECEIPT_GENERATED', 'ORDER_COMPLETION', 'STAGE4_COMPLETED', 'STAGE4_ERROR']).optional(),
  "signatureRequest": zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().min(1),
  "termsAccepted": zod.boolean(),
  "signatureType": zod.string().optional()
}).strict().optional().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞'),
  "termsRead": zod.boolean().optional(),
  "signatureCaptured": zod.boolean().optional(),
  "legalConfirmed": zod.boolean().optional(),
  "acceptanceTimestamp": zod.string().datetime({}).optional(),
  "validationMessage": zod.string().optional(),
  "hasValidationErrors": zod.boolean().optional()
}).strict()

export const updateLegalAcceptance200Response = zod.object({

})

export const updateLegalAcceptance400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateLegalAcceptance401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateLegalAcceptance403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateLegalAcceptance404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateLegalAcceptance409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó
 */
export const closeSessionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const closeSession200Response = zod.object({

})

export const closeSession400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const generateReceiptBody = zod.object({
  "orderId": zod.string().uuid(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const generateReceipt200Response = zod.object({

})

export const generateReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è PDF –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const generatePdfReceiptBody = zod.object({
  "orderId": zod.string().uuid(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const generatePdfReceipt200Response = zod.object({

})

export const generatePdfReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Stage4 –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const initializeStage4Params = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const initializeStage4200Response = zod.object({

})

export const initializeStage4400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage4401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage4403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage4404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage4409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –§—ñ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const finalizeOrderBody = zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "sendReceiptByEmail": zod.boolean().optional(),
  "generatePrintableReceipt": zod.boolean().optional(),
  "comments": zod.string().optional()
}).strict()

export const finalizeOrder200Response = zod.object({

})

export const finalizeOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É —Å–µ—Å—ñ—é Stage3
 */
export const createSessionBody = zod.string().uuid()

export const createSession200Response = zod.string().uuid()

export const createSession400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createSession401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createSession403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createSession404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createSession409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ Stage3 –¥–ª—è —Å–µ—Å—ñ—ó
 */
export const initializeStage3Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const initializeStage3400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage3401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage3403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage3404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeStage3409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç–∏ —Å–µ—Å—ñ—é
 */
export const closeSession1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const closeSession1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–ø—É—Å–∫–∞—î –Ω–æ–≤–∏–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const startNewItemWizardParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const startNewItemWizard200ResponseAddedItemsItemNameMin = 0;

export const startNewItemWizard200ResponseAddedItemsItemNameMax = 255;
export const startNewItemWizard200ResponseAddedItemsItemDescriptionMin = 0;

export const startNewItemWizard200ResponseAddedItemsItemDescriptionMax = 1000;
export const startNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const startNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const startNewItemWizard200ResponseAddedItemsItemDefectsNotesMin = 0;

export const startNewItemWizard200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const startNewItemWizard200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(startNewItemWizard200ResponseAddedItemsItemNameMin).max(startNewItemWizard200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(startNewItemWizard200ResponseAddedItemsItemDescriptionMin).max(startNewItemWizard200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(startNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMin).max(startNewItemWizard200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(startNewItemWizard200ResponseAddedItemsItemDefectsNotesMin).max(startNewItemWizard200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const startNewItemWizard400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startNewItemWizard401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startNewItemWizard403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startNewItemWizard404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startNewItemWizard409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–ø—É—Å–∫–∞—î –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const startEditItemWizardParams = zod.object({
  "sessionId": zod.string().uuid(),
  "itemId": zod.string().uuid()
}).strict()

export const startEditItemWizard200ResponseAddedItemsItemNameMin = 0;

export const startEditItemWizard200ResponseAddedItemsItemNameMax = 255;
export const startEditItemWizard200ResponseAddedItemsItemDescriptionMin = 0;

export const startEditItemWizard200ResponseAddedItemsItemDescriptionMax = 1000;
export const startEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const startEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const startEditItemWizard200ResponseAddedItemsItemDefectsNotesMin = 0;

export const startEditItemWizard200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const startEditItemWizard200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(startEditItemWizard200ResponseAddedItemsItemNameMin).max(startEditItemWizard200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(startEditItemWizard200ResponseAddedItemsItemDescriptionMin).max(startEditItemWizard200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(startEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMin).max(startEditItemWizard200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(startEditItemWizard200ResponseAddedItemsItemDefectsNotesMin).max(startEditItemWizard200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const startEditItemWizard400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startEditItemWizard401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startEditItemWizard403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startEditItemWizard404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startEditItemWizard409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏–≤–∞—î –∞–∫—Ç–∏–≤–Ω–∏–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
 */
export const closeWizardParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const closeWizard200ResponseAddedItemsItemNameMin = 0;

export const closeWizard200ResponseAddedItemsItemNameMax = 255;
export const closeWizard200ResponseAddedItemsItemDescriptionMin = 0;

export const closeWizard200ResponseAddedItemsItemDescriptionMax = 1000;
export const closeWizard200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const closeWizard200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const closeWizard200ResponseAddedItemsItemDefectsNotesMin = 0;

export const closeWizard200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const closeWizard200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(closeWizard200ResponseAddedItemsItemNameMin).max(closeWizard200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(closeWizard200ResponseAddedItemsItemDescriptionMin).max(closeWizard200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(closeWizard200ResponseAddedItemsItemSpecialInstructionsMin).max(closeWizard200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(closeWizard200ResponseAddedItemsItemDefectsNotesMin).max(closeWizard200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const closeWizard400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeWizard401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeWizard403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeWizard404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeWizard409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑—É—î —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
export const synchronizeManagerParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const synchronizeManager200ResponseAddedItemsItemNameMin = 0;

export const synchronizeManager200ResponseAddedItemsItemNameMax = 255;
export const synchronizeManager200ResponseAddedItemsItemDescriptionMin = 0;

export const synchronizeManager200ResponseAddedItemsItemDescriptionMax = 1000;
export const synchronizeManager200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const synchronizeManager200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const synchronizeManager200ResponseAddedItemsItemDefectsNotesMin = 0;

export const synchronizeManager200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const synchronizeManager200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(synchronizeManager200ResponseAddedItemsItemNameMin).max(synchronizeManager200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(synchronizeManager200ResponseAddedItemsItemDescriptionMin).max(synchronizeManager200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(synchronizeManager200ResponseAddedItemsItemSpecialInstructionsMin).max(synchronizeManager200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(synchronizeManager200ResponseAddedItemsItemDefectsNotesMin).max(synchronizeManager200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const synchronizeManager400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const synchronizeManager401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const synchronizeManager403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const synchronizeManager404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const synchronizeManager409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const addPhotoParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const addPhotoBody = zod.object({
  "file": zod.instanceof(File)
}).strict()

export const addPhoto200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const addPhoto400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPhoto401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPhoto403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPhoto404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addPhoto409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const completePhotoDocumentationParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const completePhotoDocumentation200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const completePhotoDocumentation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completePhotoDocumentation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completePhotoDocumentation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completePhotoDocumentation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completePhotoDocumentation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 5 - –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
 */
export const initializeSubstep5Params = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const initializeSubstep5200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const initializeSubstep5400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep5401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep5403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep5404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep5409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
 */
export const resetCalculationParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const resetCalculation200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const resetCalculation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetCalculation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetCalculation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetCalculation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetCalculation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–¥–∞–≤–∞–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
 */
export const addModifierParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const addModifierBody = zod.object({
  "modifierId": zod.string().optional(),
  "rangeValue": zod.number().optional(),
  "quantity": zod.number().optional()
}).strict()

export const addModifier200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const addModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 4
 */
export const initializeSubstep4Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const initializeSubstep4BodyCharacteristicsCurrentItemDescriptionMin = 0;

export const initializeSubstep4BodyCharacteristicsCurrentItemDescriptionMax = 1000;
export const initializeSubstep4BodyCharacteristicsCurrentItemSpecialInstructionsMin = 0;

export const initializeSubstep4BodyCharacteristicsCurrentItemSpecialInstructionsMax = 500;
export const initializeSubstep4BodyCharacteristicsCurrentItemDefectsNotesMin = 0;

export const initializeSubstep4BodyCharacteristicsCurrentItemDefectsNotesMax = 1000;
export const initializeSubstep4BodyStainsDefectsCurrentItemDescriptionMin = 0;

export const initializeSubstep4BodyStainsDefectsCurrentItemDescriptionMax = 1000;
export const initializeSubstep4BodyStainsDefectsCurrentItemSpecialInstructionsMin = 0;

export const initializeSubstep4BodyStainsDefectsCurrentItemSpecialInstructionsMax = 500;
export const initializeSubstep4BodyStainsDefectsCurrentItemDefectsNotesMin = 0;

export const initializeSubstep4BodyStainsDefectsCurrentItemDefectsNotesMax = 1000;


export const initializeSubstep4Body = zod.object({
  "basicInfo": zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict().optional(),
  "characteristics": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(initializeSubstep4BodyCharacteristicsCurrentItemDescriptionMin).max(initializeSubstep4BodyCharacteristicsCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(initializeSubstep4BodyCharacteristicsCurrentItemSpecialInstructionsMin).max(initializeSubstep4BodyCharacteristicsCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(initializeSubstep4BodyCharacteristicsCurrentItemDefectsNotesMin).max(initializeSubstep4BodyCharacteristicsCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.boolean().optional(),
  "colorSelectionCompleted": zod.boolean().optional(),
  "fillerSelectionCompleted": zod.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional()
}).strict().optional(),
  "stainsDefects": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(initializeSubstep4BodyStainsDefectsCurrentItemDescriptionMin).max(initializeSubstep4BodyStainsDefectsCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(initializeSubstep4BodyStainsDefectsCurrentItemSpecialInstructionsMin).max(initializeSubstep4BodyStainsDefectsCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(initializeSubstep4BodyStainsDefectsCurrentItemDefectsNotesMin).max(initializeSubstep4BodyStainsDefectsCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional()
}).strict()

export const initializeSubstep4200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const initializeSubstep4400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep4401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep4403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep4404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep4409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—ñ–¥–µ—Ç–∞–ø—É
 */
export const confirmCalculationParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const confirmCalculation200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const confirmCalculation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const confirmCalculation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const confirmCalculation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const confirmCalculation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const confirmCalculation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏
 */
export const calculatePriceBodyCalculationRequestCategoryCodeRegExp = new RegExp('^[A-Z_]+$');
export const calculatePriceBodyCalculationRequestItemNameMin = 0;

export const calculatePriceBodyCalculationRequestItemNameMax = 255;
export const calculatePriceBodyCalculationRequestColorMax = 100;
export const calculatePriceBodyCalculationRequestQuantityMax = 1000;
export const calculatePriceBodyCalculationRequestModifierIdsMin = 0;

export const calculatePriceBodyCalculationRequestModifierIdsMax = 20;
export const calculatePriceBodyCalculationRequestRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const calculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMin = 0;

export const calculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMax = 200;
export const calculatePriceBodyCalculationRequestRangeModifierValuesMin = 0;

export const calculatePriceBodyCalculationRequestRangeModifierValuesMax = 10;
export const calculatePriceBodyCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const calculatePriceBodyCalculationRequestFixedModifierQuantitiesItemQuantityMax = 100;
export const calculatePriceBodyCalculationRequestFixedModifierQuantitiesMin = 0;

export const calculatePriceBodyCalculationRequestFixedModifierQuantitiesMax = 10;
export const calculatePriceBodyCalculationRequestExpeditePercentMin = 0;

export const calculatePriceBodyCalculationRequestExpeditePercentMax = 200;
export const calculatePriceBodyCalculationRequestDiscountPercentMin = 0;

export const calculatePriceBodyCalculationRequestDiscountPercentMax = 50;
export const calculatePriceBodyCalculationResponseBaseUnitPriceMin = 0;
export const calculatePriceBodyCalculationResponseBaseTotalPriceMin = 0;
export const calculatePriceBodyCalculationResponseFinalUnitPriceMin = 0;
export const calculatePriceBodyCalculationResponseFinalTotalPriceMin = 0;
export const calculatePriceBodyRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const calculatePriceBodyRangeModifierValuesItemPercentageMin = 0;

export const calculatePriceBodyRangeModifierValuesItemPercentageMax = 200;
export const calculatePriceBodyFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const calculatePriceBodyFixedModifierQuantitiesItemQuantityMax = 100;


export const calculatePriceBody = zod.object({
  "calculationRequest": zod.object({
  "categoryCode": zod.string().min(1).regex(calculatePriceBodyCalculationRequestCategoryCodeRegExp).describe('–ö–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏'),
  "itemName": zod.string().min(calculatePriceBodyCalculationRequestItemNameMin).max(calculatePriceBodyCalculationRequestItemNameMax).describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "color": zod.string().max(calculatePriceBodyCalculationRequestColorMax).optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—É'),
  "quantity": zod.number().min(1).max(calculatePriceBodyCalculationRequestQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "modifierCodes": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –∫–æ–¥—ñ–≤ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "modifierIds": zod.array(zod.string()).min(calculatePriceBodyCalculationRequestModifierIdsMin).max(calculatePriceBodyCalculationRequestModifierIdsMax).optional().describe('–°–ø–∏—Å–æ–∫ ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(calculatePriceBodyCalculationRequestRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.number().min(calculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMin).max(calculatePriceBodyCalculationRequestRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).min(calculatePriceBodyCalculationRequestRangeModifierValuesMin).max(calculatePriceBodyCalculationRequestRangeModifierValuesMax).optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—É'),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(calculatePriceBodyCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.number().min(1).max(calculatePriceBodyCalculationRequestFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).min(calculatePriceBodyCalculationRequestFixedModifierQuantitiesMin).max(calculatePriceBodyCalculationRequestFixedModifierQuantitiesMax).optional().describe('–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é'),
  "expedited": zod.boolean().optional().describe('–ß–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "expeditePercent": zod.number().min(calculatePriceBodyCalculationRequestExpeditePercentMin).max(calculatePriceBodyCalculationRequestExpeditePercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "discountPercent": zod.number().min(calculatePriceBodyCalculationRequestDiscountPercentMin).max(calculatePriceBodyCalculationRequestDiscountPercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–ó–∞–ø–∏—Ç –Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç—É –∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏'),
  "calculationResponse": zod.object({
  "baseUnitPrice": zod.number().min(calculatePriceBodyCalculationResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.number().min(calculatePriceBodyCalculationResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.number().min(calculatePriceBodyCalculationResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.number().min(calculatePriceBodyCalculationResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().optional().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "selectedModifierIds": zod.array(zod.string()).optional(),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(calculatePriceBodyRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.number().min(calculatePriceBodyRangeModifierValuesItemPercentageMin).max(calculatePriceBodyRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).optional(),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(calculatePriceBodyFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.number().min(1).max(calculatePriceBodyFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).optional(),
  "calculationNotes": zod.string().optional(),
  "calculationCompleted": zod.boolean().optional(),
  "hasCalculationErrors": zod.boolean().optional(),
  "errorMessage": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "finalPrice": zod.number().optional(),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional(),
  "modifiersCount": zod.number().optional()
}).strict()

export const calculatePrice200ResponseBaseUnitPriceMin = 0;
export const calculatePrice200ResponseBaseTotalPriceMin = 0;
export const calculatePrice200ResponseFinalUnitPriceMin = 0;
export const calculatePrice200ResponseFinalTotalPriceMin = 0;


export const calculatePrice200Response = zod.object({
  "baseUnitPrice": zod.number().min(calculatePrice200ResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.number().min(calculatePrice200ResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.number().min(calculatePrice200ResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.number().min(calculatePrice200ResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞')

export const calculatePrice400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–∏ –∑ —É—Å—ñ–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏
 */
export const calculateFinalPriceParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const calculateFinalPrice200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const calculateFinalPrice400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateFinalPrice401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateFinalPrice403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateFinalPrice404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateFinalPrice409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –±–∞–∑–æ–≤–æ—ó —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const calculateBasePriceParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const calculateBasePrice200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const calculateBasePrice400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateBasePrice401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateBasePrice403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateBasePrice404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateBasePrice409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –ø–ª—è–º
 */
export const processStainSelectionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const processStainSelectionQueryParams = zod.object({
  "selectedStains": zod.string().optional(),
  "otherStains": zod.string().optional()
}).strict()

export const processStainSelection200ResponseDataCurrentItemDescriptionMin = 0;

export const processStainSelection200ResponseDataCurrentItemDescriptionMax = 1000;
export const processStainSelection200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const processStainSelection200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const processStainSelection200ResponseDataCurrentItemDefectsNotesMin = 0;

export const processStainSelection200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const processStainSelection200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(processStainSelection200ResponseDataCurrentItemDescriptionMin).max(processStainSelection200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(processStainSelection200ResponseDataCurrentItemSpecialInstructionsMin).max(processStainSelection200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(processStainSelection200ResponseDataCurrentItemDefectsNotesMin).max(processStainSelection200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const processStainSelection400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processStainSelection401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processStainSelection403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processStainSelection404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processStainSelection409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–∏–º—ñ—Ç–æ–∫ –ø—Ä–æ –¥–µ—Ñ–µ–∫—Ç–∏
 */
export const processDefectNotesParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const processDefectNotesQueryParams = zod.object({
  "defectNotes": zod.string().optional()
}).strict()

export const processDefectNotes200ResponseDataCurrentItemDescriptionMin = 0;

export const processDefectNotes200ResponseDataCurrentItemDescriptionMax = 1000;
export const processDefectNotes200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const processDefectNotes200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const processDefectNotes200ResponseDataCurrentItemDefectsNotesMin = 0;

export const processDefectNotes200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const processDefectNotes200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(processDefectNotes200ResponseDataCurrentItemDescriptionMin).max(processDefectNotes200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(processDefectNotes200ResponseDataCurrentItemSpecialInstructionsMin).max(processDefectNotes200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(processDefectNotes200ResponseDataCurrentItemDefectsNotesMin).max(processDefectNotes200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const processDefectNotes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectNotes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectNotes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectNotes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectNotes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–µ—Ç–∞–ø—É 3
 */
export const initializeSubstep3Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const initializeSubstep3BodyDescriptionMin = 0;

export const initializeSubstep3BodyDescriptionMax = 1000;
export const initializeSubstep3BodySpecialInstructionsMin = 0;

export const initializeSubstep3BodySpecialInstructionsMax = 500;
export const initializeSubstep3BodyDefectsNotesMin = 0;

export const initializeSubstep3BodyDefectsNotesMax = 1000;


export const initializeSubstep3Body = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(initializeSubstep3BodyDescriptionMin).max(initializeSubstep3BodyDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(initializeSubstep3BodySpecialInstructionsMin).max(initializeSubstep3BodySpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(initializeSubstep3BodyDefectsNotesMin).max(initializeSubstep3BodyDefectsNotesMax).optional()
}).strict()

export const initializeSubstep3200ResponseDataCurrentItemDescriptionMin = 0;

export const initializeSubstep3200ResponseDataCurrentItemDescriptionMax = 1000;
export const initializeSubstep3200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const initializeSubstep3200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const initializeSubstep3200ResponseDataCurrentItemDefectsNotesMin = 0;

export const initializeSubstep3200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const initializeSubstep3200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(initializeSubstep3200ResponseDataCurrentItemDescriptionMin).max(initializeSubstep3200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(initializeSubstep3200ResponseDataCurrentItemSpecialInstructionsMin).max(initializeSubstep3200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(initializeSubstep3200ResponseDataCurrentItemDefectsNotesMin).max(initializeSubstep3200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const initializeSubstep3400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep3401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep3403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep3404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep3409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const goBackParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const goBackQueryParams = zod.object({
  "targetState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR'])
}).strict()

export const goBack200ResponseDataCurrentItemDescriptionMin = 0;

export const goBack200ResponseDataCurrentItemDescriptionMax = 1000;
export const goBack200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const goBack200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const goBack200ResponseDataCurrentItemDefectsNotesMin = 0;

export const goBack200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const goBack200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(goBack200ResponseDataCurrentItemDescriptionMin).max(goBack200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(goBack200ResponseDataCurrentItemSpecialInstructionsMin).max(goBack200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(goBack200ResponseDataCurrentItemDefectsNotesMin).max(goBack200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const goBack400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const goBack401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const goBack403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const goBack404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const goBack409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤
 */
export const processDefectSelectionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const processDefectSelectionQueryParams = zod.object({
  "selectedDefects": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional()
}).strict()

export const processDefectSelection200ResponseDataCurrentItemDescriptionMin = 0;

export const processDefectSelection200ResponseDataCurrentItemDescriptionMax = 1000;
export const processDefectSelection200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const processDefectSelection200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const processDefectSelection200ResponseDataCurrentItemDefectsNotesMin = 0;

export const processDefectSelection200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const processDefectSelection200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(processDefectSelection200ResponseDataCurrentItemDescriptionMin).max(processDefectSelection200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(processDefectSelection200ResponseDataCurrentItemSpecialInstructionsMin).max(processDefectSelection200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(processDefectSelection200ResponseDataCurrentItemDefectsNotesMin).max(processDefectSelection200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const processDefectSelection400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectSelection401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectSelection403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectSelection404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const processDefectSelection409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—ñ–¥–µ—Ç–∞–ø—É 3
 */
export const completeSubstep3Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const completeSubstep3200ResponseDataCurrentItemDescriptionMin = 0;

export const completeSubstep3200ResponseDataCurrentItemDescriptionMax = 1000;
export const completeSubstep3200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const completeSubstep3200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const completeSubstep3200ResponseDataCurrentItemDefectsNotesMin = 0;

export const completeSubstep3200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const completeSubstep3200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(completeSubstep3200ResponseDataCurrentItemDescriptionMin).max(completeSubstep3200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(completeSubstep3200ResponseDataCurrentItemSpecialInstructionsMin).max(completeSubstep3200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(completeSubstep3200ResponseDataCurrentItemDefectsNotesMin).max(completeSubstep3200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const completeSubstep3400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep3401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep3403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep3404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep3409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î –≤—Å—ñ –≤–∏–±—Ä–∞–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 */
export const validateCharacteristicsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateCharacteristics200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const validateCharacteristics400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCharacteristics401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCharacteristics403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCharacteristics404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCharacteristics409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î —Å—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É
 */
export const selectWearLevelParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const selectWearLevelQueryParams = zod.object({
  "wearPercentage": zod.number()
}).strict()

export const selectWearLevel200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const selectWearLevel400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectWearLevel401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectWearLevel403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectWearLevel404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectWearLevel409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –º–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const selectMaterialParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const selectMaterialQueryParams = zod.object({
  "materialId": zod.string().uuid()
}).strict()

export const selectMaterial200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const selectMaterial400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectMaterial401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectMaterial403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectMaterial404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectMaterial409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á
 */
export const selectFillerParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const selectFillerQueryIsFillerDamagedDefault = false;

export const selectFillerQueryParams = zod.object({
  "fillerType": zod.string().optional(),
  "isFillerDamaged": zod.boolean().optional()
}).strict()

export const selectFiller200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const selectFiller400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectFiller401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectFiller403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectFiller404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectFiller409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const selectColorParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const selectColorQueryParams = zod.object({
  "color": zod.string()
}).strict()

export const selectColor200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const selectColor400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectColor401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectColor403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectColor404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectColor409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø—ñ–¥–µ—Ç–∞–ø 2 - –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 */
export const initializeSubstep2Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const initializeSubstep2QueryParams = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const initializeSubstep2200ResponseCurrentItemDescriptionMin = 0;

export const initializeSubstep2200ResponseCurrentItemDescriptionMax = 1000;
export const initializeSubstep2200ResponseCurrentItemSpecialInstructionsMin = 0;

export const initializeSubstep2200ResponseCurrentItemSpecialInstructionsMax = 500;
export const initializeSubstep2200ResponseCurrentItemDefectsNotesMin = 0;

export const initializeSubstep2200ResponseCurrentItemDefectsNotesMax = 1000;


export const initializeSubstep2200Response = zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(initializeSubstep2200ResponseCurrentItemDescriptionMin).max(initializeSubstep2200ResponseCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(initializeSubstep2200ResponseCurrentItemSpecialInstructionsMin).max(initializeSubstep2200ResponseCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(initializeSubstep2200ResponseCurrentItemDefectsNotesMin).max(initializeSubstep2200ResponseCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.boolean().optional(),
  "colorSelectionCompleted": zod.boolean().optional(),
  "fillerSelectionCompleted": zod.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional()
}).strict()

export const initializeSubstep2400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep2401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep2403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep2404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeSubstep2409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 2
 */
export const completeSubstep2Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const completeSubstep2200Response = zod.record(zod.string(), zod.any())

export const completeSubstep2400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep2401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep2403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep2404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeSubstep2409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –ø—ñ–¥–µ—Ç–∞–ø 2
 */
export const cancelSubstep2Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const cancelSubstep2400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelSubstep2401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelSubstep2403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelSubstep2404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelSubstep2409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î —Ç–∞ –∑–∞–≤–µ—Ä—à—É—î –ø—ñ–¥–µ—Ç–∞–ø 1
 */
export const validateAndCompleteSubstep1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateAndCompleteSubstep1200Response = zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict()

export const validateAndCompleteSubstep1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAndCompleteSubstep1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAndCompleteSubstep1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAndCompleteSubstep1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAndCompleteSubstep1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –ø—Ä–µ–¥–º–µ—Ç –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const selectPriceListItemParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const selectPriceListItemQueryParams = zod.object({
  "itemId": zod.string().uuid()
}).strict()

export const selectPriceListItem200Response = zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict()

export const selectPriceListItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectPriceListItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectPriceListItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectPriceListItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectPriceListItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥–∏
 */
export const selectServiceCategoryParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const selectServiceCategoryQueryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const selectServiceCategory200Response = zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict()

export const selectServiceCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectServiceCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectServiceCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectServiceCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectServiceCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î –ø—ñ–¥–µ—Ç–∞–ø 1 –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const resetSubstep1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const resetSubstep1200Response = zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict()

export const resetSubstep1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSubstep1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSubstep1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSubstep1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSubstep1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 */
export const enterQuantityParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const enterQuantityQueryParams = zod.object({
  "quantity": zod.number()
}).strict()

export const enterQuantity200Response = zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict()

export const enterQuantity400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const enterQuantity401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const enterQuantity403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const enterQuantity404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const enterQuantity409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—á–∏–Ω–∞—î –Ω–æ–≤–∏–π –ø—ñ–¥–µ—Ç–∞–ø 1 - –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
 */
export const startSubstep1200Response = zod.object({
  "itemId": zod.string().uuid().optional(),
  "serviceCategory": zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict().optional(),
  "priceListItem": zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict().optional(),
  "unitOfMeasure": zod.string().optional(),
  "quantity": zod.number().optional(),
  "totalBasePrice": zod.number().optional(),
  "valid": zod.boolean().optional(),
  "complete": zod.boolean().optional()
}).strict()

export const startSubstep1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startSubstep1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startSubstep1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startSubstep1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startSubstep1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î —Å–µ—Å—ñ—é –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const resetSessionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const resetSession400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSession401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSession403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSession404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetSession409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–¥–∞—î –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞)
 */
export const addItemToOrderParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const addItemToOrderBodyNameMin = 0;

export const addItemToOrderBodyNameMax = 255;
export const addItemToOrderBodyDescriptionMin = 0;

export const addItemToOrderBodyDescriptionMax = 1000;
export const addItemToOrderBodySpecialInstructionsMin = 0;

export const addItemToOrderBodySpecialInstructionsMax = 500;
export const addItemToOrderBodyDefectsNotesMin = 0;

export const addItemToOrderBodyDefectsNotesMax = 1000;


export const addItemToOrderBody = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addItemToOrderBodyNameMin).max(addItemToOrderBodyNameMax),
  "description": zod.string().min(addItemToOrderBodyDescriptionMin).max(addItemToOrderBodyDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addItemToOrderBodySpecialInstructionsMin).max(addItemToOrderBodySpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addItemToOrderBodyDefectsNotesMin).max(addItemToOrderBodyDefectsNotesMax).optional()
}).strict()

export const addItemToOrder200ResponseAddedItemsItemNameMin = 0;

export const addItemToOrder200ResponseAddedItemsItemNameMax = 255;
export const addItemToOrder200ResponseAddedItemsItemDescriptionMin = 0;

export const addItemToOrder200ResponseAddedItemsItemDescriptionMax = 1000;
export const addItemToOrder200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const addItemToOrder200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const addItemToOrder200ResponseAddedItemsItemDefectsNotesMin = 0;

export const addItemToOrder200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const addItemToOrder200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addItemToOrder200ResponseAddedItemsItemNameMin).max(addItemToOrder200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(addItemToOrder200ResponseAddedItemsItemDescriptionMin).max(addItemToOrder200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addItemToOrder200ResponseAddedItemsItemSpecialInstructionsMin).max(addItemToOrder200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addItemToOrder200ResponseAddedItemsItemDefectsNotesMin).max(addItemToOrder200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const addItemToOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addItemToOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addItemToOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addItemToOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addItemToOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –Ω–æ–≤–∏–π —Å–µ–∞–Ω—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const initializeItemManagerParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const initializeItemManager200ResponseAddedItemsItemNameMin = 0;

export const initializeItemManager200ResponseAddedItemsItemNameMax = 255;
export const initializeItemManager200ResponseAddedItemsItemDescriptionMin = 0;

export const initializeItemManager200ResponseAddedItemsItemDescriptionMax = 1000;
export const initializeItemManager200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const initializeItemManager200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const initializeItemManager200ResponseAddedItemsItemDefectsNotesMin = 0;

export const initializeItemManager200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const initializeItemManager200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(initializeItemManager200ResponseAddedItemsItemNameMin).max(initializeItemManager200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(initializeItemManager200ResponseAddedItemsItemDescriptionMin).max(initializeItemManager200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(initializeItemManager200ResponseAddedItemsItemSpecialInstructionsMin).max(initializeItemManager200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(initializeItemManager200ResponseAddedItemsItemDefectsNotesMin).max(initializeItemManager200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const initializeItemManager400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeItemManager401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeItemManager403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeItemManager404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeItemManager409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –µ—Ç–∞–ø 2 —Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É
 */
export const completeStage2Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const completeStage2200ResponseAddedItemsItemNameMin = 0;

export const completeStage2200ResponseAddedItemsItemNameMax = 255;
export const completeStage2200ResponseAddedItemsItemDescriptionMin = 0;

export const completeStage2200ResponseAddedItemsItemDescriptionMax = 1000;
export const completeStage2200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const completeStage2200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const completeStage2200ResponseAddedItemsItemDefectsNotesMin = 0;

export const completeStage2200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const completeStage2200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(completeStage2200ResponseAddedItemsItemNameMin).max(completeStage2200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(completeStage2200ResponseAddedItemsItemDescriptionMin).max(completeStage2200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(completeStage2200ResponseAddedItemsItemSpecialInstructionsMin).max(completeStage2200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(completeStage2200ResponseAddedItemsItemDefectsNotesMin).max(completeStage2200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const completeStage2400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeStage2401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeStage2403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeStage2404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeStage2409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î —Ñ–æ—Ä–º—É –∫–ª—ñ—î–Ω—Ç–∞
 */
export const validateNewClientFormParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const validateNewClientForm200Response = zod.object({

})

export const validateNewClientForm400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateNewClientForm401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateNewClientForm403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateNewClientForm404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateNewClientForm409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const createNewClientParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const createNewClient200ResponseStructuredAddressCityMin = 2;

export const createNewClient200ResponseStructuredAddressCityMax = 100;

export const createNewClient200ResponseStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createNewClient200ResponseStructuredAddressStreetMin = 2;

export const createNewClient200ResponseStructuredAddressStreetMax = 150;

export const createNewClient200ResponseStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createNewClient200ResponseStructuredAddressBuildingMin = 0;

export const createNewClient200ResponseStructuredAddressBuildingMax = 20;

export const createNewClient200ResponseStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createNewClient200ResponseStructuredAddressApartmentMin = 0;

export const createNewClient200ResponseStructuredAddressApartmentMax = 20;

export const createNewClient200ResponseStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createNewClient200ResponseStructuredAddressPostalCodeMin = 0;

export const createNewClient200ResponseStructuredAddressPostalCodeMax = 10;

export const createNewClient200ResponseStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const createNewClient200ResponseStructuredAddressFullAddressMin = 5;

export const createNewClient200ResponseStructuredAddressFullAddressMax = 500;
export const createNewClient200ResponsePreferencesItemKeyMin = 0;

export const createNewClient200ResponsePreferencesItemKeyMax = 100;
export const createNewClient200ResponsePreferencesItemValueMin = 0;

export const createNewClient200ResponsePreferencesItemValueMax = 255;


export const createNewClient200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createNewClient200ResponseStructuredAddressCityMin).max(createNewClient200ResponseStructuredAddressCityMax).regex(createNewClient200ResponseStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(createNewClient200ResponseStructuredAddressStreetMin).max(createNewClient200ResponseStructuredAddressStreetMax).regex(createNewClient200ResponseStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(createNewClient200ResponseStructuredAddressBuildingMin).max(createNewClient200ResponseStructuredAddressBuildingMax).regex(createNewClient200ResponseStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(createNewClient200ResponseStructuredAddressApartmentMin).max(createNewClient200ResponseStructuredAddressApartmentMax).regex(createNewClient200ResponseStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(createNewClient200ResponseStructuredAddressPostalCodeMin).max(createNewClient200ResponseStructuredAddressPostalCodeMax).regex(createNewClient200ResponseStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(createNewClient200ResponseStructuredAddressFullAddressMin).max(createNewClient200ResponseStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(createNewClient200ResponsePreferencesItemKeyMin).max(createNewClient200ResponsePreferencesItemKeyMax),
  "value": zod.string().min(createNewClient200ResponsePreferencesItemValueMin).max(createNewClient200ResponsePreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const createNewClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createNewClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createNewClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createNewClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createNewClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
 */
export const completeNewClientCreationParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const completeNewClientCreation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeNewClientCreation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeNewClientCreation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeNewClientCreation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeNewClientCreation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î —Ñ–æ—Ä–º—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const initializeNewClientForm200Response = zod.string()

export const initializeNewClientForm400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeNewClientForm401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeNewClientForm403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeNewClientForm404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeNewClientForm409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î –∫–ª—ñ—î–Ω—Ç–∞ –∑—ñ —Å–ø–∏—Å–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
 */
export const selectClientParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const selectClientQueryParams = zod.object({
  "clientId": zod.string().uuid()
}).strict()

export const selectClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–∫–æ–Ω—É—î –ø–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏
 */
export const searchClientsParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const searchClientsBody = zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "generalSearchTerm": zod.string().optional(),
  "page": zod.number().optional(),
  "size": zod.number().optional()
}).strict()

export const searchClients200ResponseClientsItemStructuredAddressCityMin = 2;

export const searchClients200ResponseClientsItemStructuredAddressCityMax = 100;

export const searchClients200ResponseClientsItemStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClients200ResponseClientsItemStructuredAddressStreetMin = 2;

export const searchClients200ResponseClientsItemStructuredAddressStreetMax = 150;

export const searchClients200ResponseClientsItemStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClients200ResponseClientsItemStructuredAddressBuildingMin = 0;

export const searchClients200ResponseClientsItemStructuredAddressBuildingMax = 20;

export const searchClients200ResponseClientsItemStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients200ResponseClientsItemStructuredAddressApartmentMin = 0;

export const searchClients200ResponseClientsItemStructuredAddressApartmentMax = 20;

export const searchClients200ResponseClientsItemStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients200ResponseClientsItemStructuredAddressPostalCodeMin = 0;

export const searchClients200ResponseClientsItemStructuredAddressPostalCodeMax = 10;

export const searchClients200ResponseClientsItemStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const searchClients200ResponseClientsItemStructuredAddressFullAddressMin = 5;

export const searchClients200ResponseClientsItemStructuredAddressFullAddressMax = 500;
export const searchClients200ResponseClientsItemPreferencesItemKeyMin = 0;

export const searchClients200ResponseClientsItemPreferencesItemKeyMax = 100;
export const searchClients200ResponseClientsItemPreferencesItemValueMin = 0;

export const searchClients200ResponseClientsItemPreferencesItemValueMax = 255;
export const searchClients200ResponseFirstClientStructuredAddressCityMin = 2;

export const searchClients200ResponseFirstClientStructuredAddressCityMax = 100;

export const searchClients200ResponseFirstClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClients200ResponseFirstClientStructuredAddressStreetMin = 2;

export const searchClients200ResponseFirstClientStructuredAddressStreetMax = 150;

export const searchClients200ResponseFirstClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClients200ResponseFirstClientStructuredAddressBuildingMin = 0;

export const searchClients200ResponseFirstClientStructuredAddressBuildingMax = 20;

export const searchClients200ResponseFirstClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients200ResponseFirstClientStructuredAddressApartmentMin = 0;

export const searchClients200ResponseFirstClientStructuredAddressApartmentMax = 20;

export const searchClients200ResponseFirstClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients200ResponseFirstClientStructuredAddressPostalCodeMin = 0;

export const searchClients200ResponseFirstClientStructuredAddressPostalCodeMax = 10;

export const searchClients200ResponseFirstClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const searchClients200ResponseFirstClientStructuredAddressFullAddressMin = 5;

export const searchClients200ResponseFirstClientStructuredAddressFullAddressMax = 500;
export const searchClients200ResponseFirstClientPreferencesItemKeyMin = 0;

export const searchClients200ResponseFirstClientPreferencesItemKeyMax = 100;
export const searchClients200ResponseFirstClientPreferencesItemValueMin = 0;

export const searchClients200ResponseFirstClientPreferencesItemValueMax = 255;


export const searchClients200Response = zod.object({
  "clients": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClients200ResponseClientsItemStructuredAddressCityMin).max(searchClients200ResponseClientsItemStructuredAddressCityMax).regex(searchClients200ResponseClientsItemStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(searchClients200ResponseClientsItemStructuredAddressStreetMin).max(searchClients200ResponseClientsItemStructuredAddressStreetMax).regex(searchClients200ResponseClientsItemStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(searchClients200ResponseClientsItemStructuredAddressBuildingMin).max(searchClients200ResponseClientsItemStructuredAddressBuildingMax).regex(searchClients200ResponseClientsItemStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(searchClients200ResponseClientsItemStructuredAddressApartmentMin).max(searchClients200ResponseClientsItemStructuredAddressApartmentMax).regex(searchClients200ResponseClientsItemStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(searchClients200ResponseClientsItemStructuredAddressPostalCodeMin).max(searchClients200ResponseClientsItemStructuredAddressPostalCodeMax).regex(searchClients200ResponseClientsItemStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(searchClients200ResponseClientsItemStructuredAddressFullAddressMin).max(searchClients200ResponseClientsItemStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClients200ResponseClientsItemPreferencesItemKeyMin).max(searchClients200ResponseClientsItemPreferencesItemKeyMax),
  "value": zod.string().min(searchClients200ResponseClientsItemPreferencesItemValueMin).max(searchClients200ResponseClientsItemPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()).optional(),
  "searchCriteria": zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "generalSearchTerm": zod.string().optional(),
  "page": zod.number().optional(),
  "size": zod.number().optional()
}).strict().optional(),
  "totalElements": zod.number().optional(),
  "totalPages": zod.number().optional(),
  "pageNumber": zod.number().optional(),
  "pageSize": zod.number().optional(),
  "hasPrevious": zod.boolean().optional(),
  "hasNext": zod.boolean().optional(),
  "searchTimeMs": zod.number().optional(),
  "exactSearch": zod.boolean().optional(),
  "firstClient": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClients200ResponseFirstClientStructuredAddressCityMin).max(searchClients200ResponseFirstClientStructuredAddressCityMax).regex(searchClients200ResponseFirstClientStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(searchClients200ResponseFirstClientStructuredAddressStreetMin).max(searchClients200ResponseFirstClientStructuredAddressStreetMax).regex(searchClients200ResponseFirstClientStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(searchClients200ResponseFirstClientStructuredAddressBuildingMin).max(searchClients200ResponseFirstClientStructuredAddressBuildingMax).regex(searchClients200ResponseFirstClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(searchClients200ResponseFirstClientStructuredAddressApartmentMin).max(searchClients200ResponseFirstClientStructuredAddressApartmentMax).regex(searchClients200ResponseFirstClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(searchClients200ResponseFirstClientStructuredAddressPostalCodeMin).max(searchClients200ResponseFirstClientStructuredAddressPostalCodeMax).regex(searchClients200ResponseFirstClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(searchClients200ResponseFirstClientStructuredAddressFullAddressMin).max(searchClients200ResponseFirstClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClients200ResponseFirstClientPreferencesItemKeyMin).max(searchClients200ResponseFirstClientPreferencesItemKeyMax),
  "value": zod.string().min(searchClients200ResponseFirstClientPreferencesItemValueMin).max(searchClients200ResponseFirstClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict().optional()
}).strict()

export const searchClients400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
 */
export const searchClientsByPhoneParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const searchClientsByPhoneQueryParams = zod.object({
  "phone": zod.string()
}).strict()

export const searchClientsByPhone200ResponseClientsItemStructuredAddressCityMin = 2;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressCityMax = 100;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClientsByPhone200ResponseClientsItemStructuredAddressStreetMin = 2;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressStreetMax = 150;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMin = 0;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMax = 20;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMin = 0;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMax = 20;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMin = 0;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMax = 10;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const searchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMin = 5;

export const searchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMax = 500;
export const searchClientsByPhone200ResponseClientsItemPreferencesItemKeyMin = 0;

export const searchClientsByPhone200ResponseClientsItemPreferencesItemKeyMax = 100;
export const searchClientsByPhone200ResponseClientsItemPreferencesItemValueMin = 0;

export const searchClientsByPhone200ResponseClientsItemPreferencesItemValueMax = 255;
export const searchClientsByPhone200ResponseFirstClientStructuredAddressCityMin = 2;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressCityMax = 100;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClientsByPhone200ResponseFirstClientStructuredAddressStreetMin = 2;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressStreetMax = 150;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMin = 0;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMax = 20;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMin = 0;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMax = 20;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMin = 0;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMax = 10;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const searchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMin = 5;

export const searchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMax = 500;
export const searchClientsByPhone200ResponseFirstClientPreferencesItemKeyMin = 0;

export const searchClientsByPhone200ResponseFirstClientPreferencesItemKeyMax = 100;
export const searchClientsByPhone200ResponseFirstClientPreferencesItemValueMin = 0;

export const searchClientsByPhone200ResponseFirstClientPreferencesItemValueMax = 255;


export const searchClientsByPhone200Response = zod.object({
  "clients": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClientsByPhone200ResponseClientsItemStructuredAddressCityMin).max(searchClientsByPhone200ResponseClientsItemStructuredAddressCityMax).regex(searchClientsByPhone200ResponseClientsItemStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(searchClientsByPhone200ResponseClientsItemStructuredAddressStreetMin).max(searchClientsByPhone200ResponseClientsItemStructuredAddressStreetMax).regex(searchClientsByPhone200ResponseClientsItemStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(searchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMin).max(searchClientsByPhone200ResponseClientsItemStructuredAddressBuildingMax).regex(searchClientsByPhone200ResponseClientsItemStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(searchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMin).max(searchClientsByPhone200ResponseClientsItemStructuredAddressApartmentMax).regex(searchClientsByPhone200ResponseClientsItemStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(searchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMin).max(searchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeMax).regex(searchClientsByPhone200ResponseClientsItemStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(searchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMin).max(searchClientsByPhone200ResponseClientsItemStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClientsByPhone200ResponseClientsItemPreferencesItemKeyMin).max(searchClientsByPhone200ResponseClientsItemPreferencesItemKeyMax),
  "value": zod.string().min(searchClientsByPhone200ResponseClientsItemPreferencesItemValueMin).max(searchClientsByPhone200ResponseClientsItemPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()).optional(),
  "searchCriteria": zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "generalSearchTerm": zod.string().optional(),
  "page": zod.number().optional(),
  "size": zod.number().optional()
}).strict().optional(),
  "totalElements": zod.number().optional(),
  "totalPages": zod.number().optional(),
  "pageNumber": zod.number().optional(),
  "pageSize": zod.number().optional(),
  "hasPrevious": zod.boolean().optional(),
  "hasNext": zod.boolean().optional(),
  "searchTimeMs": zod.number().optional(),
  "exactSearch": zod.boolean().optional(),
  "firstClient": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClientsByPhone200ResponseFirstClientStructuredAddressCityMin).max(searchClientsByPhone200ResponseFirstClientStructuredAddressCityMax).regex(searchClientsByPhone200ResponseFirstClientStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(searchClientsByPhone200ResponseFirstClientStructuredAddressStreetMin).max(searchClientsByPhone200ResponseFirstClientStructuredAddressStreetMax).regex(searchClientsByPhone200ResponseFirstClientStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(searchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMin).max(searchClientsByPhone200ResponseFirstClientStructuredAddressBuildingMax).regex(searchClientsByPhone200ResponseFirstClientStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(searchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMin).max(searchClientsByPhone200ResponseFirstClientStructuredAddressApartmentMax).regex(searchClientsByPhone200ResponseFirstClientStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(searchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMin).max(searchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeMax).regex(searchClientsByPhone200ResponseFirstClientStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(searchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMin).max(searchClientsByPhone200ResponseFirstClientStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClientsByPhone200ResponseFirstClientPreferencesItemKeyMin).max(searchClientsByPhone200ResponseFirstClientPreferencesItemKeyMax),
  "value": zod.string().min(searchClientsByPhone200ResponseFirstClientPreferencesItemValueMin).max(searchClientsByPhone200ResponseFirstClientPreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict().optional()
}).strict()

export const searchClientsByPhone400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsByPhone401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsByPhone403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsByPhone404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsByPhone409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –ø–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const completeClientSearchParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const completeClientSearch400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeClientSearch401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeClientSearch403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeClientSearch404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeClientSearch409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—á–∏—â—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É
 */
export const clearClientSearchParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const clearClientSearch400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const clearClientSearch401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const clearClientSearch403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const clearClientSearch404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const clearClientSearch409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—à—É–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤
 */
export const initializeClientSearch200Response = zod.string()

export const initializeClientSearch400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeClientSearch401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeClientSearch403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeClientSearch404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeClientSearch409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ—á–∏–Ω–∞—î workflow –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const startBasicOrderWorkflow200Response = zod.string()

export const startBasicOrderWorkflow400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startBasicOrderWorkflow401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startBasicOrderWorkflow403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startBasicOrderWorkflow404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const startBasicOrderWorkflow409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
 */
export const validateBasicOrderInfoParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const validateBasicOrderInfo200Response = zod.object({

})

export const validateBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —É–Ω—ñ–∫–∞–ª—å–Ω—É –º—ñ—Ç–∫—É
 */
export const setUniqueTagParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const setUniqueTagQueryParams = zod.object({
  "uniqueTag": zod.string()
}).strict()

export const setUniqueTag400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setUniqueTag401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setUniqueTag403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setUniqueTag404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const setUniqueTag409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–±–∏—Ä–∞—î —Ñ—ñ–ª—ñ—é –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const selectBranchParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const selectBranchQueryParams = zod.object({
  "branchId": zod.string().uuid()
}).strict()

export const selectBranch400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectBranch401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectBranch403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectBranch404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const selectBranch409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∏–¥–∞—î –±–∞–∑–æ–≤—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–æ –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const resetBasicOrderInfoParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const resetBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const resetBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ì–µ–Ω–µ—Ä—É—î –Ω–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const generateReceiptNumberParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const generateReceiptNumberQueryParams = zod.object({
  "branchCode": zod.string()
}).strict()

export const generateReceiptNumber200Response = zod.string()

export const generateReceiptNumber400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î –∑–±—ñ—Ä –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const completeBasicOrderInfoParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const completeBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const completeBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –∑–±—ñ—Ä –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const initializeBasicOrderInfo200Response = zod.string()

export const initializeBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const initializeBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∞–±–æ —Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –∑–∞ —Ä—ñ–≤–Ω–µ–º —Ä–∏–∑–∏–∫—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –ø–ª—è–º
 */
export const getStainTypesQueryActiveOnlyDefaultOne = true;

export const getStainTypesQueryParams = zod.object({
  "activeOnly": zod.boolean().default(getStainTypesQueryActiveOnlyDefaultOne),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional()
}).strict()

export const getStainTypes200ResponseItem = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –ø–ª—è–º–∏')
export const getStainTypes200Response = zod.array(getStainTypes200ResponseItem)

export const getStainTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π —Ç–∏–ø –ø–ª—è–º–∏ –∑ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏
 */
export const createStainTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –ø–ª—è–º–∏')

export const createStainType200Response = zod.object({

})

export const createStainType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createStainType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –Ω–æ–≤–∏–π –∞–±–æ –æ–Ω–æ–≤–ª—é—î —ñ—Å–Ω—É—é—á–∏–π –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞
 * @summary –ó–±–µ—Ä–µ–≥—Ç–∏ –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞
 */
export const saveSignature1Body = zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().min(1),
  "termsAccepted": zod.boolean(),
  "signatureType": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å—É –∫–ª—ñ—î–Ω—Ç–∞')

export const saveSignature1201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const saveSignature1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveSignature1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ì–µ–Ω–µ—Ä—É—î PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 * @summary –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é
 */
export const generatePdfReceipt1Body = zod.object({
  "orderId": zod.string().uuid(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const generatePdfReceipt1200Response = zod.object({
  "orderId": zod.string().uuid().optional(),
  "pdfUrl": zod.string().optional(),
  "pdfData": zod.string().optional(),
  "generatedAt": zod.string().datetime({}).optional(),
  "format": zod.string().optional(),
  "includeSignature": zod.boolean().optional(),
  "fileSize": zod.number().optional(),
  "fileName": zod.string().optional()
}).strict()

export const generatePdfReceipt1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generatePdfReceipt1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –Ω–∞ –≤–∫–∞–∑–∞–Ω–∏–π email
 * @summary –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –Ω–∞ email
 */
export const sendReceiptByEmailBody = zod.object({
  "orderId": zod.string().uuid(),
  "recipientEmail": zod.string().min(1),
  "subject": zod.string().optional(),
  "message": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const sendReceiptByEmail200Response = zod.object({
  "orderId": zod.string().uuid().optional(),
  "recipientEmail": zod.string().optional(),
  "sentAt": zod.string().datetime({}).optional(),
  "messageId": zod.string().optional(),
  "status": zod.enum(['SENT', 'FAILED', 'PENDING']).optional(),
  "subject": zod.string().optional(),
  "message": zod.string().optional()
}).strict()

export const sendReceiptByEmail400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sendReceiptByEmail409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏
 */
export const getAllModifiers200Response = zod.object({

})

export const getAllModifiers400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllModifiers409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏
 */
export const createModifierBody = zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const createModifier200Response = zod.object({

})

export const createModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const createPriceListItemParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const createPriceListItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()

export const createPriceListItem200Response = zod.object({

})

export const createPriceListItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createPriceListItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥
 */
export const createCategoryBody = zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict()

export const createCategory200Response = zod.object({

})

export const createCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ —Å–ø–∏—Å–∫–æ–º —ó—Ö –∫–æ–¥—ñ–≤
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫—ñ–ª—å–∫–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
 */
export const getModifiersByCodesBodyItem = zod.string()
export const getModifiersByCodesBody = zod.array(getModifiersByCodesBodyItem)

export const getModifiersByCodes200Response = zod.object({

})

export const getModifiersByCodes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCodes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –î–µ—Ç–∞–ª—å–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –±–∞–∑–æ–≤–æ—ó —Ü—ñ–Ω–∏, –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤, –∑–Ω–∏–∂–æ–∫ —Ç–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ
 * @summary –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ü—ñ–Ω—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤–∏–±—Ä–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
 */
export const calculatePrice1BodyCategoryCodeRegExp = new RegExp('^[A-Z_]+$');
export const calculatePrice1BodyItemNameMin = 0;

export const calculatePrice1BodyItemNameMax = 255;
export const calculatePrice1BodyColorMax = 100;
export const calculatePrice1BodyQuantityMax = 1000;
export const calculatePrice1BodyModifierIdsMin = 0;

export const calculatePrice1BodyModifierIdsMax = 20;
export const calculatePrice1BodyRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const calculatePrice1BodyRangeModifierValuesItemPercentageMin = 0;

export const calculatePrice1BodyRangeModifierValuesItemPercentageMax = 200;
export const calculatePrice1BodyRangeModifierValuesMin = 0;

export const calculatePrice1BodyRangeModifierValuesMax = 10;
export const calculatePrice1BodyFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const calculatePrice1BodyFixedModifierQuantitiesItemQuantityMax = 100;
export const calculatePrice1BodyFixedModifierQuantitiesMin = 0;

export const calculatePrice1BodyFixedModifierQuantitiesMax = 10;
export const calculatePrice1BodyExpeditePercentMin = 0;

export const calculatePrice1BodyExpeditePercentMax = 200;
export const calculatePrice1BodyDiscountPercentMin = 0;

export const calculatePrice1BodyDiscountPercentMax = 50;


export const calculatePrice1Body = zod.object({
  "categoryCode": zod.string().min(1).regex(calculatePrice1BodyCategoryCodeRegExp).describe('–ö–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏'),
  "itemName": zod.string().min(calculatePrice1BodyItemNameMin).max(calculatePrice1BodyItemNameMax).describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "color": zod.string().max(calculatePrice1BodyColorMax).optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—É'),
  "quantity": zod.number().min(1).max(calculatePrice1BodyQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "modifierCodes": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –∫–æ–¥—ñ–≤ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "modifierIds": zod.array(zod.string()).min(calculatePrice1BodyModifierIdsMin).max(calculatePrice1BodyModifierIdsMax).optional().describe('–°–ø–∏—Å–æ–∫ ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(calculatePrice1BodyRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.number().min(calculatePrice1BodyRangeModifierValuesItemPercentageMin).max(calculatePrice1BodyRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).min(calculatePrice1BodyRangeModifierValuesMin).max(calculatePrice1BodyRangeModifierValuesMax).optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—É'),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(calculatePrice1BodyFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.number().min(1).max(calculatePrice1BodyFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).min(calculatePrice1BodyFixedModifierQuantitiesMin).max(calculatePrice1BodyFixedModifierQuantitiesMax).optional().describe('–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é'),
  "expedited": zod.boolean().optional().describe('–ß–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "expeditePercent": zod.number().min(calculatePrice1BodyExpeditePercentMin).max(calculatePrice1BodyExpeditePercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "discountPercent": zod.number().min(calculatePrice1BodyDiscountPercentMin).max(calculatePrice1BodyDiscountPercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().describe('–ó–∞–ø–∏—Ç –Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç—É –∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏')

export const calculatePrice1200ResponseBaseUnitPriceMin = 0;
export const calculatePrice1200ResponseBaseTotalPriceMin = 0;
export const calculatePrice1200ResponseFinalUnitPriceMin = 0;
export const calculatePrice1200ResponseFinalTotalPriceMin = 0;


export const calculatePrice1200Response = zod.object({
  "baseUnitPrice": zod.number().min(calculatePrice1200ResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.number().min(calculatePrice1200ResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.number().min(calculatePrice1200ResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.number().min(calculatePrice1200ResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞')

export const calculatePrice1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePrice1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getAllOrders200ResponseClientStructuredAddressCityMinOne = 2;

export const getAllOrders200ResponseClientStructuredAddressCityMaxOne = 100;

export const getAllOrders200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getAllOrders200ResponseClientStructuredAddressStreetMinOne = 2;

export const getAllOrders200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getAllOrders200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getAllOrders200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getAllOrders200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getAllOrders200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllOrders200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getAllOrders200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getAllOrders200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllOrders200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getAllOrders200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getAllOrders200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getAllOrders200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getAllOrders200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getAllOrders200ResponseClientPreferencesItemKeyMinOne = 0;

export const getAllOrders200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getAllOrders200ResponseClientPreferencesItemValueMinOne = 0;

export const getAllOrders200ResponseClientPreferencesItemValueMaxOne = 255;
export const getAllOrders200ResponseItemsItemNameMinOne = 0;

export const getAllOrders200ResponseItemsItemNameMaxOne = 255;
export const getAllOrders200ResponseItemsItemDescriptionMinOne = 0;

export const getAllOrders200ResponseItemsItemDescriptionMaxOne = 1000;
export const getAllOrders200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getAllOrders200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getAllOrders200ResponseItemsItemDefectsNotesMinOne = 0;

export const getAllOrders200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getAllOrders200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getAllOrders200ResponseCustomerNotesMinOne = 0;

export const getAllOrders200ResponseCustomerNotesMaxOne = 1000;
export const getAllOrders200ResponseInternalNotesMinOne = 0;

export const getAllOrders200ResponseInternalNotesMaxOne = 1000;


export const getAllOrders200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getAllOrders200ResponseClientStructuredAddressCityMinOne).max(getAllOrders200ResponseClientStructuredAddressCityMaxOne).regex(getAllOrders200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getAllOrders200ResponseClientStructuredAddressStreetMinOne).max(getAllOrders200ResponseClientStructuredAddressStreetMaxOne).regex(getAllOrders200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getAllOrders200ResponseClientStructuredAddressBuildingMinOne).max(getAllOrders200ResponseClientStructuredAddressBuildingMaxOne).regex(getAllOrders200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getAllOrders200ResponseClientStructuredAddressApartmentMinOne).max(getAllOrders200ResponseClientStructuredAddressApartmentMaxOne).regex(getAllOrders200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getAllOrders200ResponseClientStructuredAddressPostalCodeMinOne).max(getAllOrders200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getAllOrders200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getAllOrders200ResponseClientStructuredAddressFullAddressMinOne).max(getAllOrders200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getAllOrders200ResponseClientPreferencesItemKeyMinOne).max(getAllOrders200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getAllOrders200ResponseClientPreferencesItemValueMinOne).max(getAllOrders200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getAllOrders200ResponseItemsItemNameMinOne).max(getAllOrders200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getAllOrders200ResponseItemsItemDescriptionMinOne).max(getAllOrders200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getAllOrders200ResponseItemsItemSpecialInstructionsMinOne).max(getAllOrders200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getAllOrders200ResponseItemsItemDefectsNotesMinOne).max(getAllOrders200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getAllOrders200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getAllOrders200ResponseCustomerNotesMinOne).max(getAllOrders200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getAllOrders200ResponseInternalNotesMinOne).max(getAllOrders200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()
export const getAllOrders200Response = zod.array(getAllOrders200ResponseItem)

export const getAllOrders400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllOrders409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const createOrderBodyItemsItemNameMinOne = 0;

export const createOrderBodyItemsItemNameMaxOne = 255;
export const createOrderBodyItemsItemDescriptionMinOne = 0;

export const createOrderBodyItemsItemDescriptionMaxOne = 1000;
export const createOrderBodyItemsItemSpecialInstructionsMinOne = 0;

export const createOrderBodyItemsItemSpecialInstructionsMaxOne = 500;
export const createOrderBodyItemsItemDefectsNotesMinOne = 0;

export const createOrderBodyItemsItemDefectsNotesMaxOne = 1000;
export const createOrderBodyCustomerNotesMinOne = 0;

export const createOrderBodyCustomerNotesMaxOne = 1000;
export const createOrderBodyInternalNotesMinOne = 0;

export const createOrderBodyInternalNotesMaxOne = 1000;


export const createOrderBody = zod.object({
  "tagNumber": zod.string().optional(),
  "clientId": zod.string().uuid(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(createOrderBodyItemsItemNameMinOne).max(createOrderBodyItemsItemNameMaxOne),
  "description": zod.string().min(createOrderBodyItemsItemDescriptionMinOne).max(createOrderBodyItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(createOrderBodyItemsItemSpecialInstructionsMinOne).max(createOrderBodyItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(createOrderBodyItemsItemDefectsNotesMinOne).max(createOrderBodyItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "discountAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "branchLocationId": zod.string().uuid(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(createOrderBodyCustomerNotesMinOne).max(createOrderBodyCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(createOrderBodyInternalNotesMinOne).max(createOrderBodyInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "draft": zod.boolean().optional()
}).strict().describe('–î–∞–Ω—ñ –¥–ª—è —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const createOrder201ResponseClientStructuredAddressCityMinOne = 2;

export const createOrder201ResponseClientStructuredAddressCityMaxOne = 100;

export const createOrder201ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createOrder201ResponseClientStructuredAddressStreetMinOne = 2;

export const createOrder201ResponseClientStructuredAddressStreetMaxOne = 150;

export const createOrder201ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createOrder201ResponseClientStructuredAddressBuildingMinOne = 0;

export const createOrder201ResponseClientStructuredAddressBuildingMaxOne = 20;

export const createOrder201ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createOrder201ResponseClientStructuredAddressApartmentMinOne = 0;

export const createOrder201ResponseClientStructuredAddressApartmentMaxOne = 20;

export const createOrder201ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createOrder201ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const createOrder201ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const createOrder201ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const createOrder201ResponseClientStructuredAddressFullAddressMinOne = 5;

export const createOrder201ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const createOrder201ResponseClientPreferencesItemKeyMinOne = 0;

export const createOrder201ResponseClientPreferencesItemKeyMaxOne = 100;
export const createOrder201ResponseClientPreferencesItemValueMinOne = 0;

export const createOrder201ResponseClientPreferencesItemValueMaxOne = 255;
export const createOrder201ResponseItemsItemNameMinOne = 0;

export const createOrder201ResponseItemsItemNameMaxOne = 255;
export const createOrder201ResponseItemsItemDescriptionMinOne = 0;

export const createOrder201ResponseItemsItemDescriptionMaxOne = 1000;
export const createOrder201ResponseItemsItemSpecialInstructionsMinOne = 0;

export const createOrder201ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const createOrder201ResponseItemsItemDefectsNotesMinOne = 0;

export const createOrder201ResponseItemsItemDefectsNotesMaxOne = 1000;
export const createOrder201ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const createOrder201ResponseCustomerNotesMinOne = 0;

export const createOrder201ResponseCustomerNotesMaxOne = 1000;
export const createOrder201ResponseInternalNotesMinOne = 0;

export const createOrder201ResponseInternalNotesMaxOne = 1000;


export const createOrder201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createOrder201ResponseClientStructuredAddressCityMinOne).max(createOrder201ResponseClientStructuredAddressCityMaxOne).regex(createOrder201ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(createOrder201ResponseClientStructuredAddressStreetMinOne).max(createOrder201ResponseClientStructuredAddressStreetMaxOne).regex(createOrder201ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(createOrder201ResponseClientStructuredAddressBuildingMinOne).max(createOrder201ResponseClientStructuredAddressBuildingMaxOne).regex(createOrder201ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(createOrder201ResponseClientStructuredAddressApartmentMinOne).max(createOrder201ResponseClientStructuredAddressApartmentMaxOne).regex(createOrder201ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(createOrder201ResponseClientStructuredAddressPostalCodeMinOne).max(createOrder201ResponseClientStructuredAddressPostalCodeMaxOne).regex(createOrder201ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(createOrder201ResponseClientStructuredAddressFullAddressMinOne).max(createOrder201ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(createOrder201ResponseClientPreferencesItemKeyMinOne).max(createOrder201ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(createOrder201ResponseClientPreferencesItemValueMinOne).max(createOrder201ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(createOrder201ResponseItemsItemNameMinOne).max(createOrder201ResponseItemsItemNameMaxOne),
  "description": zod.string().min(createOrder201ResponseItemsItemDescriptionMinOne).max(createOrder201ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(createOrder201ResponseItemsItemSpecialInstructionsMinOne).max(createOrder201ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(createOrder201ResponseItemsItemDefectsNotesMinOne).max(createOrder201ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(createOrder201ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(createOrder201ResponseCustomerNotesMinOne).max(createOrder201ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(createOrder201ResponseInternalNotesMinOne).max(createOrder201ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const createOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getRequirementsParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const getRequirements200Response = zod.object({

})

export const getRequirements400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRequirements409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û–Ω–æ–≤–∏—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–∏–º–æ–≥–∏ —Ç–∞ –ø—Ä–∏–º—ñ—Ç–∫–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const updateRequirementsParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const updateRequirementsBodyAdditionalRequirementsMinOne = 0;

export const updateRequirementsBodyAdditionalRequirementsMaxOne = 1000;
export const updateRequirementsBodyCustomerNotesMinOne = 0;

export const updateRequirementsBodyCustomerNotesMaxOne = 1000;


export const updateRequirementsBody = zod.object({
  "orderId": zod.string().uuid(),
  "additionalRequirements": zod.string().min(updateRequirementsBodyAdditionalRequirementsMinOne).max(updateRequirementsBodyAdditionalRequirementsMaxOne).optional(),
  "customerNotes": zod.string().min(updateRequirementsBodyCustomerNotesMinOne).max(updateRequirementsBodyCustomerNotesMaxOne).optional()
}).strict()

export const updateRequirements200Response = zod.object({

})

export const updateRequirements400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const updateRequirements409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –æ–ø–ª–∞—Ç—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderPaymentParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const getOrderPayment200Response = zod.object({

})

export const getOrderPayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderPayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É —Ç–∞ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —Ñ—ñ–Ω–∞–ª—å–Ω—ñ —Å—É–º–∏
 * @summary –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ–ø–ª–∞—Ç—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const applyPaymentParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const applyPaymentBodyPrepaymentAmountMinOne = 0;


export const applyPaymentBody = zod.object({
  "orderId": zod.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.number().min(applyPaymentBodyPrepaymentAmountMinOne).optional()
}).strict()

export const applyPayment200Response = zod.object({

})

export const applyPayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyPayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –†–æ–∑—Ä–∞—Ö–æ–≤—É—î —Å—É–º–∏ –æ–ø–ª–∞—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
 * @summary –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –æ–ø–ª–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const calculatePaymentParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const calculatePaymentBodyPrepaymentAmountMinOne = 0;


export const calculatePaymentBody = zod.object({
  "orderId": zod.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.number().min(calculatePaymentBodyPrepaymentAmountMinOne).optional()
}).strict()

export const calculatePayment200Response = zod.object({

})

export const calculatePayment400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculatePayment409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderItemsParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderItems200ResponseNameMinOne = 0;

export const getOrderItems200ResponseNameMaxOne = 255;
export const getOrderItems200ResponseDescriptionMinOne = 0;

export const getOrderItems200ResponseDescriptionMaxOne = 1000;
export const getOrderItems200ResponseSpecialInstructionsMinOne = 0;

export const getOrderItems200ResponseSpecialInstructionsMaxOne = 500;
export const getOrderItems200ResponseDefectsNotesMinOne = 0;

export const getOrderItems200ResponseDefectsNotesMaxOne = 1000;


export const getOrderItems200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getOrderItems200ResponseNameMinOne).max(getOrderItems200ResponseNameMaxOne),
  "description": zod.string().min(getOrderItems200ResponseDescriptionMinOne).max(getOrderItems200ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getOrderItems200ResponseSpecialInstructionsMinOne).max(getOrderItems200ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getOrderItems200ResponseDefectsNotesMinOne).max(getOrderItems200ResponseDefectsNotesMaxOne).optional()
}).strict()
export const getOrderItems200Response = zod.array(getOrderItems200ResponseItem)

export const getOrderItems400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderItems409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –î–æ–¥–∞—î –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const addOrderItemParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const addOrderItemBodyNameMinOne = 0;

export const addOrderItemBodyNameMaxOne = 255;
export const addOrderItemBodyDescriptionMinOne = 0;

export const addOrderItemBodyDescriptionMaxOne = 1000;
export const addOrderItemBodySpecialInstructionsMinOne = 0;

export const addOrderItemBodySpecialInstructionsMaxOne = 500;
export const addOrderItemBodyDefectsNotesMinOne = 0;

export const addOrderItemBodyDefectsNotesMaxOne = 1000;


export const addOrderItemBody = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addOrderItemBodyNameMinOne).max(addOrderItemBodyNameMaxOne),
  "description": zod.string().min(addOrderItemBodyDescriptionMinOne).max(addOrderItemBodyDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addOrderItemBodySpecialInstructionsMinOne).max(addOrderItemBodySpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addOrderItemBodyDefectsNotesMinOne).max(addOrderItemBodyDefectsNotesMaxOne).optional()
}).strict()

export const addOrderItem201ResponseNameMinOne = 0;

export const addOrderItem201ResponseNameMaxOne = 255;
export const addOrderItem201ResponseDescriptionMinOne = 0;

export const addOrderItem201ResponseDescriptionMaxOne = 1000;
export const addOrderItem201ResponseSpecialInstructionsMinOne = 0;

export const addOrderItem201ResponseSpecialInstructionsMaxOne = 500;
export const addOrderItem201ResponseDefectsNotesMinOne = 0;

export const addOrderItem201ResponseDefectsNotesMaxOne = 1000;


export const addOrderItem201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(addOrderItem201ResponseNameMinOne).max(addOrderItem201ResponseNameMaxOne),
  "description": zod.string().min(addOrderItem201ResponseDescriptionMinOne).max(addOrderItem201ResponseDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(addOrderItem201ResponseSpecialInstructionsMinOne).max(addOrderItem201ResponseSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(addOrderItem201ResponseDefectsNotesMinOne).max(addOrderItem201ResponseDefectsNotesMaxOne).optional()
}).strict()

export const addOrderItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const addOrderItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í—ñ–¥–ø—Ä–∞–≤–ª—è—î PDF-—á–µ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ email –∫–ª—ñ—î–Ω—Ç–∞
 * @summary –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —á–µ–∫ –Ω–∞ email
 */
export const emailReceiptParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const emailReceiptBody = zod.object({
  "orderId": zod.string().uuid(),
  "recipientEmail": zod.string().min(1),
  "subject": zod.string().optional(),
  "message": zod.string().optional(),
  "includeSignature": zod.boolean().optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó')

export const emailReceipt200Response = zod.object({

})

export const emailReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const emailReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –§—ñ–Ω–∞–ª—ñ–∑—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—î –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –∑–º—ñ–Ω—é—î —Å—Ç–∞—Ç—É—Å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const finalizeOrder1Body = zod.object({
  "orderId": zod.string().uuid(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "sendReceiptByEmail": zod.boolean().optional(),
  "generatePrintableReceipt": zod.boolean().optional(),
  "comments": zod.string().optional()
}).strict()

export const finalizeOrder1200ResponseClientStructuredAddressCityMinOne = 2;

export const finalizeOrder1200ResponseClientStructuredAddressCityMaxOne = 100;

export const finalizeOrder1200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const finalizeOrder1200ResponseClientStructuredAddressStreetMinOne = 2;

export const finalizeOrder1200ResponseClientStructuredAddressStreetMaxOne = 150;

export const finalizeOrder1200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const finalizeOrder1200ResponseClientStructuredAddressBuildingMinOne = 0;

export const finalizeOrder1200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const finalizeOrder1200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const finalizeOrder1200ResponseClientStructuredAddressApartmentMinOne = 0;

export const finalizeOrder1200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const finalizeOrder1200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const finalizeOrder1200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const finalizeOrder1200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const finalizeOrder1200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const finalizeOrder1200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const finalizeOrder1200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const finalizeOrder1200ResponseClientPreferencesItemKeyMinOne = 0;

export const finalizeOrder1200ResponseClientPreferencesItemKeyMaxOne = 100;
export const finalizeOrder1200ResponseClientPreferencesItemValueMinOne = 0;

export const finalizeOrder1200ResponseClientPreferencesItemValueMaxOne = 255;
export const finalizeOrder1200ResponseItemsItemNameMinOne = 0;

export const finalizeOrder1200ResponseItemsItemNameMaxOne = 255;
export const finalizeOrder1200ResponseItemsItemDescriptionMinOne = 0;

export const finalizeOrder1200ResponseItemsItemDescriptionMaxOne = 1000;
export const finalizeOrder1200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const finalizeOrder1200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const finalizeOrder1200ResponseItemsItemDefectsNotesMinOne = 0;

export const finalizeOrder1200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const finalizeOrder1200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const finalizeOrder1200ResponseCustomerNotesMinOne = 0;

export const finalizeOrder1200ResponseCustomerNotesMaxOne = 1000;
export const finalizeOrder1200ResponseInternalNotesMinOne = 0;

export const finalizeOrder1200ResponseInternalNotesMaxOne = 1000;


export const finalizeOrder1200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(finalizeOrder1200ResponseClientStructuredAddressCityMinOne).max(finalizeOrder1200ResponseClientStructuredAddressCityMaxOne).regex(finalizeOrder1200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(finalizeOrder1200ResponseClientStructuredAddressStreetMinOne).max(finalizeOrder1200ResponseClientStructuredAddressStreetMaxOne).regex(finalizeOrder1200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(finalizeOrder1200ResponseClientStructuredAddressBuildingMinOne).max(finalizeOrder1200ResponseClientStructuredAddressBuildingMaxOne).regex(finalizeOrder1200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(finalizeOrder1200ResponseClientStructuredAddressApartmentMinOne).max(finalizeOrder1200ResponseClientStructuredAddressApartmentMaxOne).regex(finalizeOrder1200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(finalizeOrder1200ResponseClientStructuredAddressPostalCodeMinOne).max(finalizeOrder1200ResponseClientStructuredAddressPostalCodeMaxOne).regex(finalizeOrder1200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(finalizeOrder1200ResponseClientStructuredAddressFullAddressMinOne).max(finalizeOrder1200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(finalizeOrder1200ResponseClientPreferencesItemKeyMinOne).max(finalizeOrder1200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(finalizeOrder1200ResponseClientPreferencesItemValueMinOne).max(finalizeOrder1200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(finalizeOrder1200ResponseItemsItemNameMinOne).max(finalizeOrder1200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(finalizeOrder1200ResponseItemsItemDescriptionMinOne).max(finalizeOrder1200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(finalizeOrder1200ResponseItemsItemSpecialInstructionsMinOne).max(finalizeOrder1200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(finalizeOrder1200ResponseItemsItemDefectsNotesMinOne).max(finalizeOrder1200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(finalizeOrder1200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(finalizeOrder1200ResponseCustomerNotesMinOne).max(finalizeOrder1200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(finalizeOrder1200ResponseInternalNotesMinOne).max(finalizeOrder1200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const finalizeOrder1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeOrder1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–±–µ—Ä—ñ–≥–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ —á–µ—Ä–Ω–µ—Ç–∫—É
 * @summary –ó–±–µ—Ä–µ–≥—Ç–∏ —á–µ—Ä–Ω–µ—Ç–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const saveOrderDraftBodyItemsItemNameMinOne = 0;

export const saveOrderDraftBodyItemsItemNameMaxOne = 255;
export const saveOrderDraftBodyItemsItemDescriptionMinOne = 0;

export const saveOrderDraftBodyItemsItemDescriptionMaxOne = 1000;
export const saveOrderDraftBodyItemsItemSpecialInstructionsMinOne = 0;

export const saveOrderDraftBodyItemsItemSpecialInstructionsMaxOne = 500;
export const saveOrderDraftBodyItemsItemDefectsNotesMinOne = 0;

export const saveOrderDraftBodyItemsItemDefectsNotesMaxOne = 1000;
export const saveOrderDraftBodyCustomerNotesMinOne = 0;

export const saveOrderDraftBodyCustomerNotesMaxOne = 1000;
export const saveOrderDraftBodyInternalNotesMinOne = 0;

export const saveOrderDraftBodyInternalNotesMaxOne = 1000;


export const saveOrderDraftBody = zod.object({
  "tagNumber": zod.string().optional(),
  "clientId": zod.string().uuid(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(saveOrderDraftBodyItemsItemNameMinOne).max(saveOrderDraftBodyItemsItemNameMaxOne),
  "description": zod.string().min(saveOrderDraftBodyItemsItemDescriptionMinOne).max(saveOrderDraftBodyItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(saveOrderDraftBodyItemsItemSpecialInstructionsMinOne).max(saveOrderDraftBodyItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(saveOrderDraftBodyItemsItemDefectsNotesMinOne).max(saveOrderDraftBodyItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "discountAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "branchLocationId": zod.string().uuid(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(saveOrderDraftBodyCustomerNotesMinOne).max(saveOrderDraftBodyCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(saveOrderDraftBodyInternalNotesMinOne).max(saveOrderDraftBodyInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "draft": zod.boolean().optional()
}).strict().describe('–î–∞–Ω—ñ –¥–ª—è —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')

export const saveOrderDraft201ResponseClientStructuredAddressCityMinOne = 2;

export const saveOrderDraft201ResponseClientStructuredAddressCityMaxOne = 100;

export const saveOrderDraft201ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const saveOrderDraft201ResponseClientStructuredAddressStreetMinOne = 2;

export const saveOrderDraft201ResponseClientStructuredAddressStreetMaxOne = 150;

export const saveOrderDraft201ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const saveOrderDraft201ResponseClientStructuredAddressBuildingMinOne = 0;

export const saveOrderDraft201ResponseClientStructuredAddressBuildingMaxOne = 20;

export const saveOrderDraft201ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const saveOrderDraft201ResponseClientStructuredAddressApartmentMinOne = 0;

export const saveOrderDraft201ResponseClientStructuredAddressApartmentMaxOne = 20;

export const saveOrderDraft201ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const saveOrderDraft201ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const saveOrderDraft201ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const saveOrderDraft201ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const saveOrderDraft201ResponseClientStructuredAddressFullAddressMinOne = 5;

export const saveOrderDraft201ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const saveOrderDraft201ResponseClientPreferencesItemKeyMinOne = 0;

export const saveOrderDraft201ResponseClientPreferencesItemKeyMaxOne = 100;
export const saveOrderDraft201ResponseClientPreferencesItemValueMinOne = 0;

export const saveOrderDraft201ResponseClientPreferencesItemValueMaxOne = 255;
export const saveOrderDraft201ResponseItemsItemNameMinOne = 0;

export const saveOrderDraft201ResponseItemsItemNameMaxOne = 255;
export const saveOrderDraft201ResponseItemsItemDescriptionMinOne = 0;

export const saveOrderDraft201ResponseItemsItemDescriptionMaxOne = 1000;
export const saveOrderDraft201ResponseItemsItemSpecialInstructionsMinOne = 0;

export const saveOrderDraft201ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const saveOrderDraft201ResponseItemsItemDefectsNotesMinOne = 0;

export const saveOrderDraft201ResponseItemsItemDefectsNotesMaxOne = 1000;
export const saveOrderDraft201ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const saveOrderDraft201ResponseCustomerNotesMinOne = 0;

export const saveOrderDraft201ResponseCustomerNotesMaxOne = 1000;
export const saveOrderDraft201ResponseInternalNotesMinOne = 0;

export const saveOrderDraft201ResponseInternalNotesMaxOne = 1000;


export const saveOrderDraft201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressCityMinOne).max(saveOrderDraft201ResponseClientStructuredAddressCityMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressStreetMinOne).max(saveOrderDraft201ResponseClientStructuredAddressStreetMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressBuildingMinOne).max(saveOrderDraft201ResponseClientStructuredAddressBuildingMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressApartmentMinOne).max(saveOrderDraft201ResponseClientStructuredAddressApartmentMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressPostalCodeMinOne).max(saveOrderDraft201ResponseClientStructuredAddressPostalCodeMaxOne).regex(saveOrderDraft201ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(saveOrderDraft201ResponseClientStructuredAddressFullAddressMinOne).max(saveOrderDraft201ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(saveOrderDraft201ResponseClientPreferencesItemKeyMinOne).max(saveOrderDraft201ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(saveOrderDraft201ResponseClientPreferencesItemValueMinOne).max(saveOrderDraft201ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(saveOrderDraft201ResponseItemsItemNameMinOne).max(saveOrderDraft201ResponseItemsItemNameMaxOne),
  "description": zod.string().min(saveOrderDraft201ResponseItemsItemDescriptionMinOne).max(saveOrderDraft201ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(saveOrderDraft201ResponseItemsItemSpecialInstructionsMinOne).max(saveOrderDraft201ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(saveOrderDraft201ResponseItemsItemDefectsNotesMinOne).max(saveOrderDraft201ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(saveOrderDraft201ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(saveOrderDraft201ResponseCustomerNotesMinOne).max(saveOrderDraft201ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(saveOrderDraft201ResponseInternalNotesMinOne).max(saveOrderDraft201ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const saveOrderDraft400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const saveOrderDraft409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞—Å—Ç–æ—Å–æ–≤—É—î –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –æ–±–º–µ–∂–µ–Ω—å –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 * @summary –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const applyDiscount1BodyDiscountPercentageMinOne = 0;

export const applyDiscount1BodyDiscountPercentageMaxOne = 100;
export const applyDiscount1BodyDiscountDescriptionMinOne = 0;

export const applyDiscount1BodyDiscountDescriptionMaxOne = 255;


export const applyDiscount1Body = zod.object({
  "orderId": zod.string().uuid(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']),
  "discountPercentage": zod.number().min(applyDiscount1BodyDiscountPercentageMinOne).max(applyDiscount1BodyDiscountPercentageMaxOne).optional(),
  "discountDescription": zod.string().min(applyDiscount1BodyDiscountDescriptionMinOne).max(applyDiscount1BodyDiscountDescriptionMaxOne).optional()
}).strict()

export const applyDiscount1200Response = zod.object({

})

export const applyDiscount1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const applyDiscount1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –†–æ–∑—Ä–∞—Ö–æ–≤—É—î –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥ —Ç–∞ —Ç–∏–ø—É —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—Å—Ç—ñ
 * @summary –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –æ—á—ñ–∫—É–≤–∞–Ω—É –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const calculateCompletionDateBody = zod.object({
  "serviceCategoryIds": zod.array(zod.string().uuid()).min(1),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H'])
}).strict()

export const calculateCompletionDate200Response = zod.object({

})

export const calculateCompletionDate400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const calculateCompletionDate409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getPhotosByItemIdParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getPhotosByItemId200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()
export const getPhotosByItemId200Response = zod.array(getPhotosByItemId200ResponseItem)

export const getPhotosByItemId400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotosByItemId409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –Ω–æ–≤—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const uploadPhotoParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const uploadPhotoQueryParams = zod.object({
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)')
}).strict()

export const uploadPhotoBody = zod.object({
  "file": zod.instanceof(File).describe('–§–∞–π–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const uploadPhoto201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()

export const uploadPhoto400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const uploadPhoto409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∞–±–æ —Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –∑–∞ —Ä—ñ–≤–Ω–µ–º —Ä–∏–∑–∏–∫—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getDefectTypesQueryActiveOnlyDefaultOne = true;

export const getDefectTypesQueryParams = zod.object({
  "activeOnly": zod.boolean().default(getDefectTypesQueryActiveOnlyDefaultOne),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional()
}).strict()

export const getDefectTypes200ResponseItem = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')
export const getDefectTypes200Response = zod.array(getDefectTypes200ResponseItem)

export const getDefectTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑ –≤–∫–∞–∑–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É
 */
export const createDefectTypeBody = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const createDefectType200Response = zod.object({
  "id": zod.string().uuid().optional().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä'),
  "code": zod.string().optional().describe('–ö–æ–¥ —Ç–∏–ø—É –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ —Ç–∏–ø—É'),
  "description": zod.string().optional().describe('–û–ø–∏—Å —Ç–∏–ø—É'),
  "riskLevel": zod.enum(['LOW', 'MEDIUM', 'HIGH']).optional().describe('–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: LOW, MEDIUM, HIGH'),
  "active": zod.boolean().optional().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∑–∞–ø–∏—Å')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É')

export const createDefectType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createDefectType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
 */
export const getAllClientsQueryPageDefaultOne = 0;export const getAllClientsQuerySizeDefaultOne = 20;

export const getAllClientsQueryParams = zod.object({
  "page": zod.number().optional().describe('–ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–∑ 0)'),
  "size": zod.number().default(getAllClientsQuerySizeDefaultOne).describe('–†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏')
}).strict()

export const getAllClients200ResponseStructuredAddressCityMinOne = 2;

export const getAllClients200ResponseStructuredAddressCityMaxOne = 100;

export const getAllClients200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getAllClients200ResponseStructuredAddressStreetMinOne = 2;

export const getAllClients200ResponseStructuredAddressStreetMaxOne = 150;

export const getAllClients200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getAllClients200ResponseStructuredAddressBuildingMinOne = 0;

export const getAllClients200ResponseStructuredAddressBuildingMaxOne = 20;

export const getAllClients200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllClients200ResponseStructuredAddressApartmentMinOne = 0;

export const getAllClients200ResponseStructuredAddressApartmentMaxOne = 20;

export const getAllClients200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getAllClients200ResponseStructuredAddressPostalCodeMinOne = 0;

export const getAllClients200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const getAllClients200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getAllClients200ResponseStructuredAddressFullAddressMinOne = 5;

export const getAllClients200ResponseStructuredAddressFullAddressMaxOne = 500;
export const getAllClients200ResponsePreferencesItemKeyMinOne = 0;

export const getAllClients200ResponsePreferencesItemKeyMaxOne = 100;
export const getAllClients200ResponsePreferencesItemValueMinOne = 0;

export const getAllClients200ResponsePreferencesItemValueMaxOne = 255;


export const getAllClients200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getAllClients200ResponseStructuredAddressCityMinOne).max(getAllClients200ResponseStructuredAddressCityMaxOne).regex(getAllClients200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getAllClients200ResponseStructuredAddressStreetMinOne).max(getAllClients200ResponseStructuredAddressStreetMaxOne).regex(getAllClients200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getAllClients200ResponseStructuredAddressBuildingMinOne).max(getAllClients200ResponseStructuredAddressBuildingMaxOne).regex(getAllClients200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getAllClients200ResponseStructuredAddressApartmentMinOne).max(getAllClients200ResponseStructuredAddressApartmentMaxOne).regex(getAllClients200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getAllClients200ResponseStructuredAddressPostalCodeMinOne).max(getAllClients200ResponseStructuredAddressPostalCodeMaxOne).regex(getAllClients200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getAllClients200ResponseStructuredAddressFullAddressMinOne).max(getAllClients200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getAllClients200ResponsePreferencesItemKeyMinOne).max(getAllClients200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(getAllClients200ResponsePreferencesItemValueMinOne).max(getAllClients200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const getAllClients400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllClients409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –Ω–∞–¥–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const createClientBodyLastNameMinOne = 2;

export const createClientBodyLastNameMaxOne = 50;

export const createClientBodyLastNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const createClientBodyFirstNameMinOne = 2;

export const createClientBodyFirstNameMaxOne = 50;

export const createClientBodyFirstNameRegExpOne = new RegExp('^[\\p{L}\\s\\-\']+$');
export const createClientBodyPhoneRegExpOne = new RegExp('^\\+?[0-9]{10,15}$');
export const createClientBodyStructuredAddressCityMinOne = 2;

export const createClientBodyStructuredAddressCityMaxOne = 100;

export const createClientBodyStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createClientBodyStructuredAddressStreetMinOne = 2;

export const createClientBodyStructuredAddressStreetMaxOne = 150;

export const createClientBodyStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createClientBodyStructuredAddressBuildingMinOne = 0;

export const createClientBodyStructuredAddressBuildingMaxOne = 20;

export const createClientBodyStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClientBodyStructuredAddressApartmentMinOne = 0;

export const createClientBodyStructuredAddressApartmentMaxOne = 20;

export const createClientBodyStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClientBodyStructuredAddressPostalCodeMinOne = 0;

export const createClientBodyStructuredAddressPostalCodeMaxOne = 10;

export const createClientBodyStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const createClientBodyStructuredAddressFullAddressMinOne = 5;

export const createClientBodyStructuredAddressFullAddressMaxOne = 500;


export const createClientBody = zod.object({
  "lastName": zod.string().min(createClientBodyLastNameMinOne).max(createClientBodyLastNameMaxOne).regex(createClientBodyLastNameRegExpOne),
  "firstName": zod.string().min(createClientBodyFirstNameMinOne).max(createClientBodyFirstNameMaxOne).regex(createClientBodyFirstNameRegExpOne),
  "phone": zod.string().min(1).regex(createClientBodyPhoneRegExpOne),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createClientBodyStructuredAddressCityMinOne).max(createClientBodyStructuredAddressCityMaxOne).regex(createClientBodyStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(createClientBodyStructuredAddressStreetMinOne).max(createClientBodyStructuredAddressStreetMaxOne).regex(createClientBodyStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(createClientBodyStructuredAddressBuildingMinOne).max(createClientBodyStructuredAddressBuildingMaxOne).regex(createClientBodyStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(createClientBodyStructuredAddressApartmentMinOne).max(createClientBodyStructuredAddressApartmentMaxOne).regex(createClientBodyStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(createClientBodyStructuredAddressPostalCodeMinOne).max(createClientBodyStructuredAddressPostalCodeMaxOne).regex(createClientBodyStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(createClientBodyStructuredAddressFullAddressMinOne).max(createClientBodyStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional()
}).strict().describe('–î–∞–Ω—ñ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞')

export const createClient201ResponseStructuredAddressCityMinOne = 2;

export const createClient201ResponseStructuredAddressCityMaxOne = 100;

export const createClient201ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const createClient201ResponseStructuredAddressStreetMinOne = 2;

export const createClient201ResponseStructuredAddressStreetMaxOne = 150;

export const createClient201ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const createClient201ResponseStructuredAddressBuildingMinOne = 0;

export const createClient201ResponseStructuredAddressBuildingMaxOne = 20;

export const createClient201ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClient201ResponseStructuredAddressApartmentMinOne = 0;

export const createClient201ResponseStructuredAddressApartmentMaxOne = 20;

export const createClient201ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const createClient201ResponseStructuredAddressPostalCodeMinOne = 0;

export const createClient201ResponseStructuredAddressPostalCodeMaxOne = 10;

export const createClient201ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const createClient201ResponseStructuredAddressFullAddressMinOne = 5;

export const createClient201ResponseStructuredAddressFullAddressMaxOne = 500;
export const createClient201ResponsePreferencesItemKeyMinOne = 0;

export const createClient201ResponsePreferencesItemKeyMaxOne = 100;
export const createClient201ResponsePreferencesItemValueMinOne = 0;

export const createClient201ResponsePreferencesItemValueMaxOne = 255;


export const createClient201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(createClient201ResponseStructuredAddressCityMinOne).max(createClient201ResponseStructuredAddressCityMaxOne).regex(createClient201ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(createClient201ResponseStructuredAddressStreetMinOne).max(createClient201ResponseStructuredAddressStreetMaxOne).regex(createClient201ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(createClient201ResponseStructuredAddressBuildingMinOne).max(createClient201ResponseStructuredAddressBuildingMaxOne).regex(createClient201ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(createClient201ResponseStructuredAddressApartmentMinOne).max(createClient201ResponseStructuredAddressApartmentMaxOne).regex(createClient201ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(createClient201ResponseStructuredAddressPostalCodeMinOne).max(createClient201ResponseStructuredAddressPostalCodeMaxOne).regex(createClient201ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(createClient201ResponseStructuredAddressFullAddressMinOne).max(createClient201ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(createClient201ResponsePreferencesItemKeyMinOne).max(createClient201ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(createClient201ResponsePreferencesItemValueMinOne).max(createClient201ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const createClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –∑–∞–ø–∏—Ç–æ–º –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó
 * @summary –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é
 */
export const searchClientsWithPaginationBodyPageMinOne = 0;


export const searchClientsWithPaginationBody = zod.object({
  "query": zod.string().min(1),
  "page": zod.number().min(searchClientsWithPaginationBodyPageMinOne).optional(),
  "size": zod.number().min(1).optional()
}).strict().describe('–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–æ—à—É–∫—É —Ç–∞ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó')

export const searchClientsWithPagination200ResponseContentItemStructuredAddressCityMinOne = 2;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressCityMaxOne = 100;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMinOne = 2;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMaxOne = 150;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMaxOne = 20;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMaxOne = 20;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMaxOne = 10;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMinOne = 5;

export const searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMaxOne = 500;
export const searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMaxOne = 100;
export const searchClientsWithPagination200ResponseContentItemPreferencesItemValueMinOne = 0;

export const searchClientsWithPagination200ResponseContentItemPreferencesItemValueMaxOne = 255;


export const searchClientsWithPagination200Response = zod.object({
  "content": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressCityMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressCityMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressStreetMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeMaxOne).regex(searchClientsWithPagination200ResponseContentItemStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMinOne).max(searchClientsWithPagination200ResponseContentItemStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMinOne).max(searchClientsWithPagination200ResponseContentItemPreferencesItemKeyMaxOne),
  "value": zod.string().min(searchClientsWithPagination200ResponseContentItemPreferencesItemValueMinOne).max(searchClientsWithPagination200ResponseContentItemPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()).optional(),
  "totalElements": zod.number().optional(),
  "totalPages": zod.number().optional(),
  "pageNumber": zod.number().optional(),
  "pageSize": zod.number().optional(),
  "hasPrevious": zod.boolean().optional(),
  "hasNext": zod.boolean().optional()
}).strict()

export const searchClientsWithPagination400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClientsWithPagination409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ø—É–Ω–∫—Ç—ñ–≤ –ø—Ä–∏–π–æ–º—É, —è–∫—â–æ active=true - —Ç—ñ–ª—å–∫–∏ –∞–∫—Ç–∏–≤–Ω—ñ
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—É–Ω–∫—Ç–∏ –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 */
export const getAllBranchLocationsQueryParams = zod.object({
  "active": zod.boolean().optional()
}).strict()

export const getAllBranchLocations200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getAllBranchLocations200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getAllBranchLocations200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getAllBranchLocations400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllBranchLocations409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É
 */
export const createBranchLocationBodyPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const createBranchLocationBodyCodeRegExpOne = new RegExp('^[A-Z0-9]{2,5}$');


export const createBranchLocationBody = zod.object({
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(createBranchLocationBodyPhoneRegExpOne).optional(),
  "code": zod.string().min(1).regex(createBranchLocationBodyCodeRegExpOne),
  "active": zod.boolean().optional()
}).strict()

export const createBranchLocation201ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const createBranchLocation201Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(createBranchLocation201ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const createBranchLocation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const createBranchLocation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î JWT —Ç–æ–∫–µ–Ω
 * @summary –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const registerBodyNameMinOne = 2;

export const registerBodyNameMaxOne = 50;
export const registerBodyUsernameMinOne = 3;

export const registerBodyUsernameMaxOne = 20;

export const registerBodyUsernameRegExpOne = new RegExp('^[a-zA-Z0-9._-]+$');
export const registerBodyPasswordMinOne = 6;

export const registerBodyPasswordMaxOne = 2147483647;


export const registerBody = zod.object({
  "name": zod.string().min(registerBodyNameMinOne).max(registerBodyNameMaxOne),
  "username": zod.string().min(registerBodyUsernameMinOne).max(registerBodyUsernameMaxOne).regex(registerBodyUsernameRegExpOne),
  "email": zod.string().min(1),
  "password": zod.string().min(registerBodyPasswordMinOne).max(registerBodyPasswordMaxOne),
  "role": zod.enum(['ADMIN', 'MANAGER', 'STAFF']).optional(),
  "position": zod.string().optional()
}).strict()

export const register200Response = zod.object({

})

export const register400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î JWT —Ç–æ–∫–µ–Ω –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é refresh —Ç–æ–∫–µ–Ω–∞
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
 */
export const refreshTokenBody = zod.string()

export const refreshToken200Response = zod.object({

})

export const refreshToken400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î JWT —Ç–æ–∫–µ–Ω
 * @summary –í—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const loginBody = zod.object({
  "username": zod.string().min(1),
  "password": zod.string().min(1)
}).strict()

export const login200Response = zod.object({

})

export const login400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è Stage4
 */
export const validateCompleteParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateComplete200Response = zod.object({

})

export const validateComplete400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateComplete401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateComplete403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateComplete404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateComplete409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É —Å–µ—Å—ñ—ó
 */
export const getSessionContextParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getSessionContext200Response = zod.object({

})

export const getSessionContext400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É Stage4
 */
export const getCurrentStateParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getCurrentState200Response = zod.object({

})

export const getCurrentState400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—ñ–¥—Å—É–º–∫—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderSummaryParams = zod.object({
  "orderId": zod.string().uuid()
}).strict()

export const getOrderSummary200Response = zod.object({

})

export const getOrderSummary400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderSummary401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderSummary403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderSummary404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderSummary409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É–≤–∞—Ç–∏ –≤—Å—ñ –ø—ñ–¥–µ—Ç–∞–ø–∏
 */
export const validateAllSubstepsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateAllSubsteps200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const validateAllSubsteps400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAllSubsteps401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAllSubsteps403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAllSubsteps404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateAllSubsteps409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞–Ω —Å–µ—Å—ñ—ó
 */
export const getSessionStateParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getSessionState200Response = zod.enum(['STAGE3_INIT', 'EXECUTION_PARAMS_INIT', 'DATE_SELECTION', 'URGENCY_SELECTION', 'EXECUTION_PARAMS_COMPLETED', 'DISCOUNT_CONFIG_INIT', 'DISCOUNT_TYPE_SELECTION', 'DISCOUNT_VALIDATION', 'DISCOUNT_CONFIG_COMPLETED', 'PAYMENT_CONFIG_INIT', 'PAYMENT_METHOD_SELECTION', 'PAYMENT_AMOUNT_CALCULATION', 'PAYMENT_CONFIG_COMPLETED', 'ADDITIONAL_INFO_INIT', 'NOTES_INPUT', 'REQUIREMENTS_INPUT', 'ADDITIONAL_INFO_COMPLETED', 'STAGE3_COMPLETED', 'STAGE3_ERROR'])

export const getSessionState400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionState401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionState403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionState404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionState409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å Stage3
 */
export const isStage3ReadyParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const isStage3Ready200Response = zod.boolean()

export const isStage3Ready400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isStage3Ready401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isStage3Ready403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isStage3Ready404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isStage3Ready409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥—Ä–µ—Å —Å–µ—Å—ñ—ó
 */
export const getSessionProgressParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getSessionProgress200Response = zod.number()

export const getSessionProgress400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionProgress401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionProgress403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionProgress404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionProgress409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –æ–ø–ª–∞—Ç–∏
 */
export const isPaymentConfigReadyParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const isPaymentConfigReady200Response = zod.boolean()

export const isPaymentConfigReady400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isPaymentConfigReady401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isPaymentConfigReady403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isPaymentConfigReady404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isPaymentConfigReady409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø—ñ–¥–µ—Ç–∞–ø
 */
export const getNextSubstepParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getNextSubstep200Response = zod.enum(['STAGE3_INIT', 'EXECUTION_PARAMS_INIT', 'DATE_SELECTION', 'URGENCY_SELECTION', 'EXECUTION_PARAMS_COMPLETED', 'DISCOUNT_CONFIG_INIT', 'DISCOUNT_TYPE_SELECTION', 'DISCOUNT_VALIDATION', 'DISCOUNT_CONFIG_COMPLETED', 'PAYMENT_CONFIG_INIT', 'PAYMENT_METHOD_SELECTION', 'PAYMENT_AMOUNT_CALCULATION', 'PAYMENT_CONFIG_COMPLETED', 'ADDITIONAL_INFO_INIT', 'NOTES_INPUT', 'REQUIREMENTS_INPUT', 'ADDITIONAL_INFO_COMPLETED', 'STAGE3_COMPLETED', 'STAGE3_ERROR'])

export const getNextSubstep400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNextSubstep401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNextSubstep403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNextSubstep404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNextSubstep409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
 */
export const isExecutionParamsReadyParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const isExecutionParamsReady200Response = zod.boolean()

export const isExecutionParamsReady400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isExecutionParamsReady401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isExecutionParamsReady403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isExecutionParamsReady404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isExecutionParamsReady409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑–Ω–∏–∂–æ–∫
 */
export const isDiscountConfigReadyParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const isDiscountConfigReady200Response = zod.boolean()

export const isDiscountConfigReady400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isDiscountConfigReady401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isDiscountConfigReady403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isDiscountConfigReady404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isDiscountConfigReady409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–µ—Å—ñ—ó
 */
export const getSessionContext1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMin = 0;

export const getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMax = 100;
export const getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMin = 0;

export const getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMax = 255;
export const getSessionContext1200ResponsePaymentConfigurationPaymentRequestPrepaymentAmountMin = 0;
export const getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMin = 0;

export const getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMax = 1000;
export const getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMin = 0;

export const getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMax = 1000;


export const getSessionContext1200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['STAGE3_INIT', 'EXECUTION_PARAMS_INIT', 'DATE_SELECTION', 'URGENCY_SELECTION', 'EXECUTION_PARAMS_COMPLETED', 'DISCOUNT_CONFIG_INIT', 'DISCOUNT_TYPE_SELECTION', 'DISCOUNT_VALIDATION', 'DISCOUNT_CONFIG_COMPLETED', 'PAYMENT_CONFIG_INIT', 'PAYMENT_METHOD_SELECTION', 'PAYMENT_AMOUNT_CALCULATION', 'PAYMENT_CONFIG_COMPLETED', 'ADDITIONAL_INFO_INIT', 'NOTES_INPUT', 'REQUIREMENTS_INPUT', 'ADDITIONAL_INFO_COMPLETED', 'STAGE3_COMPLETED', 'STAGE3_ERROR']).optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "executionParams": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "serviceCategoryIds": zod.array(zod.string().uuid()).optional(),
  "completionDateRequest": zod.object({
  "serviceCategoryIds": zod.array(zod.string().uuid()).min(1),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H'])
}).strict().optional(),
  "completionDateResponse": zod.object({
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "standardProcessingHours": zod.number().optional(),
  "expeditedProcessingHours": zod.number().optional()
}).strict().optional(),
  "manualExecutionDate": zod.string().date().optional(),
  "useManualDate": zod.boolean().optional(),
  "needsRecalculation": zod.boolean().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "readyForCompletion": zod.boolean().optional(),
  "executionParamsComplete": zod.boolean().optional(),
  "effectiveExecutionDate": zod.string().datetime({}).optional()
}).strict().optional(),
  "discountConfiguration": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "discountRequest": zod.object({
  "orderId": zod.string().uuid(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']),
  "discountPercentage": zod.number().min(getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMin).max(getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountPercentageMax).optional(),
  "discountDescription": zod.string().min(getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMin).max(getSessionContext1200ResponseDiscountConfigurationDiscountRequestDiscountDescriptionMax).optional()
}).strict().optional(),
  "discountResponse": zod.object({
  "orderId": zod.string().uuid().optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.number().optional(),
  "discountDescription": zod.string().optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "nonDiscountableCategories": zod.array(zod.string()).optional(),
  "nonDiscountableAmount": zod.number().optional()
}).strict().optional(),
  "excludedCategoryIds": zod.array(zod.string().uuid()).optional(),
  "originalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "isValid": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "discountType": zod.enum(['NO_DISCOUNT', 'EVERCARD', 'SOCIAL_MEDIA', 'MILITARY', 'CUSTOM']).optional(),
  "discountPercentage": zod.number().optional(),
  "discountDescription": zod.string().optional(),
  "readyForCompletion": zod.boolean().optional(),
  "discountConfigComplete": zod.boolean().optional()
}).strict().optional(),
  "paymentConfiguration": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "paymentRequest": zod.object({
  "orderId": zod.string().uuid(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']),
  "prepaymentAmount": zod.number().min(getSessionContext1200ResponsePaymentConfigurationPaymentRequestPrepaymentAmountMin).optional()
}).strict().optional(),
  "paymentResponse": zod.object({
  "orderId": zod.string().uuid().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional()
}).strict().optional(),
  "totalAmount": zod.number().optional(),
  "paidAmount": zod.number().optional(),
  "remainingAmount": zod.number().optional(),
  "isValid": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "fullyPaid": zod.boolean().optional(),
  "prepaymentAmount": zod.number().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional(),
  "readyForCompletion": zod.boolean().optional(),
  "paymentConfigComplete": zod.boolean().optional()
}).strict().optional(),
  "additionalInfo": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "additionalInfoRequest": zod.object({
  "orderId": zod.string().uuid(),
  "additionalRequirements": zod.string().min(getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMin).max(getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestAdditionalRequirementsMax).optional(),
  "customerNotes": zod.string().min(getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMin).max(getSessionContext1200ResponseAdditionalInfoAdditionalInfoRequestCustomerNotesMax).optional()
}).strict().optional(),
  "additionalInfoResponse": zod.object({
  "orderId": zod.string().uuid().optional(),
  "additionalRequirements": zod.string().optional(),
  "customerNotes": zod.string().optional()
}).strict().optional(),
  "hasAdditionalRequirements": zod.boolean().optional(),
  "hasCustomerNotes": zod.boolean().optional(),
  "isValid": zod.boolean().optional(),
  "validationMessage": zod.string().optional(),
  "lastUpdated": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().optional(),
  "additionalRequirements": zod.string().optional(),
  "readyForCompletion": zod.boolean().optional(),
  "additionalInfoComplete": zod.boolean().optional()
}).strict().optional(),
  "lastAction": zod.string().optional(),
  "lastError": zod.string().optional(),
  "valid": zod.boolean().optional(),
  "completedSubstepsCount": zod.number().optional()
}).strict()

export const getSessionContext1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSessionContext1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const isAdditionalInfoReadyParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const isAdditionalInfoReady200Response = zod.boolean()

export const isAdditionalInfoReady400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isAdditionalInfoReady401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isAdditionalInfoReady403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isAdditionalInfoReady404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isAdditionalInfoReady409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
export const validateCurrentStateParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateCurrentState200Response = zod.object({
  "valid": zod.boolean().optional(),
  "errors": zod.array(zod.string()).optional(),
  "warnings": zod.array(zod.string()).optional(),
  "message": zod.string().optional(),
  "firstError": zod.string().optional(),
  "errorCount": zod.number().optional(),
  "firstWarning": zod.string().optional(),
  "warningCount": zod.number().optional(),
  "fullMessage": zod.string().optional()
}).strict()

export const validateCurrentState400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const getDocumentationStatusParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getDocumentationStatus200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const getDocumentationStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const getDocumentationDataParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getDocumentationData200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict()

export const getDocumentationData400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationData401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationData403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationData404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDocumentationData409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const validateCurrentState1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateCurrentState1200Response = zod.boolean()

export const validateCurrentState1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateCurrentState1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ—Ç–∞–ª—å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
 */
export const validateDetailedParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const validateDetailed200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const validateDetailed400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateDetailed401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateDetailed403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateDetailed404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const validateDetailed409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É –ø—ñ–¥–µ—Ç–∞–ø—É
 */
export const getCurrentState1Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getCurrentState1200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const getCurrentState1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Å–µ—Å—ñ—ó
 */
export const sessionExistsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const sessionExists200Response = zod.boolean()

export const sessionExists400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sessionExists401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sessionExists403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sessionExists404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const sessionExists409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableModifiersQueryParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getAvailableModifiers200ResponseItem = zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
export const getAvailableModifiers200Response = zod.array(getAvailableModifiers200ResponseItem)

export const getAvailableModifiers400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiers401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiers403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiers404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiers409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
 */
export const getRecommendedModifiersQueryParams = zod.object({
  "categoryCode": zod.string(),
  "itemName": zod.string()
}).strict()

export const getRecommendedModifiers200ResponseItem = zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
export const getRecommendedModifiers200Response = zod.array(getRecommendedModifiers200ResponseItem)

export const getRecommendedModifiers400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –ø–æ–¥—ñ–π –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
 */
export const getAvailableEventsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getAvailableEvents200ResponseItem = zod.enum(['INITIALIZE', 'CALCULATE_BASE_PRICE', 'SELECT_MODIFIERS', 'ADD_MODIFIER', 'REMOVE_MODIFIER', 'CALCULATE_FINAL_PRICE', 'CONFIRM_CALCULATION', 'RESET_CALCULATION', 'HANDLE_ERROR'])
export const getAvailableEvents200Response = zod.array(getAvailableEvents200ResponseItem)

export const getAvailableEvents400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableEvents401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableEvents403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableEvents404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableEvents409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Å–µ—Å—ñ—ó
 */
export const getCurrentDataParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getCurrentData200ResponseCalculationRequestCategoryCodeRegExp = new RegExp('^[A-Z_]+$');
export const getCurrentData200ResponseCalculationRequestItemNameMin = 0;

export const getCurrentData200ResponseCalculationRequestItemNameMax = 255;
export const getCurrentData200ResponseCalculationRequestColorMax = 100;
export const getCurrentData200ResponseCalculationRequestQuantityMax = 1000;
export const getCurrentData200ResponseCalculationRequestModifierIdsMin = 0;

export const getCurrentData200ResponseCalculationRequestModifierIdsMax = 20;
export const getCurrentData200ResponseCalculationRequestRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const getCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMin = 0;

export const getCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMax = 200;
export const getCurrentData200ResponseCalculationRequestRangeModifierValuesMin = 0;

export const getCurrentData200ResponseCalculationRequestRangeModifierValuesMax = 10;
export const getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemQuantityMax = 100;
export const getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMin = 0;

export const getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMax = 10;
export const getCurrentData200ResponseCalculationRequestExpeditePercentMin = 0;

export const getCurrentData200ResponseCalculationRequestExpeditePercentMax = 200;
export const getCurrentData200ResponseCalculationRequestDiscountPercentMin = 0;

export const getCurrentData200ResponseCalculationRequestDiscountPercentMax = 50;
export const getCurrentData200ResponseCalculationResponseBaseUnitPriceMin = 0;
export const getCurrentData200ResponseCalculationResponseBaseTotalPriceMin = 0;
export const getCurrentData200ResponseCalculationResponseFinalUnitPriceMin = 0;
export const getCurrentData200ResponseCalculationResponseFinalTotalPriceMin = 0;
export const getCurrentData200ResponseRangeModifierValuesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const getCurrentData200ResponseRangeModifierValuesItemPercentageMin = 0;

export const getCurrentData200ResponseRangeModifierValuesItemPercentageMax = 200;
export const getCurrentData200ResponseFixedModifierQuantitiesItemModifierIdRegExp = new RegExp('^MOD_[A-Z_]+$');
export const getCurrentData200ResponseFixedModifierQuantitiesItemQuantityMax = 100;


export const getCurrentData200Response = zod.object({
  "calculationRequest": zod.object({
  "categoryCode": zod.string().min(1).regex(getCurrentData200ResponseCalculationRequestCategoryCodeRegExp).describe('–ö–æ–¥ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥–∏'),
  "itemName": zod.string().min(getCurrentData200ResponseCalculationRequestItemNameMin).max(getCurrentData200ResponseCalculationRequestItemNameMax).describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "color": zod.string().max(getCurrentData200ResponseCalculationRequestColorMax).optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç—É'),
  "quantity": zod.number().min(1).max(getCurrentData200ResponseCalculationRequestQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "modifierCodes": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –∫–æ–¥—ñ–≤ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "modifierIds": zod.array(zod.string()).min(getCurrentData200ResponseCalculationRequestModifierIdsMin).max(getCurrentData200ResponseCalculationRequestModifierIdsMax).optional().describe('–°–ø–∏—Å–æ–∫ ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è'),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(getCurrentData200ResponseCalculationRequestRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.number().min(getCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMin).max(getCurrentData200ResponseCalculationRequestRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).min(getCurrentData200ResponseCalculationRequestRangeModifierValuesMin).max(getCurrentData200ResponseCalculationRequestRangeModifierValuesMax).optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—É'),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.number().min(1).max(getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).min(getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMin).max(getCurrentData200ResponseCalculationRequestFixedModifierQuantitiesMax).optional().describe('–ö—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é'),
  "expedited": zod.boolean().optional().describe('–ß–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "expeditePercent": zod.number().min(getCurrentData200ResponseCalculationRequestExpeditePercentMin).max(getCurrentData200ResponseCalculationRequestExpeditePercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "discountPercent": zod.number().min(getCurrentData200ResponseCalculationRequestDiscountPercentMin).max(getCurrentData200ResponseCalculationRequestDiscountPercentMax).optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().optional().describe('–ó–∞–ø–∏—Ç –Ω–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç—É –∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞–º–∏'),
  "calculationResponse": zod.object({
  "baseUnitPrice": zod.number().min(getCurrentData200ResponseCalculationResponseBaseUnitPriceMin).optional().describe('–ü–æ—á–∞—Ç–∫–æ–≤–∞ –±–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞'),
  "quantity": zod.number().min(1).optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ñ–≤'),
  "baseTotalPrice": zod.number().min(getCurrentData200ResponseCalculationResponseBaseTotalPriceMin).optional().describe('–°—É–º–∞ –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –±–µ–∑ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "unitOfMeasure": zod.enum(['—à—Ç', '–∫–≥', '–∫–≤.–º', '–ø–∞—Ä–∞']).optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "finalUnitPrice": zod.number().min(getCurrentData200ResponseCalculationResponseFinalUnitPriceMin).optional().describe('–ö—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –æ–¥–∏–Ω–∏—Ü—é –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "finalTotalPrice": zod.number().min(getCurrentData200ResponseCalculationResponseFinalTotalPriceMin).optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–Ω—Ü–µ–≤–∞ —Ü—ñ–Ω–∞ –∑–∞ –≤—Å—ñ –ø—Ä–µ–¥–º–µ—Ç–∏ –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤'),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional().describe('–°–ø–∏—Å–æ–∫ –¥–µ—Ç–∞–ª–µ–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫—Ä–æ–∫—É –æ–±—á–∏—Å–ª–µ–Ω–Ω—è')
}).strict().optional().describe('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "selectedModifierIds": zod.array(zod.string()).optional(),
  "rangeModifierValues": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(getCurrentData200ResponseRangeModifierValuesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "percentage": zod.number().min(getCurrentData200ResponseRangeModifierValuesItemPercentageMin).max(getCurrentData200ResponseRangeModifierValuesItemPercentageMax).describe('–í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥—Å–æ—Ç–æ–∫ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥—Å–æ—Ç–∫–∞ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω—É')).optional(),
  "fixedModifierQuantities": zod.array(zod.object({
  "modifierId": zod.string().min(1).regex(getCurrentData200ResponseFixedModifierQuantitiesItemModifierIdRegExp).describe('ID –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "quantity": zod.number().min(1).max(getCurrentData200ResponseFixedModifierQuantitiesItemQuantityMax).describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ—é —Ü—ñ–Ω–æ—é')).optional(),
  "calculationNotes": zod.string().optional(),
  "calculationCompleted": zod.boolean().optional(),
  "hasCalculationErrors": zod.boolean().optional(),
  "errorMessage": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "finalPrice": zod.number().optional(),
  "calculationDetails": zod.array(zod.object({
  "step": zod.number().optional(),
  "stepName": zod.string().optional(),
  "description": zod.string().optional(),
  "modifierCode": zod.string().optional(),
  "modifierName": zod.string().optional(),
  "modifierValue": zod.string().optional(),
  "priceBefore": zod.number().optional(),
  "priceAfter": zod.number().optional(),
  "priceDifference": zod.number().optional()
}).strict()).optional(),
  "modifiersCount": zod.number().optional()
}).strict()

export const getCurrentData400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentData401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentData403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentData404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentData409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º
 */
export const getAvailableStainTypes200ResponseItem = zod.string()
export const getAvailableStainTypes200Response = zod.array(getAvailableStainTypes200ResponseItem)

export const getAvailableStainTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableStainTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableStainTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableStainTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableStainTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getAvailableDefectTypes200ResponseItem = zod.string()
export const getAvailableDefectTypes200Response = zod.array(getAvailableDefectTypes200ResponseItem)

export const getAvailableDefectTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableDefectTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableDefectTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableDefectTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableDefectTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
 */
export const getContextParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getContext200ResponseDataCurrentItemDescriptionMin = 0;

export const getContext200ResponseDataCurrentItemDescriptionMax = 1000;
export const getContext200ResponseDataCurrentItemSpecialInstructionsMin = 0;

export const getContext200ResponseDataCurrentItemSpecialInstructionsMax = 500;
export const getContext200ResponseDataCurrentItemDefectsNotesMin = 0;

export const getContext200ResponseDataCurrentItemDefectsNotesMax = 1000;


export const getContext200Response = zod.object({
  "currentState": zod.enum(['NOT_STARTED', 'SELECTING_STAINS', 'SELECTING_DEFECTS', 'ENTERING_NOTES', 'VALIDATING_DATA', 'COMPLETED', 'ERROR']).optional(),
  "data": zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(getContext200ResponseDataCurrentItemDescriptionMin).max(getContext200ResponseDataCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getContext200ResponseDataCurrentItemSpecialInstructionsMin).max(getContext200ResponseDataCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getContext200ResponseDataCurrentItemDefectsNotesMin).max(getContext200ResponseDataCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "stainsSelectionCompleted": zod.boolean().optional(),
  "defectsSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional(),
  "noGuaranteeReasonRequired": zod.boolean().optional(),
  "noGuarantee": zod.boolean().optional()
}).strict().optional(),
  "errorMessage": zod.string().optional()
}).strict()

export const getContext400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getContext401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getContext403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getContext404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getContext409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤
 */
export const getAvailableMaterialsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getAvailableMaterials200ResponseItem = zod.string()
export const getAvailableMaterials200Response = zod.array(getAvailableMaterials200ResponseItem)

export const getAvailableMaterials400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableMaterials401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableMaterials403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableMaterials404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableMaterials409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 2
 */
export const getCurrentCharacteristicsParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getCurrentCharacteristics200ResponseCurrentItemDescriptionMin = 0;

export const getCurrentCharacteristics200ResponseCurrentItemDescriptionMax = 1000;
export const getCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMin = 0;

export const getCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMax = 500;
export const getCurrentCharacteristics200ResponseCurrentItemDefectsNotesMin = 0;

export const getCurrentCharacteristics200ResponseCurrentItemDefectsNotesMax = 1000;


export const getCurrentCharacteristics200Response = zod.object({
  "currentItem": zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "description": zod.string().min(getCurrentCharacteristics200ResponseCurrentItemDescriptionMin).max(getCurrentCharacteristics200ResponseCurrentItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMin).max(getCurrentCharacteristics200ResponseCurrentItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getCurrentCharacteristics200ResponseCurrentItemDefectsNotesMin).max(getCurrentCharacteristics200ResponseCurrentItemDefectsNotesMax).optional()
}).strict().optional(),
  "materialSelectionCompleted": zod.boolean().optional(),
  "colorSelectionCompleted": zod.boolean().optional(),
  "fillerSelectionCompleted": zod.boolean().optional(),
  "wearDegreeSelectionCompleted": zod.boolean().optional(),
  "dataValid": zod.boolean().optional()
}).strict()

export const getCurrentCharacteristics400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentCharacteristics401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentCharacteristics403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentCharacteristics404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentCharacteristics409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø—ñ–¥–µ—Ç–∞–ø—É 1
 */
export const getSubstep1StatusParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getSubstep1Status200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const getSubstep1Status400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSubstep1Status401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSubstep1Status403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSubstep1Status404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSubstep1Status409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥
 */
export const getServiceCategories200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "sortOrder": zod.number().optional(),
  "active": zod.boolean().optional(),
  "standardProcessingDays": zod.number().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()).optional()
}).strict()
export const getServiceCategories200Response = zod.array(getServiceCategories200ResponseItem)

export const getServiceCategories400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getServiceCategories401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getServiceCategories403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getServiceCategories404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getServiceCategories409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getItemsForCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getItemsForCategory200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "categoryId": zod.string().uuid().optional(),
  "catalogNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "basePrice": zod.number().optional(),
  "priceBlack": zod.number().optional(),
  "priceColor": zod.number().optional(),
  "active": zod.boolean().optional()
}).strict()
export const getItemsForCategory200Response = zod.array(getItemsForCategory200ResponseItem)

export const getItemsForCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsForCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsForCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsForCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsForCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Å–µ—Å—ñ—ó
 */
export const getCurrentState2Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getCurrentState2200Response = zod.enum(['NOT_STARTED', 'INITIALIZING', 'ITEMS_MANAGER_SCREEN', 'ITEM_WIZARD_ACTIVE', 'READY_TO_PROCEED', 'COMPLETED', 'ERROR'])

export const getCurrentState2400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState2401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState2403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState2404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentState2409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö —Å–µ—Å—ñ–π
 */
export const getActiveSessionCount200Response = zod.number()

export const getActiveSessionCount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveSessionCount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveSessionCount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveSessionCount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveSessionCount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä—è—î –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –µ—Ç–∞–ø
 */
export const checkReadinessToProceedParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const checkReadinessToProceed200Response = zod.boolean()

export const checkReadinessToProceed400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const checkReadinessToProceed401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const checkReadinessToProceed403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const checkReadinessToProceed404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const checkReadinessToProceed409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getCurrentManagerParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const getCurrentManager200ResponseAddedItemsItemNameMin = 0;

export const getCurrentManager200ResponseAddedItemsItemNameMax = 255;
export const getCurrentManager200ResponseAddedItemsItemDescriptionMin = 0;

export const getCurrentManager200ResponseAddedItemsItemDescriptionMax = 1000;
export const getCurrentManager200ResponseAddedItemsItemSpecialInstructionsMin = 0;

export const getCurrentManager200ResponseAddedItemsItemSpecialInstructionsMax = 500;
export const getCurrentManager200ResponseAddedItemsItemDefectsNotesMin = 0;

export const getCurrentManager200ResponseAddedItemsItemDefectsNotesMax = 1000;


export const getCurrentManager200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "addedItems": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getCurrentManager200ResponseAddedItemsItemNameMin).max(getCurrentManager200ResponseAddedItemsItemNameMax),
  "description": zod.string().min(getCurrentManager200ResponseAddedItemsItemDescriptionMin).max(getCurrentManager200ResponseAddedItemsItemDescriptionMax).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getCurrentManager200ResponseAddedItemsItemSpecialInstructionsMin).max(getCurrentManager200ResponseAddedItemsItemSpecialInstructionsMax).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getCurrentManager200ResponseAddedItemsItemDefectsNotesMin).max(getCurrentManager200ResponseAddedItemsItemDefectsNotesMax).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "itemCount": zod.number().optional(),
  "canProceedToNextStage": zod.boolean().optional(),
  "activeWizardId": zod.string().uuid().optional(),
  "editingItemId": zod.string().uuid().optional(),
  "currentStatus": zod.string().optional(),
  "wizardActive": zod.boolean().optional(),
  "editMode": zod.boolean().optional()
}).strict()

export const getCurrentManager400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentManager401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentManager403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentManager404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCurrentManager409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω —Ñ–æ—Ä–º–∏
 */
export const getNewClientFormStateParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const getNewClientFormState200Response = zod.enum(['INIT', 'FILLING_BASIC_INFO', 'FILLING_CONTACT_INFO', 'VALIDATING', 'CHECKING_DUPLICATES', 'DUPLICATES_FOUND', 'SAVING', 'COMPLETED', 'ERROR', 'CANCELLED'])

export const getNewClientFormState400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNewClientFormState401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNewClientFormState403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNewClientFormState404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getNewClientFormState409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –ø–æ—à—É–∫—É
 */
export const getClientSearchStateParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const getClientSearchState200Response = zod.enum(['INIT', 'READY_TO_SEARCH', 'SEARCHING', 'RESULTS_FOUND', 'RESULTS_DISPLAYED', 'NO_RESULTS', 'CLIENT_SELECTED', 'CREATE_NEW_CLIENT_MODE', 'COMPLETED', 'SEARCH_ERROR', 'CANCELLED'])

export const getClientSearchState400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientSearchState401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientSearchState403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientSearchState404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getClientSearchState409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –æ–±—Ä–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const getSelectedClientParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const getSelectedClient200ResponseStructuredAddressCityMin = 2;

export const getSelectedClient200ResponseStructuredAddressCityMax = 100;

export const getSelectedClient200ResponseStructuredAddressCityRegExp = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getSelectedClient200ResponseStructuredAddressStreetMin = 2;

export const getSelectedClient200ResponseStructuredAddressStreetMax = 150;

export const getSelectedClient200ResponseStructuredAddressStreetRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getSelectedClient200ResponseStructuredAddressBuildingMin = 0;

export const getSelectedClient200ResponseStructuredAddressBuildingMax = 20;

export const getSelectedClient200ResponseStructuredAddressBuildingRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getSelectedClient200ResponseStructuredAddressApartmentMin = 0;

export const getSelectedClient200ResponseStructuredAddressApartmentMax = 20;

export const getSelectedClient200ResponseStructuredAddressApartmentRegExp = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getSelectedClient200ResponseStructuredAddressPostalCodeMin = 0;

export const getSelectedClient200ResponseStructuredAddressPostalCodeMax = 10;

export const getSelectedClient200ResponseStructuredAddressPostalCodeRegExp = new RegExp('^[0-9\\-]+$');
export const getSelectedClient200ResponseStructuredAddressFullAddressMin = 5;

export const getSelectedClient200ResponseStructuredAddressFullAddressMax = 500;
export const getSelectedClient200ResponsePreferencesItemKeyMin = 0;

export const getSelectedClient200ResponsePreferencesItemKeyMax = 100;
export const getSelectedClient200ResponsePreferencesItemValueMin = 0;

export const getSelectedClient200ResponsePreferencesItemValueMax = 255;


export const getSelectedClient200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getSelectedClient200ResponseStructuredAddressCityMin).max(getSelectedClient200ResponseStructuredAddressCityMax).regex(getSelectedClient200ResponseStructuredAddressCityRegExp).optional(),
  "street": zod.string().min(getSelectedClient200ResponseStructuredAddressStreetMin).max(getSelectedClient200ResponseStructuredAddressStreetMax).regex(getSelectedClient200ResponseStructuredAddressStreetRegExp).optional(),
  "building": zod.string().min(getSelectedClient200ResponseStructuredAddressBuildingMin).max(getSelectedClient200ResponseStructuredAddressBuildingMax).regex(getSelectedClient200ResponseStructuredAddressBuildingRegExp).optional(),
  "apartment": zod.string().min(getSelectedClient200ResponseStructuredAddressApartmentMin).max(getSelectedClient200ResponseStructuredAddressApartmentMax).regex(getSelectedClient200ResponseStructuredAddressApartmentRegExp).optional(),
  "postalCode": zod.string().min(getSelectedClient200ResponseStructuredAddressPostalCodeMin).max(getSelectedClient200ResponseStructuredAddressPostalCodeMax).regex(getSelectedClient200ResponseStructuredAddressPostalCodeRegExp).optional(),
  "fullAddress": zod.string().min(getSelectedClient200ResponseStructuredAddressFullAddressMin).max(getSelectedClient200ResponseStructuredAddressFullAddressMax).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getSelectedClient200ResponsePreferencesItemKeyMin).max(getSelectedClient200ResponsePreferencesItemKeyMax),
  "value": zod.string().min(getSelectedClient200ResponsePreferencesItemValueMin).max(getSelectedClient200ResponsePreferencesItemValueMax).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const getSelectedClient400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSelectedClient401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSelectedClient403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSelectedClient404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSelectedClient409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º—É—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const getBasicOrderInfoStateParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const getBasicOrderInfoState200Response = zod.enum(['INIT', 'GENERATING_RECEIPT_NUMBER', 'RECEIPT_NUMBER_GENERATED', 'ENTERING_UNIQUE_TAG', 'UNIQUE_TAG_ENTERED', 'SELECTING_BRANCH', 'BRANCH_SELECTED', 'SETTING_CREATION_DATE', 'CREATION_DATE_SET', 'COMPLETED', 'ERROR'])

export const getBasicOrderInfoState400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasicOrderInfoState401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasicOrderInfoState403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasicOrderInfoState404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasicOrderInfoState409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—É –æ–¥–∏–Ω–∏—Ü—é –≤–∏–º—ñ—Ä—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const getRecommendedUnitOfMeasureQueryParams = zod.object({
  "categoryId": zod.string().uuid(),
  "itemName": zod.string()
}).strict()

export const getRecommendedUnitOfMeasure200Response = zod.string()

export const getRecommendedUnitOfMeasure400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedUnitOfMeasure409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞
 */
export const isUnitSupportedForItemQueryParams = zod.object({
  "categoryId": zod.string().uuid(),
  "itemName": zod.string(),
  "unitOfMeasure": zod.string()
}).strict()

export const isUnitSupportedForItem200Response = zod.boolean()

export const isUnitSupportedForItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const isUnitSupportedForItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableUnitsForCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getAvailableUnitsForCategory200ResponseItem = zod.string()
export const getAvailableUnitsForCategory200Response = zod.array(getAvailableUnitsForCategory200ResponseItem)

export const getAvailableUnitsForCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsForCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–µ—Å—Ç–æ–≤–µ –ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è
 * @summary –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç
 */
export const hello200Response = zod.object({
  "message": zod.string().optional()
}).strict()

export const hello400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const hello409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –ø–ª—è–º–∏ –∑–∞ –∫–æ–¥–æ–º
 */
export const getStainTypeByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getStainTypeByCode200Response = zod.object({

})

export const getStainTypeByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypeByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞ –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å –∑–∞ ID
 */
export const getSignatureByIdParams = zod.object({
  "id": zod.string().uuid().describe('ID –ø—ñ–¥–ø–∏—Å—É')
}).strict()

export const getSignatureById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getSignatureById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –≤—Å—ñ –ø—ñ–¥–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—ñ–¥–ø–∏—Å–∏ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getSignaturesByOrderIdParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getSignaturesByOrderId200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()
export const getSignaturesByOrderId200Response = zod.array(getSignaturesByOrderId200ResponseItem)

export const getSignaturesByOrderId400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignaturesByOrderId409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—ñ–¥–ø–∏—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø—É –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å –∑–∞ —Ç–∏–ø–æ–º –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getSignatureByOrderIdAndTypeParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "signatureType": zod.string().describe('–¢–∏–ø –ø—ñ–¥–ø–∏—Å—É')
}).strict()

export const getSignatureByOrderIdAndType200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "signatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "signatureType": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getSignatureByOrderIdAndType400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSignatureByOrderIdAndType409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∞–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –ø–æ—Å–ª—É–≥
 */
export const getAllActiveCategories200Response = zod.object({

})

export const getAllActiveCategories400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllActiveCategories409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ ID
 */
export const getCategoryByIdParams = zod.object({
  "id": zod.string().uuid()
}).strict()

export const getCategoryById200Response = zod.object({

})

export const getCategoryById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ –∫–æ–¥–æ–º
 */
export const getCategoryByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getCategoryByCode200Response = zod.object({

})

export const getCategoryByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞ ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const getReceiptDataParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getReceiptData200Response = zod.object({
  "orderId": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "tagNumber": zod.string().optional(),
  "createdDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "branchInfo": zod.object({
  "branchName": zod.string().optional(),
  "address": zod.string().optional(),
  "phone": zod.string().optional(),
  "operatorName": zod.string().optional()
}).strict().optional(),
  "clientInfo": zod.object({
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "communicationChannels": zod.array(zod.string()).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderNumber": zod.number().optional(),
  "name": zod.string().optional(),
  "serviceCategory": zod.string().optional(),
  "quantity": zod.number().optional(),
  "unitOfMeasure": zod.string().optional(),
  "material": zod.string().optional(),
  "color": zod.string().optional(),
  "filler": zod.string().optional(),
  "wearPercentage": zod.number().optional(),
  "basePrice": zod.number().optional(),
  "finalPrice": zod.number().optional(),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional(),
  "description": zod.string().optional(),
  "percentageValue": zod.number().optional(),
  "fixedValue": zod.number().optional(),
  "impact": zod.number().optional()
}).strict()).optional(),
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "notes": zod.string().optional()
}).strict()).optional(),
  "financialInfo": zod.object({
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "discountType": zod.string().optional(),
  "expediteSurcharge": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional()
}).strict().optional(),
  "legalTerms": zod.string().optional(),
  "customerSignatureData": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "additionalNotes": zod.string().optional(),
  "paymentMethod": zod.enum(['TERMINAL', 'CASH', 'BANK_TRANSFER']).optional()
}).strict()

export const getReceiptData400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getReceiptData409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —è–∫ —Ñ–∞–π–ª
 * @summary –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF-–∫–≤–∏—Ç–∞–Ω—Ü—ñ—é
 */
export const downloadPdfReceiptParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const downloadPdfReceipt200Response = zod.object({

})

export const downloadPdfReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const downloadPdfReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ì–µ–Ω–µ—Ä—É—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –Ω–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 */
export const generateReceiptNumber1QueryParams = zod.object({
  "branchLocationId": zod.string().uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó/–ø—É–Ω–∫—Ç—É –ø—Ä–∏–π–æ–º—É')
}).strict()

export const generateReceiptNumber1200Response = zod.object({

})

export const generateReceiptNumber1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const generateReceiptNumber1500Response = zod.object({

})


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 */
export const getModifiersForServiceCategoryParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getModifiersForServiceCategory200Response = zod.object({

})

export const getModifiersForServiceCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞ –∫–æ–¥–æ–º
 */
export const getModifierByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getModifierByCode200Response = zod.object({

})

export const getModifierByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
 */
export const getModifiersByCategoryQueryParams = zod.object({
  "category": zod.enum(['GENERAL', 'TEXTILE', 'LEATHER'])
}).strict()

export const getModifiersByCategory200Response = zod.object({

})

export const getModifiersByCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 */
export const getAllCategories200Response = zod.object({

})

export const getAllCategories400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAllCategories409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º
 */
export const getCategoryById1Params = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getCategoryById1200Response = zod.object({

})

export const getCategoryById1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryById1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥ –∑–∞ –∫–æ–¥–æ–º
 */
export const getCategoryByCode1Params = zod.object({
  "code": zod.string()
}).strict()

export const getCategoryByCode1200Response = zod.object({

})

export const getCategoryByCode1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCategoryByCode1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–¥–∏–Ω–∏—Ü—ñ –≤–∏–º—ñ—Ä—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableUnitsOfMeasureParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getAvailableUnitsOfMeasure200Response = zod.object({

})

export const getAvailableUnitsOfMeasure400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableUnitsOfMeasure409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
 */
export const getItemsByCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getItemsByCategory200Response = zod.object({

})

export const getItemsByCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –Ω–∞–π–º–µ–Ω—É–≤–∞–Ω—å –≤–∏—Ä–æ–±—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
 */
export const getItemNamesByCategoryParams = zod.object({
  "categoryId": zod.string().uuid()
}).strict()

export const getItemNamesByCategory200Response = zod.object({

})

export const getItemNamesByCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemNamesByCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞ –∑–∞ –∫–æ–¥–æ–º –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getItemsByCategoryCodeParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getItemsByCategoryCode200Response = zod.object({

})

export const getItemsByCategoryCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getItemsByCategoryCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –ø—Ä–æ —Ä–∏–∑–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –π–æ–≥–æ –ø–ª—è–º, –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ —Ä–∏–∑–∏–∫–∏
 */
export const getRiskWarningsQueryParams = zod.object({
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRiskWarnings200Response = zod.object({

})

export const getRiskWarnings400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarnings409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –π–æ–≥–æ –ø–ª—è–º, –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–ª—è–º —Ç–∞ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getRecommendedModifiers1QueryParams = zod.object({
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRecommendedModifiers1200Response = zod.object({

})

export const getRecommendedModifiers1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiers1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∑–∞ –π–æ–≥–æ –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä
 */
export const getModifierByCode1Params = zod.object({
  "code": zod.string()
}).strict()

export const getModifierByCode1200Response = zod.object({

})

export const getModifierByCode1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifierByCode1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ —Ç–∏–ø–æ–º (–∑–∞–≥–∞–ª—å–Ω—ñ, —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ñ, —à–∫—ñ—Ä—è–Ω—ñ)
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∑–∞ —Ç–∏–ø–æ–º
 */
export const getModifiersByCategory1Params = zod.object({
  "category": zod.enum(['GENERAL', 'TEXTILE', 'LEATHER'])
}).strict()

export const getModifiersByCategory1200Response = zod.object({

})

export const getModifiersByCategory1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersByCategory1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤–Ω—ñ –¥–∞–Ω—ñ –ø—Ä–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –≤–∫–∞–∑–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–æ—Å–ª—É–≥
 */
export const getModifiersForServiceCategory1Params = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getModifiersForServiceCategory1200Response = zod.object({

})

export const getModifiersForServiceCategory1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getModifiersForServiceCategory1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤—É —Ü—ñ–Ω—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—É –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const getBasePriceQueryParams = zod.object({
  "categoryCode": zod.string(),
  "itemName": zod.string(),
  "color": zod.string().optional()
}).strict()

export const getBasePrice200Response = zod.object({

})

export const getBasePrice400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBasePrice409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 */
export const getAvailableModifiersForCategoryQueryParams = zod.object({
  "categoryCode": zod.string()
}).strict()

export const getAvailableModifiersForCategory200Response = zod.object({

})

export const getAvailableModifiersForCategory400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAvailableModifiersForCategory409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è. –í–∫–ª—é—á–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–ª—ñ—î–Ω—Ç–∞, —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑ –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—î—é –≤–∞—Ä—Ç–æ—Å—Ç—ñ, –∑–∞–≥–∞–ª—å–Ω—ñ —Å—É–º–∏ —Ç–∞ –¥–∞—Ç–∏.
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderDetailedSummaryParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderDetailedSummary200ResponseClientStructuredAddressCityMinOne = 2;

export const getOrderDetailedSummary200ResponseClientStructuredAddressCityMaxOne = 100;

export const getOrderDetailedSummary200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressStreetMinOne = 2;

export const getOrderDetailedSummary200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getOrderDetailedSummary200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getOrderDetailedSummary200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getOrderDetailedSummary200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getOrderDetailedSummary200ResponseClientPreferencesItemKeyMinOne = 0;

export const getOrderDetailedSummary200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getOrderDetailedSummary200ResponseClientPreferencesItemValueMinOne = 0;

export const getOrderDetailedSummary200ResponseClientPreferencesItemValueMaxOne = 255;
export const getOrderDetailedSummary200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getOrderDetailedSummary200Response = zod.object({
  "id": zod.string().uuid().optional().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "receiptNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "tagNumber": zod.string().optional().describe('–ù–æ–º–µ—Ä –º—ñ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressCityMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressCityMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressStreetMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressStreetMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressBuildingMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressApartmentMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getOrderDetailedSummary200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMinOne).max(getOrderDetailedSummary200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getOrderDetailedSummary200ResponseClientPreferencesItemKeyMinOne).max(getOrderDetailedSummary200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getOrderDetailedSummary200ResponseClientPreferencesItemValueMinOne).max(getOrderDetailedSummary200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getOrderDetailedSummary200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "name": zod.string().optional().describe('–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "category": zod.string().optional().describe('–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏'),
  "quantity": zod.number().optional().describe('–ö—ñ–ª—å–∫—ñ—Å—Ç—å'),
  "unitOfMeasure": zod.string().optional().describe('–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É'),
  "material": zod.string().optional().describe('–ú–∞—Ç–µ—Ä—ñ–∞–ª –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "color": zod.string().optional().describe('–ö–æ–ª—ñ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "filler": zod.string().optional().describe('–ù–∞–ø–æ–≤–Ω—é–≤–∞—á –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "fillerClumped": zod.boolean().optional().describe('–ü—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ –≤–∫–∞–∑—É—î, —á–∏ —î –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á –∑–±–∏—Ç–∏–º'),
  "wearPercentage": zod.number().optional().describe('–°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É (—É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö)'),
  "stains": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –ø–ª—è–º –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ'),
  "defects": zod.array(zod.string()).optional().describe('–°–ø–∏—Å–æ–∫ –≤–∏—è–≤–ª–µ–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ —Ä–∏–∑–∏–∫—ñ–≤'),
  "defectNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ —â–æ–¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤'),
  "basePrice": zod.number().optional().describe('–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "priceModifiers": zod.array(zod.object({
  "name": zod.string().optional().describe('–ù–∞–∑–≤–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "description": zod.string().optional().describe('–û–ø–∏—Å –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "type": zod.enum(['PERCENTAGE', 'FIXED_AMOUNT', 'MULTIPLIER']).optional().describe('–¢–∏–ø –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "value": zod.number().optional().describe('–ó–Ω–∞—á–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞'),
  "amount": zod.number().optional().describe('–°—É–º–∞ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞')
}).strict().describe('–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')).optional().describe('–°–ø–∏—Å–æ–∫ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω–∏'),
  "finalPrice": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞'),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional().describe('–§–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó –ø—Ä–µ–¥–º–µ—Ç–∞')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–º –≤–∞—Ä—Ç–æ—Å—Ç—ñ')).optional().describe('–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏'),
  "totalAmount": zod.number().optional().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ –∑–Ω–∏–∂–æ–∫'),
  "discountAmount": zod.number().optional().describe('–°—É–º–∞ –∑–Ω–∏–∂–∫–∏'),
  "expediteSurchargeAmount": zod.number().optional().describe('–°—É–º–∞ –Ω–∞–¥–±–∞–≤–∫–∏ –∑–∞ —Ç–µ—Ä–º—ñ–Ω–æ–≤—ñ—Å—Ç—å'),
  "finalAmount": zod.number().optional().describe('–§—ñ–Ω–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∏–∂–æ–∫ —Ç–∞ –Ω–∞–¥–±–∞–≤–æ–∫'),
  "prepaymentAmount": zod.number().optional().describe('–°—É–º–∞ –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∏'),
  "balanceAmount": zod.number().optional().describe('–°—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ'),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional().describe('–¢–∏–ø —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è'),
  "expectedCompletionDate": zod.string().datetime({}).optional().describe('–û—á—ñ–∫—É–≤–∞–Ω–∞ –¥–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "createdDate": zod.string().datetime({}).optional().describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "customerNotes": zod.string().optional().describe('–ü—Ä–∏–º—ñ—Ç–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞'),
  "discountType": zod.string().optional().describe('–¢–∏–ø –∑–Ω–∏–∂–∫–∏'),
  "discountPercentage": zod.number().optional().describe('–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏')
}).strict().describe('–î–µ—Ç–∞–ª—å–Ω–∏–π –ø—ñ–¥—Å—É–º–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –µ—Ç–∞–ø—É –ø–µ—Ä–µ–≥–ª—è–¥—É —Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è')

export const getOrderDetailedSummary400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDetailedSummary401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDetailedSummary403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDetailedSummary409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ –π–æ–≥–æ ID
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞ ID
 */
export const getOrderByIdParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderById200ResponseClientStructuredAddressCityMinOne = 2;

export const getOrderById200ResponseClientStructuredAddressCityMaxOne = 100;

export const getOrderById200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getOrderById200ResponseClientStructuredAddressStreetMinOne = 2;

export const getOrderById200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getOrderById200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getOrderById200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getOrderById200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getOrderById200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderById200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getOrderById200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getOrderById200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getOrderById200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getOrderById200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getOrderById200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getOrderById200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getOrderById200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getOrderById200ResponseClientPreferencesItemKeyMinOne = 0;

export const getOrderById200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getOrderById200ResponseClientPreferencesItemValueMinOne = 0;

export const getOrderById200ResponseClientPreferencesItemValueMaxOne = 255;
export const getOrderById200ResponseItemsItemNameMinOne = 0;

export const getOrderById200ResponseItemsItemNameMaxOne = 255;
export const getOrderById200ResponseItemsItemDescriptionMinOne = 0;

export const getOrderById200ResponseItemsItemDescriptionMaxOne = 1000;
export const getOrderById200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getOrderById200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getOrderById200ResponseItemsItemDefectsNotesMinOne = 0;

export const getOrderById200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getOrderById200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getOrderById200ResponseCustomerNotesMinOne = 0;

export const getOrderById200ResponseCustomerNotesMaxOne = 1000;
export const getOrderById200ResponseInternalNotesMinOne = 0;

export const getOrderById200ResponseInternalNotesMaxOne = 1000;


export const getOrderById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getOrderById200ResponseClientStructuredAddressCityMinOne).max(getOrderById200ResponseClientStructuredAddressCityMaxOne).regex(getOrderById200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getOrderById200ResponseClientStructuredAddressStreetMinOne).max(getOrderById200ResponseClientStructuredAddressStreetMaxOne).regex(getOrderById200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getOrderById200ResponseClientStructuredAddressBuildingMinOne).max(getOrderById200ResponseClientStructuredAddressBuildingMaxOne).regex(getOrderById200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getOrderById200ResponseClientStructuredAddressApartmentMinOne).max(getOrderById200ResponseClientStructuredAddressApartmentMaxOne).regex(getOrderById200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getOrderById200ResponseClientStructuredAddressPostalCodeMinOne).max(getOrderById200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getOrderById200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getOrderById200ResponseClientStructuredAddressFullAddressMinOne).max(getOrderById200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getOrderById200ResponseClientPreferencesItemKeyMinOne).max(getOrderById200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getOrderById200ResponseClientPreferencesItemValueMinOne).max(getOrderById200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getOrderById200ResponseItemsItemNameMinOne).max(getOrderById200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getOrderById200ResponseItemsItemDescriptionMinOne).max(getOrderById200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getOrderById200ResponseItemsItemSpecialInstructionsMinOne).max(getOrderById200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getOrderById200ResponseItemsItemDefectsNotesMinOne).max(getOrderById200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getOrderById200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getOrderById200ResponseCustomerNotesMinOne).max(getOrderById200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getOrderById200ResponseInternalNotesMinOne).max(getOrderById200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()

export const getOrderById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î PDF-—Ñ–∞–π–ª –∑ —á–µ–∫–æ–º –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ PDF-—á–µ–∫ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getOrderReceiptParams = zod.object({
  "orderId": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const getOrderReceiptQueryIncludeSignatureDefaultOne = true;

export const getOrderReceiptQueryParams = zod.object({
  "includeSignature": zod.boolean().default(getOrderReceiptQueryIncludeSignatureDefaultOne).describe('–í–∫–ª—é—á–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞')
}).strict()

export const getOrderReceipt200Response = zod.object({

})

export const getOrderReceipt400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderReceipt409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–µ—Ç–æ–∫ –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —á–µ—Ä–Ω–µ—Ç–∫–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å
 */
export const getDraftOrders200ResponseClientStructuredAddressCityMinOne = 2;

export const getDraftOrders200ResponseClientStructuredAddressCityMaxOne = 100;

export const getDraftOrders200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getDraftOrders200ResponseClientStructuredAddressStreetMinOne = 2;

export const getDraftOrders200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getDraftOrders200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getDraftOrders200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getDraftOrders200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getDraftOrders200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getDraftOrders200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getDraftOrders200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getDraftOrders200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getDraftOrders200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getDraftOrders200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getDraftOrders200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getDraftOrders200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getDraftOrders200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getDraftOrders200ResponseClientPreferencesItemKeyMinOne = 0;

export const getDraftOrders200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getDraftOrders200ResponseClientPreferencesItemValueMinOne = 0;

export const getDraftOrders200ResponseClientPreferencesItemValueMaxOne = 255;
export const getDraftOrders200ResponseItemsItemNameMinOne = 0;

export const getDraftOrders200ResponseItemsItemNameMaxOne = 255;
export const getDraftOrders200ResponseItemsItemDescriptionMinOne = 0;

export const getDraftOrders200ResponseItemsItemDescriptionMaxOne = 1000;
export const getDraftOrders200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getDraftOrders200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getDraftOrders200ResponseItemsItemDefectsNotesMinOne = 0;

export const getDraftOrders200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getDraftOrders200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getDraftOrders200ResponseCustomerNotesMinOne = 0;

export const getDraftOrders200ResponseCustomerNotesMaxOne = 1000;
export const getDraftOrders200ResponseInternalNotesMinOne = 0;

export const getDraftOrders200ResponseInternalNotesMaxOne = 1000;


export const getDraftOrders200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getDraftOrders200ResponseClientStructuredAddressCityMinOne).max(getDraftOrders200ResponseClientStructuredAddressCityMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getDraftOrders200ResponseClientStructuredAddressStreetMinOne).max(getDraftOrders200ResponseClientStructuredAddressStreetMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getDraftOrders200ResponseClientStructuredAddressBuildingMinOne).max(getDraftOrders200ResponseClientStructuredAddressBuildingMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getDraftOrders200ResponseClientStructuredAddressApartmentMinOne).max(getDraftOrders200ResponseClientStructuredAddressApartmentMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getDraftOrders200ResponseClientStructuredAddressPostalCodeMinOne).max(getDraftOrders200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getDraftOrders200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getDraftOrders200ResponseClientStructuredAddressFullAddressMinOne).max(getDraftOrders200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getDraftOrders200ResponseClientPreferencesItemKeyMinOne).max(getDraftOrders200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getDraftOrders200ResponseClientPreferencesItemValueMinOne).max(getDraftOrders200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getDraftOrders200ResponseItemsItemNameMinOne).max(getDraftOrders200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getDraftOrders200ResponseItemsItemDescriptionMinOne).max(getDraftOrders200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getDraftOrders200ResponseItemsItemSpecialInstructionsMinOne).max(getDraftOrders200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getDraftOrders200ResponseItemsItemDefectsNotesMinOne).max(getDraftOrders200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getDraftOrders200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getDraftOrders200ResponseCustomerNotesMinOne).max(getDraftOrders200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getDraftOrders200ResponseInternalNotesMinOne).max(getDraftOrders200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()
export const getDraftOrders200Response = zod.array(getDraftOrders200ResponseItem)

export const getDraftOrders400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDraftOrders409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–Ω–∏–∂–∫—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–Ω–∏–∂–∫—É
 */
export const getOrderDiscountParams = zod.object({
  "orderId": zod.string()
}).strict()

export const getOrderDiscount200Response = zod.object({

})

export const getOrderDiscount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getOrderDiscount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –∑–Ω–∏–∂–∫—É –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–Ω–∏–∂–∫—É
 */
export const removeDiscountParams = zod.object({
  "orderId": zod.string()
}).strict()

export const removeDiscount200Response = zod.object({

})

export const removeDiscount400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeDiscount409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const getActiveOrders200ResponseClientStructuredAddressCityMinOne = 2;

export const getActiveOrders200ResponseClientStructuredAddressCityMaxOne = 100;

export const getActiveOrders200ResponseClientStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const getActiveOrders200ResponseClientStructuredAddressStreetMinOne = 2;

export const getActiveOrders200ResponseClientStructuredAddressStreetMaxOne = 150;

export const getActiveOrders200ResponseClientStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const getActiveOrders200ResponseClientStructuredAddressBuildingMinOne = 0;

export const getActiveOrders200ResponseClientStructuredAddressBuildingMaxOne = 20;

export const getActiveOrders200ResponseClientStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getActiveOrders200ResponseClientStructuredAddressApartmentMinOne = 0;

export const getActiveOrders200ResponseClientStructuredAddressApartmentMaxOne = 20;

export const getActiveOrders200ResponseClientStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const getActiveOrders200ResponseClientStructuredAddressPostalCodeMinOne = 0;

export const getActiveOrders200ResponseClientStructuredAddressPostalCodeMaxOne = 10;

export const getActiveOrders200ResponseClientStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const getActiveOrders200ResponseClientStructuredAddressFullAddressMinOne = 5;

export const getActiveOrders200ResponseClientStructuredAddressFullAddressMaxOne = 500;
export const getActiveOrders200ResponseClientPreferencesItemKeyMinOne = 0;

export const getActiveOrders200ResponseClientPreferencesItemKeyMaxOne = 100;
export const getActiveOrders200ResponseClientPreferencesItemValueMinOne = 0;

export const getActiveOrders200ResponseClientPreferencesItemValueMaxOne = 255;
export const getActiveOrders200ResponseItemsItemNameMinOne = 0;

export const getActiveOrders200ResponseItemsItemNameMaxOne = 255;
export const getActiveOrders200ResponseItemsItemDescriptionMinOne = 0;

export const getActiveOrders200ResponseItemsItemDescriptionMaxOne = 1000;
export const getActiveOrders200ResponseItemsItemSpecialInstructionsMinOne = 0;

export const getActiveOrders200ResponseItemsItemSpecialInstructionsMaxOne = 500;
export const getActiveOrders200ResponseItemsItemDefectsNotesMinOne = 0;

export const getActiveOrders200ResponseItemsItemDefectsNotesMaxOne = 1000;
export const getActiveOrders200ResponseBranchLocationPhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');
export const getActiveOrders200ResponseCustomerNotesMinOne = 0;

export const getActiveOrders200ResponseCustomerNotesMaxOne = 1000;
export const getActiveOrders200ResponseInternalNotesMinOne = 0;

export const getActiveOrders200ResponseInternalNotesMaxOne = 1000;


export const getActiveOrders200ResponseItem = zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().min(1),
  "tagNumber": zod.string().optional(),
  "client": zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(getActiveOrders200ResponseClientStructuredAddressCityMinOne).max(getActiveOrders200ResponseClientStructuredAddressCityMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(getActiveOrders200ResponseClientStructuredAddressStreetMinOne).max(getActiveOrders200ResponseClientStructuredAddressStreetMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(getActiveOrders200ResponseClientStructuredAddressBuildingMinOne).max(getActiveOrders200ResponseClientStructuredAddressBuildingMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(getActiveOrders200ResponseClientStructuredAddressApartmentMinOne).max(getActiveOrders200ResponseClientStructuredAddressApartmentMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(getActiveOrders200ResponseClientStructuredAddressPostalCodeMinOne).max(getActiveOrders200ResponseClientStructuredAddressPostalCodeMaxOne).regex(getActiveOrders200ResponseClientStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(getActiveOrders200ResponseClientStructuredAddressFullAddressMinOne).max(getActiveOrders200ResponseClientStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(getActiveOrders200ResponseClientPreferencesItemKeyMinOne).max(getActiveOrders200ResponseClientPreferencesItemKeyMaxOne),
  "value": zod.string().min(getActiveOrders200ResponseClientPreferencesItemValueMinOne).max(getActiveOrders200ResponseClientPreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict(),
  "clientId": zod.string().uuid().optional(),
  "items": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "orderId": zod.string().uuid().optional(),
  "name": zod.string().min(getActiveOrders200ResponseItemsItemNameMinOne).max(getActiveOrders200ResponseItemsItemNameMaxOne),
  "description": zod.string().min(getActiveOrders200ResponseItemsItemDescriptionMinOne).max(getActiveOrders200ResponseItemsItemDescriptionMaxOne).optional(),
  "quantity": zod.number().min(1),
  "unitPrice": zod.number(),
  "totalPrice": zod.number().optional(),
  "category": zod.string().optional(),
  "color": zod.string().optional(),
  "material": zod.string().optional(),
  "unitOfMeasure": zod.string().optional(),
  "defects": zod.string().optional(),
  "specialInstructions": zod.string().min(getActiveOrders200ResponseItemsItemSpecialInstructionsMinOne).max(getActiveOrders200ResponseItemsItemSpecialInstructionsMaxOne).optional(),
  "fillerType": zod.string().optional(),
  "fillerCompressed": zod.boolean().optional(),
  "wearDegree": zod.string().optional(),
  "stains": zod.string().optional(),
  "otherStains": zod.string().optional(),
  "defectsAndRisks": zod.string().optional(),
  "noGuaranteeReason": zod.string().optional(),
  "defectsNotes": zod.string().min(getActiveOrders200ResponseItemsItemDefectsNotesMinOne).max(getActiveOrders200ResponseItemsItemDefectsNotesMaxOne).optional()
}).strict()).optional(),
  "totalAmount": zod.number().optional(),
  "discountAmount": zod.number().optional(),
  "finalAmount": zod.number().optional(),
  "prepaymentAmount": zod.number().optional(),
  "balanceAmount": zod.number().optional(),
  "branchLocation": zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getActiveOrders200ResponseBranchLocationPhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict(),
  "branchLocationId": zod.string().uuid().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']),
  "createdDate": zod.string().datetime({}).optional(),
  "updatedDate": zod.string().datetime({}).optional(),
  "expectedCompletionDate": zod.string().datetime({}).optional(),
  "completedDate": zod.string().datetime({}).optional(),
  "customerNotes": zod.string().min(getActiveOrders200ResponseCustomerNotesMinOne).max(getActiveOrders200ResponseCustomerNotesMaxOne).optional(),
  "internalNotes": zod.string().min(getActiveOrders200ResponseInternalNotesMinOne).max(getActiveOrders200ResponseInternalNotesMaxOne).optional(),
  "expediteType": zod.enum(['STANDARD', 'EXPRESS_48H', 'EXPRESS_24H']).optional(),
  "completionComments": zod.string().optional(),
  "termsAccepted": zod.boolean().optional(),
  "finalizedAt": zod.string().datetime({}).optional(),
  "express": zod.boolean().optional(),
  "draft": zod.boolean().optional(),
  "emailed": zod.boolean().optional(),
  "printed": zod.boolean().optional()
}).strict()
export const getActiveOrders200Response = zod.array(getActiveOrders200ResponseItem)

export const getActiveOrders400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getActiveOrders409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –§–ª–æ—É-–∫–∞—Ä—Ç–∞ Order Wizard –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
 */
export const getWorkflow200Response = zod.object({
  "description": zod.string().optional(),
  "steps": zod.array(zod.object({
  "step": zod.number().optional(),
  "title": zod.string().optional(),
  "description": zod.string().optional(),
  "isReady": zod.boolean().optional()
}).strict()).optional(),
  "note": zod.string().optional()
}).strict()

export const getWorkflow400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWorkflow401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWorkflow403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWorkflow404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWorkflow409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≥–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏
 */
export const getSystemStats200Response = zod.object({
  "allAdaptersReady": zod.boolean().optional(),
  "readyAdaptersCount": zod.number().optional(),
  "totalAdapters": zod.number().optional(),
  "readinessPercentage": zod.number().optional(),
  "status": zod.string().optional(),
  "timestamp": zod.string().optional()
}).strict()

export const getSystemStats400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSystemStats401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSystemStats403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSystemStats404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getSystemStats409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ—Ç–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –µ—Ç–∞–ø—É
 */
export const getStageStatusParams = zod.object({
  "stageNumber": zod.number()
}).strict()

export const getStageStatus200Response = zod.object({
  "status": zod.string().optional(),
  "adaptersCount": zod.number().optional(),
  "description": zod.string().optional(),
  "isReady": zod.boolean().optional()
}).strict()

export const getStageStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –ø–æ –º–µ—Ç–æ–¥–∞—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –µ—Ç–∞–ø—É
 */
export const getStageMethodsParams = zod.object({
  "stageNumber": zod.number()
}).strict()

export const getStageMethods200Response = zod.object({
  "stageNumber": zod.number().optional(),
  "methods": zod.array(zod.object({
  "httpMethod": zod.string().optional(),
  "endpoint": zod.string().optional(),
  "description": zod.string().optional()
}).strict()).optional()
}).strict()

export const getStageMethods400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageMethods401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageMethods403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageMethods404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageMethods409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π –µ—Ç–∞–ø
 */
export const getStageInfoParams = zod.object({
  "stageNumber": zod.number()
}).strict()

export const getStageInfo200Response = zod.object({
  "stageNumber": zod.number().optional(),
  "title": zod.string().optional(),
  "description": zod.string().optional(),
  "substeps": zod.array(zod.string()).optional(),
  "adapterClass": zod.string().optional(),
  "isReady": zod.boolean().optional()
}).strict()

export const getStageInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStageInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°—Ç–∞—Ç—É—Å–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –≤—Å—ñ—Ö –µ—Ç–∞–ø—ñ–≤
 */
export const getStagesStatus200Response = zod.object({
  "stages": zod.record(zod.string(), zod.object({
  "status": zod.string().optional(),
  "adaptersCount": zod.number().optional(),
  "description": zod.string().optional()
}).strict()).optional(),
  "overall": zod.string().optional(),
  "totalReadyStages": zod.number().optional(),
  "totalStages": zod.number().optional(),
  "totalAdapters": zod.number().optional()
}).strict()

export const getStagesStatus400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStagesStatus401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStagesStatus403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStagesStatus404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStagesStatus409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ Order Wizard API
 */
export const health200Response = zod.object({
  "status": zod.string().optional(),
  "version": zod.string().optional(),
  "allStagesReady": zod.boolean().optional(),
  "totalStages": zod.number().optional(),
  "totalSubsteps": zod.number().optional(),
  "totalAdapters": zod.number().optional(),
  "architecture": zod.string().optional()
}).strict()

export const health400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const health401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const health403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const health404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const health409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–Ω–∞ –º–∞–ø–∞ –≤—Å—ñ—Ö –¥–æ—Å—Ç—É–ø–Ω–∏—Ö API endpoints
 */
export const getCompleteApiMap200Response = zod.object({
  "main": zod.object({
  "description": zod.string().optional(),
  "endpoint": zod.string().optional(),
  "adapterClass": zod.string().optional()
}).strict().optional(),
  "stage1": zod.object({
  "description": zod.string().optional(),
  "clientSearch": zod.string().optional(),
  "newClientForm": zod.string().optional(),
  "basicOrderInfo": zod.string().optional(),
  "operations": zod.array(zod.string()).optional()
}).strict().optional(),
  "stage2": zod.object({
  "description": zod.string().optional(),
  "main": zod.string().optional(),
  "substeps": zod.object({
  "substep1": zod.string().optional(),
  "substep2": zod.string().optional(),
  "substep3": zod.string().optional(),
  "substep4": zod.string().optional(),
  "substep5": zod.string().optional()
}).strict().optional(),
  "operations": zod.array(zod.string()).optional()
}).strict().optional(),
  "stage3": zod.object({
  "description": zod.string().optional(),
  "main": zod.string().optional(),
  "operations": zod.array(zod.string()).optional()
}).strict().optional(),
  "stage4": zod.object({
  "description": zod.string().optional(),
  "main": zod.string().optional(),
  "operations": zod.array(zod.string()).optional()
}).strict().optional(),
  "baseUrl": zod.string().optional(),
  "documentation": zod.string().optional()
}).strict()

export const getCompleteApiMap400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCompleteApiMap401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCompleteApiMap403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCompleteApiMap404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getCompleteApiMap409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ü–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤—Å—ñ –∞–¥–∞–ø—Ç–µ—Ä–∏
 */
export const getAdaptersInfo200Response = zod.object({
  "title": zod.string().optional(),
  "adapters": zod.record(zod.string(), zod.string()).optional(),
  "description": zod.string().optional()
}).strict()

export const getAdaptersInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAdaptersInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAdaptersInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAdaptersInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getAdaptersInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û—Ç—Ä–∏–º—É—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –∑–∞ ID
 */
export const getPhotoByIdParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "photoId": zod.string().uuid().describe('ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const getPhotoById200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()

export const getPhotoById400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getPhotoById409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –í–∏–¥–∞–ª—è—î –≤–∫–∞–∑–∞–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é
 */
export const deletePhotoParams = zod.object({
  "itemId": zod.string().uuid().describe('ID –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'),
  "photoId": zod.string().uuid().describe('ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó')
}).strict()

export const deletePhoto204Response = zod.object({

})

export const deletePhoto400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const deletePhoto409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–ª—è–º, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –ø–ª—è–º
 */
export const getRecommendedModifiersForStainsQueryParams = zod.object({
  "stains": zod.array(zod.string()),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRecommendedModifiersForStains200ResponseItem = zod.object({
  "modifierId": zod.string().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "reason": zod.string().optional(),
  "recommendedValue": zod.number().optional(),
  "priority": zod.enum(['HIGH', 'MEDIUM', 'LOW']).optional(),
  "riskWarning": zod.string().optional()
}).strict()
export const getRecommendedModifiersForStains200Response = zod.array(getRecommendedModifiersForStains200ResponseItem)

export const getRecommendedModifiersForStains400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForStains409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω—å –ø—Ä–æ —Ä–∏–∑–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö –ø–ª—è–º, –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –º–∞—Ç–µ—Ä—ñ–∞–ª—É —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ —Ä–∏–∑–∏–∫–∏
 */
export const getRiskWarningsForItemQueryParams = zod.object({
  "stains": zod.array(zod.string()).optional(),
  "defects": zod.array(zod.string()).optional(),
  "materialType": zod.string().optional(),
  "categoryCode": zod.string().optional()
}).strict()

export const getRiskWarningsForItem200ResponseItem = zod.string()
export const getRiskWarningsForItem200Response = zod.array(getRiskWarningsForItem200ResponseItem)

export const getRiskWarningsForItem400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRiskWarningsForItem409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ —Ü—ñ–Ω –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∫–∞–∑–∞–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–µ—Ñ–µ–∫—Ç—ñ–≤, –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
 */
export const getRecommendedModifiersForDefectsQueryParams = zod.object({
  "defects": zod.array(zod.string()),
  "categoryCode": zod.string().optional(),
  "materialType": zod.string().optional()
}).strict()

export const getRecommendedModifiersForDefects200ResponseItem = zod.object({
  "modifierId": zod.string().optional(),
  "code": zod.string().optional(),
  "name": zod.string().optional(),
  "reason": zod.string().optional(),
  "recommendedValue": zod.number().optional(),
  "priority": zod.enum(['HIGH', 'MEDIUM', 'LOW']).optional(),
  "riskWarning": zod.string().optional()
}).strict()
export const getRecommendedModifiersForDefects200Response = zod.array(getRecommendedModifiersForDefects200ResponseItem)

export const getRecommendedModifiersForDefects400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRecommendedModifiersForDefects409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç—É–ø–µ–Ω—ñ –∑–Ω–æ—Å—É –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getWearDegrees200ResponseItem = zod.string()
export const getWearDegrees200Response = zod.array(getWearDegrees200ResponseItem)

export const getWearDegrees400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getWearDegrees409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –ø–ª—è–º –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getStainTypes1200ResponseItem = zod.string()
export const getStainTypes1200Response = zod.array(getStainTypes1200ResponseItem)

export const getStainTypes1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getStainTypes1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ä–∏–∑–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getRisks200ResponseItem = zod.string()
export const getRisks200Response = zod.array(getRisks200ResponseItem)

export const getRisks400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getRisks409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getMaterialsQueryParams = zod.object({
  "category": zod.string().optional()
}).strict()

export const getMaterials200ResponseItem = zod.string()
export const getMaterials200Response = zod.array(getMaterials200ResponseItem)

export const getMaterials400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getMaterials409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø–∏ –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á—ñ–≤ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getFillerTypes200ResponseItem = zod.string()
export const getFillerTypes200Response = zod.array(getFillerTypes200ResponseItem)

export const getFillerTypes400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFillerTypes409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –¥–µ—Ñ–µ–∫—Ç–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getDefects200ResponseItem = zod.string()
export const getDefects200Response = zod.array(getDefects200ResponseItem)

export const getDefects400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefects409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ñ–µ–∫—Ç–∏ —Ç–∞ —Ä–∏–∑–∏–∫–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getDefectsAndRisks200ResponseItem = zod.string()
export const getDefectsAndRisks200Response = zod.array(getDefectsAndRisks200ResponseItem)

export const getDefectsAndRisks400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectsAndRisks409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–∑–æ–≤—ñ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 */
export const getColors200ResponseItem = zod.string()
export const getColors200Response = zod.array(getColors200ResponseItem)

export const getColors400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getColors409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ñ–∞–π–ª –∑–∞ –π–æ–≥–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º —ñ–º–µ–Ω–µ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ñ–∞–π–ª
 */
export const getFileParams = zod.object({
  "fileName": zod.string()
}).strict()

export const getFile200Response = zod.object({

})

export const getFile400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getFile409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –¥–µ—Ñ–µ–∫—Ç—É –∑–∞ –∫–æ–¥–æ–º
 */
export const getDefectTypeByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getDefectTypeByCode200Response = zod.object({

})

export const getDefectTypeByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getDefectTypeByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º
 * @deprecated
 * @summary –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤
 */
export const searchClients1QueryParams = zod.object({
  "keyword": zod.string().describe('–ö–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ—à—É–∫—É')
}).strict()

export const searchClients1200ResponseStructuredAddressCityMinOne = 2;

export const searchClients1200ResponseStructuredAddressCityMaxOne = 100;

export const searchClients1200ResponseStructuredAddressCityRegExpOne = new RegExp('^[\\p{L}\\s.,\\-\']+$');
export const searchClients1200ResponseStructuredAddressStreetMinOne = 2;

export const searchClients1200ResponseStructuredAddressStreetMaxOne = 150;

export const searchClients1200ResponseStructuredAddressStreetRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\']+$');
export const searchClients1200ResponseStructuredAddressBuildingMinOne = 0;

export const searchClients1200ResponseStructuredAddressBuildingMaxOne = 20;

export const searchClients1200ResponseStructuredAddressBuildingRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients1200ResponseStructuredAddressApartmentMinOne = 0;

export const searchClients1200ResponseStructuredAddressApartmentMaxOne = 20;

export const searchClients1200ResponseStructuredAddressApartmentRegExpOne = new RegExp('^[\\p{L}\\s0-9.,\\-\'/]+$');
export const searchClients1200ResponseStructuredAddressPostalCodeMinOne = 0;

export const searchClients1200ResponseStructuredAddressPostalCodeMaxOne = 10;

export const searchClients1200ResponseStructuredAddressPostalCodeRegExpOne = new RegExp('^[0-9\\-]+$');
export const searchClients1200ResponseStructuredAddressFullAddressMinOne = 5;

export const searchClients1200ResponseStructuredAddressFullAddressMaxOne = 500;
export const searchClients1200ResponsePreferencesItemKeyMinOne = 0;

export const searchClients1200ResponsePreferencesItemKeyMaxOne = 100;
export const searchClients1200ResponsePreferencesItemValueMinOne = 0;

export const searchClients1200ResponsePreferencesItemValueMaxOne = 255;


export const searchClients1200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "lastName": zod.string().optional(),
  "firstName": zod.string().optional(),
  "fullName": zod.string().optional(),
  "phone": zod.string().optional(),
  "email": zod.string().optional(),
  "address": zod.string().optional(),
  "structuredAddress": zod.object({
  "city": zod.string().min(searchClients1200ResponseStructuredAddressCityMinOne).max(searchClients1200ResponseStructuredAddressCityMaxOne).regex(searchClients1200ResponseStructuredAddressCityRegExpOne).optional(),
  "street": zod.string().min(searchClients1200ResponseStructuredAddressStreetMinOne).max(searchClients1200ResponseStructuredAddressStreetMaxOne).regex(searchClients1200ResponseStructuredAddressStreetRegExpOne).optional(),
  "building": zod.string().min(searchClients1200ResponseStructuredAddressBuildingMinOne).max(searchClients1200ResponseStructuredAddressBuildingMaxOne).regex(searchClients1200ResponseStructuredAddressBuildingRegExpOne).optional(),
  "apartment": zod.string().min(searchClients1200ResponseStructuredAddressApartmentMinOne).max(searchClients1200ResponseStructuredAddressApartmentMaxOne).regex(searchClients1200ResponseStructuredAddressApartmentRegExpOne).optional(),
  "postalCode": zod.string().min(searchClients1200ResponseStructuredAddressPostalCodeMinOne).max(searchClients1200ResponseStructuredAddressPostalCodeMaxOne).regex(searchClients1200ResponseStructuredAddressPostalCodeRegExpOne).optional(),
  "fullAddress": zod.string().min(searchClients1200ResponseStructuredAddressFullAddressMinOne).max(searchClients1200ResponseStructuredAddressFullAddressMaxOne).optional()
}).strict().optional(),
  "communicationChannels": zod.array(zod.enum(['PHONE', 'SMS', 'VIBER'])).optional(),
  "source": zod.enum(['INSTAGRAM', 'GOOGLE', 'RECOMMENDATION', 'OTHER']).optional(),
  "sourceDetails": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional(),
  "category": zod.object({
  "code": zod.string().optional(),
  "displayName": zod.string().optional()
}).strict().optional(),
  "preferences": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "key": zod.string().min(searchClients1200ResponsePreferencesItemKeyMinOne).max(searchClients1200ResponsePreferencesItemKeyMaxOne),
  "value": zod.string().min(searchClients1200ResponsePreferencesItemValueMinOne).max(searchClients1200ResponsePreferencesItemValueMaxOne).optional()
}).strict()).optional(),
  "recentOrders": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "receiptNumber": zod.string().optional(),
  "status": zod.enum(['DRAFT', 'NEW', 'IN_PROGRESS', 'COMPLETED', 'DELIVERED', 'CANCELLED']).optional(),
  "totalAmount": zod.number().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "completionDate": zod.string().datetime({}).optional(),
  "itemCount": zod.number().optional()
}).strict()).optional(),
  "orderCount": zod.number().optional()
}).strict()

export const searchClients1400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients1401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients1403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients1404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const searchClients1409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ –≤–∫–∞–∑–∞–Ω–∏–º –∫–æ–¥–æ–º
 * @summary –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞ –∫–æ–¥–æ–º
 */
export const getBranchLocationByCodeParams = zod.object({
  "code": zod.string()
}).strict()

export const getBranchLocationByCode200ResponsePhoneRegExpOne = new RegExp('^\\+ ? [0-9\\s-()]{10,15}$');


export const getBranchLocationByCode200Response = zod.object({
  "id": zod.string().uuid().optional(),
  "name": zod.string().min(1),
  "address": zod.string().min(1),
  "phone": zod.string().regex(getBranchLocationByCode200ResponsePhoneRegExpOne).optional(),
  "code": zod.string().min(1),
  "active": zod.boolean().optional(),
  "createdAt": zod.string().datetime({}).optional(),
  "updatedAt": zod.string().datetime({}).optional()
}).strict()

export const getBranchLocationByCode400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const getBranchLocationByCode409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
 */
export const testAuthEndpoint200Response = zod.string()

export const testAuthEndpoint400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


export const healthCheck200Response = zod.record(zod.string(), zod.any())

export const healthCheck400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const healthCheck409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


export const ping200Response = zod.string()

export const ping400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const ping409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
 */
export const closeSession2Params = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const closeSession2400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession2401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession2403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession2404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const closeSession2409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—ó
 */
export const removePhotoParams = zod.object({
  "sessionId": zod.string().uuid(),
  "photoId": zod.string().uuid()
}).strict()

export const removePhoto200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const removePhoto400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removePhoto401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removePhoto403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removePhoto404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removePhoto409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó
 */
export const removeSessionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const removeSession400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeSession401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeSession403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeSession404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeSession409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –í–∏–¥–∞–ª–µ–Ω–Ω—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∞ –∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
 */
export const removeModifierParams = zod.object({
  "sessionId": zod.string().uuid(),
  "modifierId": zod.string()
}).strict()

export const removeModifier200Response = zod.object({
  "sessionId": zod.string().uuid().optional(),
  "currentState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "previousState": zod.enum(['INITIAL', 'UPLOADING_PHOTOS', 'PROCESSING_PHOTOS', 'REVIEWING_PHOTOS', 'COMPLETED', 'ERROR']).optional(),
  "success": zod.boolean().optional(),
  "message": zod.string().optional(),
  "details": zod.string().optional(),
  "data": zod.object({
  "sessionId": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "photos": zod.array(zod.object({
  "id": zod.string().uuid().optional(),
  "itemId": zod.string().uuid().optional(),
  "fileUrl": zod.string().optional(),
  "thumbnailUrl": zod.string().optional(),
  "annotations": zod.string().optional(),
  "description": zod.string().optional(),
  "createdAt": zod.string().datetime({}).optional()
}).strict()).optional(),
  "maxPhotosAllowed": zod.number().optional(),
  "maxFileSizeMB": zod.number().optional(),
  "documentationCompleted": zod.boolean().optional(),
  "startTime": zod.string().datetime({}).optional(),
  "completionTime": zod.string().datetime({}).optional(),
  "notes": zod.string().optional()
}).strict().optional(),
  "availableEvents": zod.array(zod.enum(['INITIALIZE', 'START_UPLOAD', 'UPLOAD_PHOTO', 'PROCESS_PHOTOS', 'PROCESSING_COMPLETED', 'REVIEW_PHOTOS', 'DELETE_PHOTO', 'COMPLETE_DOCUMENTATION', 'EDIT_PHOTOS', 'HANDLE_ERROR', 'RESET_AFTER_ERROR'])).optional(),
  "validationErrors": zod.array(zod.string()).optional(),
  "timestamp": zod.string().datetime({}).optional()
}).strict()

export const removeModifier400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeModifier401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeModifier403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeModifier404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const removeModifier409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é –ø—ñ–¥–µ—Ç–∞–ø—É 1
 */
export const finalizeSubstep1SessionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const finalizeSubstep1Session400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeSubstep1Session401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeSubstep1Session403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeSubstep1Session404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const finalizeSubstep1Session409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –ó–∞–≤–µ—Ä—à—É—î —Å–µ—Å—ñ—é —Ç–∞ –∑–≤—ñ–ª—å–Ω—è—î —Ä–µ—Å—É—Ä—Å–∏
 */
export const terminateSessionParams = zod.object({
  "sessionId": zod.string().uuid()
}).strict()

export const terminateSession400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const terminateSession401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const terminateSession403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const terminateSession404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const terminateSession409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞
 */
export const cancelNewClientCreationParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const cancelNewClientCreation400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelNewClientCreation401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelNewClientCreation403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelNewClientCreation404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelNewClientCreation409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –ø–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const cancelClientSearchParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const cancelClientSearch400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelClientSearch401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelClientSearch403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelClientSearch404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelClientSearch409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * @summary –°–∫–∞—Å–æ–≤—É—î –∑–±—ñ—Ä –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
 */
export const cancelBasicOrderInfoParams = zod.object({
  "sessionId": zod.string()
}).strict()

export const cancelBasicOrderInfo400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelBasicOrderInfo401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelBasicOrderInfo403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelBasicOrderInfo404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelBasicOrderInfo409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –°–∫–∞—Å–æ–≤—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * @summary –°–∫–∞—Å—É–≤–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export const cancelOrderParams = zod.object({
  "id": zod.string().uuid().describe('ID –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
}).strict()

export const cancelOrder204Response = zod.object({

})

export const cancelOrder400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const cancelOrder409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


