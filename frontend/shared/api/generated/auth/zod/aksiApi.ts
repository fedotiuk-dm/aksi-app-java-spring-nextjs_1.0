/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * AKSI API
 * API –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∫–ª—ñ–Ω—ñ–Ω–≥–æ–≤–æ—é –∫–æ–º–ø–∞–Ω—ñ—î—é AKSI
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î JWT —Ç–æ–∫–µ–Ω
 * @summary –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const registerBodyNameMin = 2;

export const registerBodyNameMax = 50;
export const registerBodyUsernameMin = 3;

export const registerBodyUsernameMax = 20;

export const registerBodyUsernameRegExp = new RegExp('^[a-zA-Z0-9._-]+$');
export const registerBodyPasswordMin = 6;

export const registerBodyPasswordMax = 2147483647;


export const registerBody = zod.object({
  "name": zod.string().min(registerBodyNameMin).max(registerBodyNameMax),
  "username": zod.string().min(registerBodyUsernameMin).max(registerBodyUsernameMax).regex(registerBodyUsernameRegExp),
  "email": zod.string().min(1),
  "password": zod.string().min(registerBodyPasswordMin).max(registerBodyPasswordMax),
  "role": zod.enum(['ADMIN', 'MANAGER', 'STAFF']).optional(),
  "position": zod.string().optional()
}).strict()

export const register200Response = zod.object({

})

export const register400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const register409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –û–Ω–æ–≤–ª—é—î JWT —Ç–æ–∫–µ–Ω –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é refresh —Ç–æ–∫–µ–Ω–∞
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞
 */
export const refreshTokenBody = zod.string()

export const refreshToken200Response = zod.object({

})

export const refreshToken400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const refreshToken409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î JWT —Ç–æ–∫–µ–Ω
 * @summary –í—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const loginBody = zod.object({
  "username": zod.string().min(1),
  "password": zod.string().min(1)
}).strict()

export const login200Response = zod.object({

})

export const login400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const login409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


/**
 * –¢–µ—Å—Ç–æ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
 * @summary –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
 */
export const testAuthEndpoint200Response = zod.string()

export const testAuthEndpoint400Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint401Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint403Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint404Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')

export const testAuthEndpoint409Response = zod.object({
  "timestamp": zod.string().optional(),
  "status": zod.number().optional(),
  "error": zod.string().optional(),
  "message": zod.string().optional(),
  "path": zod.string().optional()
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É –∑ —á–∞—Å–æ–≤–æ—é –º—ñ—Ç–∫–æ—é —É —Ñ–æ—Ä–º–∞—Ç—ñ ISO-8601')


