/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI Dry Cleaning Order System API
 * API –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å —Ö—ñ–º—á–∏—Å—Ç–∫–∏ –∑ DDD –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ refresh —Ç–æ–∫–µ–Ω
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É
 */
export const refreshAccessTokenBodyRefreshTokenMin = 10;

export const refreshAccessTokenBodyRefreshTokenMax = 2147483647;


export const refreshAccessTokenBody = zod.object({
  "refreshToken": zod.coerce.string().min(refreshAccessTokenBodyRefreshTokenMin).max(refreshAccessTokenBodyRefreshTokenMax).describe('Refresh —Ç–æ–∫–µ–Ω –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É')
}).strict().describe('–ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É')

export const refreshAccessToken200ResponseExpiresInMin = 300;

export const refreshAccessToken200ResponseExpiresInMax = 86400;
export const refreshAccessToken200ResponseUserUsernameMin = 3;

export const refreshAccessToken200ResponseUserUsernameMax = 50;
export const refreshAccessToken200ResponseUserFirstNameMax = 50;
export const refreshAccessToken200ResponseUserLastNameMax = 50;
export const refreshAccessToken200ResponseUserRolesMax = 2147483647;


export const refreshAccessToken200Response = zod.object({
  "accessToken": zod.coerce.string().describe('JWT access —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó API –∑–∞–ø–∏—Ç—ñ–≤'),
  "refreshToken": zod.coerce.string().describe('Refresh —Ç–æ–∫–µ–Ω –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É'),
  "tokenType": zod.enum(['Bearer']).describe('–¢–∏–ø —Ç–æ–∫–µ–Ω—É (–∑–∞–≤–∂–¥–∏ Bearer)'),
  "expiresIn": zod.coerce.number().min(refreshAccessToken200ResponseExpiresInMin).max(refreshAccessToken200ResponseExpiresInMax).describe('–ß–∞—Å –∂–∏—Ç—Ç—è access —Ç–æ–∫–µ–Ω—É –≤ —Å–µ–∫—É–Ω–¥–∞—Ö'),
  "user": zod.object({
  "id": zod.coerce.string().uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(refreshAccessToken200ResponseUserUsernameMin).max(refreshAccessToken200ResponseUserUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(refreshAccessToken200ResponseUserFirstNameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "lastName": zod.coerce.string().min(1).max(refreshAccessToken200ResponseUserLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "roles": zod.array(zod.enum(['ADMIN', 'MANAGER', 'EMPLOYEE', 'CASHIER', 'OPERATOR'])).min(1).max(refreshAccessToken200ResponseUserRolesMax).describe('–†–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.coerce.string().datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).strict().describe('–í—ñ–¥–ø–æ–≤—ñ–¥—å –∑ —Ç–æ–∫–µ–Ω–∞–º–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó')

export const refreshAccessToken400Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.object({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.object({
  "present": zod.coerce.boolean().optional()
}).strict().optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
}).strict()).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
}).strict()

export const refreshAccessToken401Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()

export const refreshAccessToken500Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()


/**
 * –í–∏—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ —ñ–Ω–≤–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω—ñ–≤
 * @summary –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏
 */
export const logoutUser200Response = zod.object({
  "success": zod.coerce.boolean().describe('–°—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü—ñ—ó'),
  "message": zod.coerce.string().describe('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç')
}).strict().describe('–í—ñ–¥–ø–æ–≤—ñ–¥—å –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –ª–æ–≥–∞—É—Ç—É')

export const logoutUser401Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()

export const logoutUser500Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()


/**
 * –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ email/username —Ç–∞ –ø–∞—Ä–æ–ª–µ–º
 * @summary –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const loginUserBodyUsernameMin = 3;

export const loginUserBodyUsernameMax = 100;

export const loginUserBodyUsernameRegExp = new RegExp('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$');
export const loginUserBodyPasswordMin = 6;

export const loginUserBodyPasswordMax = 128;


export const loginUserBody = zod.object({
  "username": zod.coerce.string().min(loginUserBodyUsernameMin).max(loginUserBodyUsernameMax).regex(loginUserBodyUsernameRegExp).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ email'),
  "password": zod.coerce.string().min(loginUserBodyPasswordMin).max(loginUserBodyPasswordMax).describe('–ü–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).strict().describe('–ó–∞–ø–∏—Ç –Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const loginUser200ResponseExpiresInMin = 300;

export const loginUser200ResponseExpiresInMax = 86400;
export const loginUser200ResponseUserUsernameMin = 3;

export const loginUser200ResponseUserUsernameMax = 50;
export const loginUser200ResponseUserFirstNameMax = 50;
export const loginUser200ResponseUserLastNameMax = 50;
export const loginUser200ResponseUserRolesMax = 2147483647;


export const loginUser200Response = zod.object({
  "accessToken": zod.coerce.string().describe('JWT access —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó API –∑–∞–ø–∏—Ç—ñ–≤'),
  "refreshToken": zod.coerce.string().describe('Refresh —Ç–æ–∫–µ–Ω –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É'),
  "tokenType": zod.enum(['Bearer']).describe('–¢–∏–ø —Ç–æ–∫–µ–Ω—É (–∑–∞–≤–∂–¥–∏ Bearer)'),
  "expiresIn": zod.coerce.number().min(loginUser200ResponseExpiresInMin).max(loginUser200ResponseExpiresInMax).describe('–ß–∞—Å –∂–∏—Ç—Ç—è access —Ç–æ–∫–µ–Ω—É –≤ —Å–µ–∫—É–Ω–¥–∞—Ö'),
  "user": zod.object({
  "id": zod.coerce.string().uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(loginUser200ResponseUserUsernameMin).max(loginUser200ResponseUserUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(loginUser200ResponseUserFirstNameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "lastName": zod.coerce.string().min(1).max(loginUser200ResponseUserLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "roles": zod.array(zod.enum(['ADMIN', 'MANAGER', 'EMPLOYEE', 'CASHIER', 'OPERATOR'])).min(1).max(loginUser200ResponseUserRolesMax).describe('–†–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.coerce.string().datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).strict().describe('–í—ñ–¥–ø–æ–≤—ñ–¥—å –∑ —Ç–æ–∫–µ–Ω–∞–º–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó')

export const loginUser400Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.object({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.object({
  "present": zod.coerce.boolean().optional()
}).strict().optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
}).strict()).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
}).strict()

export const loginUser401Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()

export const loginUser403Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()

export const loginUser500Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const getCurrentUser200ResponseUsernameMin = 3;

export const getCurrentUser200ResponseUsernameMax = 50;
export const getCurrentUser200ResponseFirstNameMax = 50;
export const getCurrentUser200ResponseLastNameMax = 50;
export const getCurrentUser200ResponseRolesMax = 2147483647;


export const getCurrentUser200Response = zod.object({
  "id": zod.coerce.string().uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(getCurrentUser200ResponseUsernameMin).max(getCurrentUser200ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(getCurrentUser200ResponseFirstNameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "lastName": zod.coerce.string().min(1).max(getCurrentUser200ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "roles": zod.array(zod.enum(['ADMIN', 'MANAGER', 'EMPLOYEE', 'CASHIER', 'OPERATOR'])).min(1).max(getCurrentUser200ResponseRolesMax).describe('–†–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.coerce.string().datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).strict().describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const getCurrentUser401Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()

export const getCurrentUser403Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()

export const getCurrentUser500Response = zod.object({
  "timestamp": zod.coerce.string().datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
}).strict()
