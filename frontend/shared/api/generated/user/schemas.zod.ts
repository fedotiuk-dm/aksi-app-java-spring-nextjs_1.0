/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI Dry Cleaning Order System API
 * API –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å —Ö—ñ–º—á–∏—Å—Ç–∫–∏ –∑ DDD –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';

/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Å–∏—Å—Ç–µ–º–∏ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 */
export const getUsersQueryPageDefault = 0;
export const getUsersQueryPageMin = 0;
export const getUsersQuerySizeDefault = 20;
export const getUsersQuerySizeMax = 100;


export const getUsersQueryParams = zod.object({
  "page": zod.number().min(getUsersQueryPageMin).optional().describe('–ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (0-based)'),
  "size": zod.number().min(1).max(getUsersQuerySizeMax).default(getUsersQuerySizeDefault).describe('–†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏'),
  "branchId": zod.uuid().optional().describe('–§—ñ–ª—å—Ç—Ä –∑–∞ ID —Ñ—ñ–ª—ñ—ó'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']).optional().describe('–§—ñ–ª—å—Ç—Ä –∑–∞ —Ä–æ–ª–ª—é'),
  "isActive": zod.boolean().optional().describe('–§—ñ–ª—å—Ç—Ä –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ')
})

export const getUsersResponseItemsItemUsernameMin = 3;

export const getUsersResponseItemsItemUsernameMax = 50;
export const getUsersResponseItemsItemFirstNameMax = 50;
export const getUsersResponseItemsItemLastNameMax = 50;


export const getUsersResponse = zod.object({
  "items": zod.array(zod.object({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.string().min(getUsersResponseItemsItemUsernameMin).max(getUsersResponseItemsItemUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(getUsersResponseItemsItemFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(getUsersResponseItemsItemLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "isActive": zod.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')).describe('–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤'),
  "totalElements": zod.number().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤'),
  "totalPages": zod.number().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫'),
  "currentPage": zod.number().describe('–ü–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (0-based)'),
  "pageSize": zod.number().describe('–†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏')
}).describe('–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é')


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å–∏—Å—Ç–µ–º—ñ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const createUserBodyUsernameMin = 3;

export const createUserBodyUsernameMax = 50;
export const createUserBodyEmailMin = 3;

export const createUserBodyEmailMax = 100;

export const createUserBodyEmailRegExp = new RegExp('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$');
export const createUserBodyPasswordMin = 6;

export const createUserBodyPasswordMax = 128;
export const createUserBodyFirstNameMax = 50;
export const createUserBodyLastNameMax = 50;


export const createUserBody = zod.object({
  "username": zod.string().min(createUserBodyUsernameMin).max(createUserBodyUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().min(createUserBodyEmailMin).max(createUserBodyEmailMax).regex(createUserBodyEmailRegExp).describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "password": zod.string().min(createUserBodyPasswordMin).max(createUserBodyPasswordMax).describe('–ü–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(createUserBodyFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(createUserBodyLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "branchId": zod.uuid().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª—é—î—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ ID
 */
export const getUserByIdParams = zod.object({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const getUserByIdResponseUsernameMin = 3;

export const getUserByIdResponseUsernameMax = 50;
export const getUserByIdResponseFirstNameMax = 50;
export const getUserByIdResponseLastNameMax = 50;


export const getUserByIdResponse = zod.object({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.string().min(getUserByIdResponseUsernameMin).max(getUserByIdResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(getUserByIdResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(getUserByIdResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "isActive": zod.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')


/**
 * –ß–∞—Å—Ç–∫–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ç–∞ —Å–∞–º–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const updateUserParams = zod.object({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const updateUserBodyEmailMin = 3;

export const updateUserBodyEmailMax = 100;

export const updateUserBodyEmailRegExp = new RegExp('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$');
export const updateUserBodyFirstNameMax = 50;
export const updateUserBodyLastNameMax = 50;


export const updateUserBody = zod.object({
  "email": zod.string().min(updateUserBodyEmailMin).max(updateUserBodyEmailMax).regex(updateUserBodyEmailRegExp).optional().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(updateUserBodyFirstNameMax).optional().describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(updateUserBodyLastNameMax).optional().describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª—é—î—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const updateUserResponseUsernameMin = 3;

export const updateUserResponseUsernameMax = 50;
export const updateUserResponseFirstNameMax = 50;
export const updateUserResponseLastNameMax = 50;


export const updateUserResponse = zod.object({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.string().min(updateUserResponseUsernameMin).max(updateUserResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(updateUserResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(updateUserResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "isActive": zod.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')


/**
 * –ê–∫—Ç–∏–≤—É—î –∞–±–æ –¥–µ–∞–∫—Ç–∏–≤—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const updateUserStatusParams = zod.object({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const updateUserStatusBody = zod.object({
  "isActive": zod.boolean().describe('–ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const updateUserStatusResponseUsernameMin = 3;

export const updateUserStatusResponseUsernameMax = 50;
export const updateUserStatusResponseFirstNameMax = 50;
export const updateUserStatusResponseLastNameMax = 50;


export const updateUserStatusResponse = zod.object({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.string().min(updateUserStatusResponseUsernameMin).max(updateUserStatusResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(updateUserStatusResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(updateUserStatusResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "isActive": zod.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')


/**
 * –ó–º—ñ–Ω—é—î —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –ó–º—ñ–Ω–∞ —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const updateUserRoleParams = zod.object({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const updateUserRoleBody = zod.object({
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR'])
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –∑–º—ñ–Ω—É —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const updateUserRoleResponseUsernameMin = 3;

export const updateUserRoleResponseUsernameMax = 50;
export const updateUserRoleResponseFirstNameMax = 50;
export const updateUserRoleResponseLastNameMax = 50;


export const updateUserRoleResponse = zod.object({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.string().min(updateUserRoleResponseUsernameMin).max(updateUserRoleResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(updateUserRoleResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(updateUserRoleResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "isActive": zod.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')


/**
 * –ó–º—ñ–Ω—é—î –ø–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ç–∞ —Å–∞–º–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
 * @summary –ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const changeUserPasswordParams = zod.object({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const changeUserPasswordBodyCurrentPasswordMin = 6;

export const changeUserPasswordBodyCurrentPasswordMax = 128;
export const changeUserPasswordBodyNewPasswordMin = 6;

export const changeUserPasswordBodyNewPasswordMax = 128;


export const changeUserPasswordBody = zod.object({
  "currentPassword": zod.string().min(changeUserPasswordBodyCurrentPasswordMin).max(changeUserPasswordBodyCurrentPasswordMax).describe('–ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å'),
  "newPassword": zod.string().min(changeUserPasswordBodyNewPasswordMin).max(changeUserPasswordBodyNewPasswordMax).describe('–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –∑–º—ñ–Ω—É –ø–∞—Ä–æ–ª—è')


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞)
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const getCurrentUserResponseUsernameMin = 3;

export const getCurrentUserResponseUsernameMax = 50;
export const getCurrentUserResponseFirstNameMax = 50;
export const getCurrentUserResponseLastNameMax = 50;


export const getCurrentUserResponse = zod.object({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.string().min(getCurrentUserResponseUsernameMin).max(getCurrentUserResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.string().min(1).max(getCurrentUserResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.string().min(1).max(getCurrentUserResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'MANAGER', 'OPERATOR']),
  "isActive": zod.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')
