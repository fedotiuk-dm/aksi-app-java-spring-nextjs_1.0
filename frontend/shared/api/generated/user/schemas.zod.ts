/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI Dry Cleaning Order System API
 * API –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å —Ö—ñ–º—á–∏—Å—Ç–∫–∏ –∑ DDD –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';

/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Å–∏—Å—Ç–µ–º–∏ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
 */
export const getUsersQueryPageDefault = 0;
export const getUsersQueryPageMin = 0;
export const getUsersQuerySizeDefault = 20;
export const getUsersQuerySizeMax = 100;


export const getUsersQueryParams = zod.strictObject({
  "page": zod.coerce.number().min(getUsersQueryPageMin).optional().describe('–ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (0-based)'),
  "size": zod.coerce.number().min(1).max(getUsersQuerySizeMax).default(getUsersQuerySizeDefault).describe('–†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏'),
  "branchId": zod.uuid().optional().describe('–§—ñ–ª—å—Ç—Ä –∑–∞ ID —Ñ—ñ–ª—ñ—ó'),
  "role": zod.enum(['ADMIN', 'OPERATOR']).optional().describe('–§—ñ–ª—å—Ç—Ä –∑–∞ —Ä–æ–ª–ª—é'),
  "isActive": zod.coerce.boolean().optional().describe('–§—ñ–ª—å—Ç—Ä –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ')
})

export const getUsers200ResponseItemsItemUsernameMin = 3;

export const getUsers200ResponseItemsItemUsernameMax = 50;
export const getUsers200ResponseItemsItemFirstNameMax = 50;
export const getUsers200ResponseItemsItemLastNameMax = 50;


export const getUsers200Response = zod.strictObject({
  "items": zod.array(zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(getUsers200ResponseItemsItemUsernameMin).max(getUsers200ResponseItemsItemUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(getUsers200ResponseItemsItemFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(getUsers200ResponseItemsItemLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')).describe('–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤'),
  "totalElements": zod.coerce.number().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤'),
  "totalPages": zod.coerce.number().describe('–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫'),
  "currentPage": zod.coerce.number().describe('–ü–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ (0-based)'),
  "pageSize": zod.coerce.number().describe('–†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏')
}).describe('–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–∞–≥—ñ–Ω–∞—Ü—ñ—î—é')

export const getUsers401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getUsers403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getUsers500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å–∏—Å—Ç–µ–º—ñ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const createUserBodyUsernameMin = 3;

export const createUserBodyUsernameMax = 50;
export const createUserBodyPasswordMin = 6;

export const createUserBodyPasswordMax = 128;
export const createUserBodyFirstNameMax = 50;
export const createUserBodyLastNameMax = 50;


export const createUserBody = zod.strictObject({
  "username": zod.coerce.string().min(createUserBodyUsernameMin).max(createUserBodyUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "password": zod.coerce.string().min(createUserBodyPasswordMin).max(createUserBodyPasswordMax).describe('–ü–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(createUserBodyFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(createUserBodyLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "branchId": zod.uuid().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª—é—î—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const createUser201ResponseUsernameMin = 3;

export const createUser201ResponseUsernameMax = 50;
export const createUser201ResponseFirstNameMax = 50;
export const createUser201ResponseLastNameMax = 50;


export const createUser201Response = zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(createUser201ResponseUsernameMin).max(createUser201ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(createUser201ResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(createUser201ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')

export const createUser400Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.strictObject({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.strictObject({
  "present": zod.coerce.boolean().optional()
}).optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
})).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
})

export const createUser401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const createUser403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const createUser409Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const createUser500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ ID
 */
export const getUserByIdParams = zod.strictObject({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const getUserById200ResponseUsernameMin = 3;

export const getUserById200ResponseUsernameMax = 50;
export const getUserById200ResponseFirstNameMax = 50;
export const getUserById200ResponseLastNameMax = 50;


export const getUserById200Response = zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(getUserById200ResponseUsernameMin).max(getUserById200ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(getUserById200ResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(getUserById200ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')

export const getUserById401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getUserById403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getUserById404Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getUserById500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –ß–∞—Å—Ç–∫–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ç–∞ —Å–∞–º–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
 * @summary –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const updateUserParams = zod.strictObject({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const updateUserBodyFirstNameMax = 50;
export const updateUserBodyLastNameMax = 50;


export const updateUserBody = zod.strictObject({
  "email": zod.coerce.string().optional().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(updateUserBodyFirstNameMax).optional().describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(updateUserBodyLastNameMax).optional().describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª—é—î—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const updateUser200ResponseUsernameMin = 3;

export const updateUser200ResponseUsernameMax = 50;
export const updateUser200ResponseFirstNameMax = 50;
export const updateUser200ResponseLastNameMax = 50;


export const updateUser200Response = zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(updateUser200ResponseUsernameMin).max(updateUser200ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(updateUser200ResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(updateUser200ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')

export const updateUser400Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.strictObject({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.strictObject({
  "present": zod.coerce.boolean().optional()
}).optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
})).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
})

export const updateUser401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUser403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUser404Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUser500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –ê–∫—Ç–∏–≤—É—î –∞–±–æ –¥–µ–∞–∫—Ç–∏–≤—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –ó–º—ñ–Ω–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const updateUserStatusParams = zod.strictObject({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const updateUserStatusBody = zod.strictObject({
  "isActive": zod.coerce.boolean().describe('–ù–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –∑–º—ñ–Ω—É —Å—Ç–∞—Ç—É—Å—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const updateUserStatus200ResponseUsernameMin = 3;

export const updateUserStatus200ResponseUsernameMax = 50;
export const updateUserStatus200ResponseFirstNameMax = 50;
export const updateUserStatus200ResponseLastNameMax = 50;


export const updateUserStatus200Response = zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(updateUserStatus200ResponseUsernameMin).max(updateUserStatus200ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(updateUserStatus200ResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(updateUserStatus200ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')

export const updateUserStatus400Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.strictObject({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.strictObject({
  "present": zod.coerce.boolean().optional()
}).optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
})).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
})

export const updateUserStatus401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUserStatus403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUserStatus404Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUserStatus500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –ó–º—ñ–Ω—é—î —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤)
 * @summary –ó–º—ñ–Ω–∞ —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const updateUserRoleParams = zod.strictObject({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const updateUserRoleBody = zod.strictObject({
  "role": zod.enum(['ADMIN', 'OPERATOR'])
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –∑–º—ñ–Ω—É —Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')

export const updateUserRole200ResponseUsernameMin = 3;

export const updateUserRole200ResponseUsernameMax = 50;
export const updateUserRole200ResponseFirstNameMax = 50;
export const updateUserRole200ResponseLastNameMax = 50;


export const updateUserRole200Response = zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(updateUserRole200ResponseUsernameMin).max(updateUserRole200ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(updateUserRole200ResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(updateUserRole200ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')

export const updateUserRole400Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.strictObject({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.strictObject({
  "present": zod.coerce.boolean().optional()
}).optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
})).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
})

export const updateUserRole401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUserRole403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUserRole404Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const updateUserRole500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –ó–º—ñ–Ω—é—î –ø–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ —Ç–∞ —Å–∞–º–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞)
 * @summary –ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const changeUserPasswordParams = zod.strictObject({
  "userId": zod.uuid().describe('ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞')
})

export const changeUserPasswordBodyCurrentPasswordMin = 6;

export const changeUserPasswordBodyCurrentPasswordMax = 128;
export const changeUserPasswordBodyNewPasswordMin = 6;

export const changeUserPasswordBodyNewPasswordMax = 128;


export const changeUserPasswordBody = zod.strictObject({
  "currentPassword": zod.coerce.string().min(changeUserPasswordBodyCurrentPasswordMin).max(changeUserPasswordBodyCurrentPasswordMax).describe('–ü–æ—Ç–æ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å'),
  "newPassword": zod.coerce.string().min(changeUserPasswordBodyNewPasswordMin).max(changeUserPasswordBodyNewPasswordMax).describe('–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å')
}).describe('–ó–∞–ø–∏—Ç –Ω–∞ –∑–º—ñ–Ω—É –ø–∞—Ä–æ–ª—è')

export const changeUserPassword400Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400)'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "errors": zod.array(zod.strictObject({
  "field": zod.coerce.string().describe('–ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "rejectedValue": zod.strictObject({
  "present": zod.coerce.boolean().optional()
}).optional(),
  "code": zod.coerce.string().optional().describe('–ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó')
})).describe('–°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤')
})

export const changeUserPassword401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const changeUserPassword403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const changeUserPassword404Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const changeUserPassword500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})


/**
 * –ü–æ–≤–µ—Ä—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞)
 * @summary –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export const getCurrentUser200ResponseUsernameMin = 3;

export const getCurrentUser200ResponseUsernameMax = 50;
export const getCurrentUser200ResponseFirstNameMax = 50;
export const getCurrentUser200ResponseLastNameMax = 50;


export const getCurrentUser200Response = zod.strictObject({
  "id": zod.uuid().describe('–£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "username": zod.coerce.string().min(getCurrentUser200ResponseUsernameMin).max(getCurrentUser200ResponseUsernameMax).describe('–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É'),
  "email": zod.coerce.string().describe('Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "firstName": zod.coerce.string().min(1).max(getCurrentUser200ResponseFirstNameMax).describe('–Ü–º\'—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "lastName": zod.coerce.string().min(1).max(getCurrentUser200ResponseLastNameMax).describe('–ü—Ä—ñ–∑–≤–∏—â–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞'),
  "role": zod.enum(['ADMIN', 'OPERATOR']),
  "isActive": zod.coerce.boolean().describe('–ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á'),
  "createdAt": zod.iso.datetime({}).describe('–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'),
  "branchId": zod.uuid().optional().describe('ID —Ñ—ñ–ª—ñ—ó, –¥–æ —è–∫–æ—ó –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä')
}).describe('–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞) —Å–∏—Å—Ç–µ–º–∏')

export const getCurrentUser401Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getCurrentUser403Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})

export const getCurrentUser500Response = zod.strictObject({
  "timestamp": zod.iso.datetime({}).describe('–ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏'),
  "status": zod.coerce.number().describe('HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥'),
  "error": zod.coerce.string().describe('–¢–∏–ø –ø–æ–º–∏–ª–∫–∏'),
  "message": zod.coerce.string().describe('–û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏'),
  "path": zod.coerce.string().describe('–®–ª—è—Ö –∑–∞–ø–∏—Ç—É'),
  "traceId": zod.coerce.string().optional().describe('–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏')
})
