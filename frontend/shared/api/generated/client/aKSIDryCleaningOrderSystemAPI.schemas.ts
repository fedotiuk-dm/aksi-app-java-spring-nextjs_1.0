/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * AKSI Dry Cleaning Order System API
 * API –¥–ª—è –æ–¥–Ω–æ—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å —Ö—ñ–º—á–∏—Å—Ç–∫–∏ –∑ DDD –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é
 * OpenAPI spec version: 1.0.0
 */
export interface Address {
  /**
   * –í—É–ª–∏—Ü—è —Ç–∞ –Ω–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É
   * @minLength 0
   * @maxLength 200
   */
  street?: string;
  /**
   * –ú—ñ—Å—Ç–æ
   * @minLength 0
   * @maxLength 100
   */
  city?: string;
  /**
   * –û–±–ª–∞—Å—Ç—å/—Ä–µ–≥—ñ–æ–Ω
   * @minLength 0
   * @maxLength 100
   */
  region?: string;
  /**
   * –ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å
   * @minLength 0
   * @maxLength 10
   */
  postalCode?: string;
  /**
   * –ö—Ä–∞—ó–Ω–∞
   * @minLength 0
   * @maxLength 100
   */
  country?: string;
}

export type ClientResponseCommunicationMethodsItem = typeof ClientResponseCommunicationMethodsItem[keyof typeof ClientResponseCommunicationMethodsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ClientResponseCommunicationMethodsItem = {
  PHONE: 'PHONE',
  SMS: 'SMS',
  VIBER: 'VIBER',
  TELEGRAM: 'TELEGRAM',
  EMAIL: 'EMAIL',
} as const;

export type ClientResponseSourceType = typeof ClientResponseSourceType[keyof typeof ClientResponseSourceType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ClientResponseSourceType = {
  REFERRAL: 'REFERRAL',
  ADVERTISING: 'ADVERTISING',
  SOCIAL_MEDIA: 'SOCIAL_MEDIA',
  WEBSITE: 'WEBSITE',
  WALKING_BY: 'WALKING_BY',
  REPEAT_CUSTOMER: 'REPEAT_CUSTOMER',
  OTHER: 'OTHER',
} as const;

export interface ClientResponse {
  /** –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä (UUID v4) */
  id: string;
  /** –Ü–º'—è –∫–ª—ñ—î–Ω—Ç–∞ */
  firstName: string;
  /** –ü—Ä—ñ–∑–≤–∏—â–µ –∫–ª—ñ—î–Ω—Ç–∞ */
  lastName: string;
  /** –ü–æ–≤–Ω–µ —ñ–º'—è (firstName + lastName) */
  readonly fullName?: string;
  /**
   * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
   * @pattern ^\+380\d{9}$
   */
  phone: string;
  /**
   * Email –∞–¥—Ä–µ—Å–∞
   * @minLength 0
   * @maxLength 254
   */
  email?: string;
  address?: Address;
  communicationMethods?: ClientResponseCommunicationMethodsItem[];
  sourceType?: ClientResponseSourceType;
  /** –ü—Ä–∏–º—ñ—Ç–∫–∏ */
  notes?: string;
  statistics?: ClientStatistics;
  /** –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è */
  readonly createdAt: string;
  /** –î–∞—Ç–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è */
  readonly updatedAt?: string;
}

export interface ClientStatistics {
  /** –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å */
  totalOrders?: number;
  /**
   * –ì—Ä–æ—à–æ–≤–∞ —Å—É–º–∞ (–≤ –≥—Ä–∏–≤–Ω—è—Ö)
   * @minimum 0
   */
  totalSpent?: number;
  /** –î–∞—Ç–∞ –≤ ISO 8601 —Ñ–æ—Ä–º–∞—Ç—ñ */
  lastOrderDate?: string;
  /**
   * –ì—Ä–æ—à–æ–≤–∞ —Å—É–º–∞ (–≤ –≥—Ä–∏–≤–Ω—è—Ö)
   * @minimum 0
   */
  averageOrderValue?: number;
  /** –ß–∏ —î –∫–ª—ñ—î–Ω—Ç VIP */
  isVip?: boolean;
  /** –î–∞—Ç–∞ –≤ ISO 8601 —Ñ–æ—Ä–º–∞—Ç—ñ */
  registrationDate?: string;
}

export interface FieldError {
  /** –ù–∞–∑–≤–∞ –ø–æ–ª—è –∑ –ø–æ–º–∏–ª–∫–æ—é */
  field: string;
  /** –û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ */
  message: string;
  /** –í—ñ–¥—Ö–∏–ª–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è */
  rejectedValue?: JsonNullableObject;
  /** –ö–æ–¥ –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó */
  code?: string;
}

export interface JsonNullableObject {
  present?: boolean;
}

export interface ValidationErrorResponse {
  /** –ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ */
  timestamp: string;
  /** HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ (400) */
  status: number;
  /** –¢–∏–ø –ø–æ–º–∏–ª–∫–∏ */
  error: string;
  /** –ó–∞–≥–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó */
  message: string;
  /** –®–ª—è—Ö –∑–∞–ø–∏—Ç—É */
  path: string;
  /** –°–ø–∏—Å–æ–∫ –ø–æ–º–∏–ª–æ–∫ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –ø–æ–ª—ñ–≤ */
  errors: FieldError[];
}

export interface ErrorResponse {
  /** –ß–∞—Å –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ */
  timestamp: string;
  /** HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ */
  status: number;
  /** –¢–∏–ø –ø–æ–º–∏–ª–∫–∏ */
  error: string;
  /** –û–ø–∏—Å –ø–æ–º–∏–ª–∫–∏ */
  message: string;
  /** –®–ª—è—Ö –∑–∞–ø–∏—Ç—É */
  path: string;
  /** –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ */
  traceId?: string;
}

export interface UpdateAddressRequest {
  /**
   * –í—É–ª–∏—Ü—è —Ç–∞ –Ω–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É
   * @minLength 0
   * @maxLength 200
   */
  street?: string;
  /**
   * –ú—ñ—Å—Ç–æ
   * @minLength 0
   * @maxLength 100
   */
  city?: string;
  /**
   * –û–±–ª–∞—Å—Ç—å/—Ä–µ–≥—ñ–æ–Ω
   * @minLength 0
   * @maxLength 100
   */
  region?: string;
  /**
   * –ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å
   * @minLength 0
   * @maxLength 10
   */
  postalCode?: string;
  /**
   * –ö—Ä–∞—ó–Ω–∞
   * @minLength 0
   * @maxLength 100
   */
  country?: string;
}

export type UpdateClientRequestCommunicationMethodsItem = typeof UpdateClientRequestCommunicationMethodsItem[keyof typeof UpdateClientRequestCommunicationMethodsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UpdateClientRequestCommunicationMethodsItem = {
  PHONE: 'PHONE',
  SMS: 'SMS',
  VIBER: 'VIBER',
  TELEGRAM: 'TELEGRAM',
  EMAIL: 'EMAIL',
} as const;

export type UpdateClientRequestSourceType = typeof UpdateClientRequestSourceType[keyof typeof UpdateClientRequestSourceType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UpdateClientRequestSourceType = {
  REFERRAL: 'REFERRAL',
  ADVERTISING: 'ADVERTISING',
  SOCIAL_MEDIA: 'SOCIAL_MEDIA',
  WEBSITE: 'WEBSITE',
  WALKING_BY: 'WALKING_BY',
  REPEAT_CUSTOMER: 'REPEAT_CUSTOMER',
  OTHER: 'OTHER',
} as const;

export interface UpdateClientRequest {
  /**
   * –Ü–º'—è –∫–ª—ñ—î–Ω—Ç–∞
   * @minLength 2
   * @maxLength 50
   */
  firstName?: string;
  /**
   * –ü—Ä—ñ–∑–≤–∏—â–µ –∫–ª—ñ—î–Ω—Ç–∞
   * @minLength 2
   * @maxLength 50
   */
  lastName?: string;
  /**
   * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
   * @pattern ^\+380\d{9}$
   */
  phone?: string;
  /**
   * Email –∞–¥—Ä–µ—Å–∞
   * @minLength 0
   * @maxLength 254
   */
  email?: string;
  address?: UpdateAddressRequest;
  /** –ë–∞–∂–∞–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –∑–≤'—è–∑–∫—É */
  communicationMethods?: UpdateClientRequestCommunicationMethodsItem[];
  sourceType?: UpdateClientRequestSourceType;
  /**
   * –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–∏–º—ñ—Ç–∫–∏ –ø—Ä–æ –∫–ª—ñ—î–Ω—Ç–∞
   * @minLength 0
   * @maxLength 500
   */
  notes?: string;
}

export type ClientContactsResponseCommunicationMethodsItem = typeof ClientContactsResponseCommunicationMethodsItem[keyof typeof ClientContactsResponseCommunicationMethodsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ClientContactsResponseCommunicationMethodsItem = {
  PHONE: 'PHONE',
  SMS: 'SMS',
  VIBER: 'VIBER',
  TELEGRAM: 'TELEGRAM',
  EMAIL: 'EMAIL',
} as const;

export interface ClientContactsResponse {
  /** –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä (UUID v4) */
  id?: string;
  /**
   * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
   * @pattern ^\+380\d{9}$
   */
  phone?: string;
  /**
   * Email –∞–¥—Ä–µ—Å–∞
   * @minLength 0
   * @maxLength 254
   */
  email?: string;
  communicationMethods?: ClientContactsResponseCommunicationMethodsItem[];
  address?: Address;
}

export type UpdateClientContactsRequestCommunicationMethodsItem = typeof UpdateClientContactsRequestCommunicationMethodsItem[keyof typeof UpdateClientContactsRequestCommunicationMethodsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UpdateClientContactsRequestCommunicationMethodsItem = {
  PHONE: 'PHONE',
  SMS: 'SMS',
  VIBER: 'VIBER',
  TELEGRAM: 'TELEGRAM',
  EMAIL: 'EMAIL',
} as const;

export interface UpdateClientContactsRequest {
  /**
   * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
   * @pattern ^\+380\d{9}$
   */
  phone?: string;
  /**
   * Email –∞–¥—Ä–µ—Å–∞
   * @minLength 0
   * @maxLength 254
   */
  email?: string;
  /** –ë–∞–∂–∞–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –∑–≤'—è–∑–∫—É */
  communicationMethods?: UpdateClientContactsRequestCommunicationMethodsItem[];
  address?: UpdateAddressRequest;
}

export interface CreateAddressRequest {
  /**
   * –í—É–ª–∏—Ü—è —Ç–∞ –Ω–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É
   * @minLength 0
   * @maxLength 200
   */
  street?: string;
  /**
   * –ú—ñ—Å—Ç–æ
   * @minLength 0
   * @maxLength 100
   */
  city?: string;
  /**
   * –û–±–ª–∞—Å—Ç—å/—Ä–µ–≥—ñ–æ–Ω
   * @minLength 0
   * @maxLength 100
   */
  region?: string;
  /**
   * –ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å
   * @minLength 0
   * @maxLength 10
   */
  postalCode?: string;
  /**
   * –ö—Ä–∞—ó–Ω–∞
   * @minLength 0
   * @maxLength 100
   */
  country?: string;
}

export type CreateClientRequestCommunicationMethodsItem = typeof CreateClientRequestCommunicationMethodsItem[keyof typeof CreateClientRequestCommunicationMethodsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreateClientRequestCommunicationMethodsItem = {
  PHONE: 'PHONE',
  SMS: 'SMS',
  VIBER: 'VIBER',
  TELEGRAM: 'TELEGRAM',
  EMAIL: 'EMAIL',
} as const;

export type CreateClientRequestSourceType = typeof CreateClientRequestSourceType[keyof typeof CreateClientRequestSourceType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreateClientRequestSourceType = {
  REFERRAL: 'REFERRAL',
  ADVERTISING: 'ADVERTISING',
  SOCIAL_MEDIA: 'SOCIAL_MEDIA',
  WEBSITE: 'WEBSITE',
  WALKING_BY: 'WALKING_BY',
  REPEAT_CUSTOMER: 'REPEAT_CUSTOMER',
  OTHER: 'OTHER',
} as const;

export interface CreateClientRequest {
  /**
   * –Ü–º'—è –∫–ª—ñ—î–Ω—Ç–∞
   * @minLength 2
   * @maxLength 50
   */
  firstName: string;
  /**
   * –ü—Ä—ñ–∑–≤–∏—â–µ –∫–ª—ñ—î–Ω—Ç–∞
   * @minLength 2
   * @maxLength 50
   */
  lastName: string;
  /**
   * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
   * @pattern ^\+380\d{9}$
   */
  phone: string;
  /**
   * Email –∞–¥—Ä–µ—Å–∞
   * @minLength 0
   * @maxLength 254
   */
  email?: string;
  address?: CreateAddressRequest;
  /**
   * –ë–∞–∂–∞–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –∑–≤'—è–∑–∫—É (–º—ñ–Ω—ñ–º—É–º –æ–¥–∏–Ω)
   * @minItems 1
   * @maxItems 2147483647
   */
  communicationMethods: CreateClientRequestCommunicationMethodsItem[];
  sourceType?: CreateClientRequestSourceType;
  /**
   * –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø—Ä–∏–º—ñ—Ç–∫–∏ –ø—Ä–æ –∫–ª—ñ—î–Ω—Ç–∞
   * @minLength 0
   * @maxLength 500
   */
  notes?: string;
}

export interface ClientPageResponse {
  content?: ClientResponse[];
  pageable?: PageableInfo;
  /** –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ */
  totalElements?: number;
  /** –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫ */
  totalPages?: number;
  /** –ß–∏ —Ü–µ –æ—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ */
  last?: boolean;
  /** –ß–∏ —Ü–µ –ø–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ */
  first?: boolean;
  /** –ö—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ */
  numberOfElements?: number;
}

export interface PageableInfo {
  /**
   * –ù–æ–º–µ—Ä –ø–æ—Ç–æ—á–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–ø–æ—á–∏–Ω–∞—é—á–∏ –∑ 0)
   * @minimum 0
   */
  page: number;
  /**
   * –†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
   * @minimum 1
   */
  size: number;
  /** –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ */
  totalElements: number;
  /** –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫ */
  totalPages: number;
  /** –ß–∏ —î –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –æ—Å—Ç–∞–Ω–Ω—å–æ—é */
  last: boolean;
  /** –ß–∏ —î –ø–æ—Ç–æ—á–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø–µ—Ä—à–æ—é */
  first: boolean;
  /** –ö—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ */
  numberOfElements: number;
  sort?: SortInfo;
}

/**
 * –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
 */
export interface SortInfo {
  /** –ß–∏ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */
  sorted?: boolean;
  /** –ß–∏ –Ω–µ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */
  unsorted?: boolean;
  /** –ß–∏ –≤—ñ–¥—Å—É—Ç–Ω—î —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */
  empty?: boolean;
}

export type ClientSearchRequestSourceType = typeof ClientSearchRequestSourceType[keyof typeof ClientSearchRequestSourceType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ClientSearchRequestSourceType = {
  REFERRAL: 'REFERRAL',
  ADVERTISING: 'ADVERTISING',
  SOCIAL_MEDIA: 'SOCIAL_MEDIA',
  WEBSITE: 'WEBSITE',
  WALKING_BY: 'WALKING_BY',
  REPEAT_CUSTOMER: 'REPEAT_CUSTOMER',
  OTHER: 'OTHER',
} as const;

export type ClientSearchRequestCommunicationMethodsItem = typeof ClientSearchRequestCommunicationMethodsItem[keyof typeof ClientSearchRequestCommunicationMethodsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ClientSearchRequestCommunicationMethodsItem = {
  PHONE: 'PHONE',
  SMS: 'SMS',
  VIBER: 'VIBER',
  TELEGRAM: 'TELEGRAM',
  EMAIL: 'EMAIL',
} as const;

/**
 * –ü–æ–ª–µ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
 */
export type ClientSearchRequestSort = typeof ClientSearchRequestSort[keyof typeof ClientSearchRequestSort];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ClientSearchRequestSort = {
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  createdAt: 'createdAt',
  totalOrders: 'totalOrders',
  totalSpent: 'totalSpent',
} as const;

export interface ClientSearchRequest {
  /**
   * –ó–∞–≥–∞–ª—å–Ω–∏–π –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
   * @minLength 2
   * @maxLength 100
   */
  query?: string;
  /**
   * –§—ñ–ª—å—Ç—Ä –∑–∞ —ñ–º'—è–º
   * @minLength 0
   * @maxLength 50
   */
  firstName?: string;
  /**
   * –§—ñ–ª—å—Ç—Ä –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º
   * @minLength 0
   * @maxLength 50
   */
  lastName?: string;
  /** –§—ñ–ª—å—Ç—Ä –∑–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º */
  phone?: string;
  /** –§—ñ–ª—å—Ç—Ä –∑–∞ email */
  email?: string;
  /**
   * –§—ñ–ª—å—Ç—Ä –∑–∞ –º—ñ—Å—Ç–æ–º
   * @minLength 0
   * @maxLength 100
   */
  city?: string;
  sourceType?: ClientSearchRequestSourceType;
  communicationMethods?: ClientSearchRequestCommunicationMethodsItem[];
  /** –î–∞—Ç–∞ –≤ ISO 8601 —Ñ–æ—Ä–º–∞—Ç—ñ */
  registrationDateFrom?: string;
  /** –î–∞—Ç–∞ –≤ ISO 8601 —Ñ–æ—Ä–º–∞—Ç—ñ */
  registrationDateTo?: string;
  /** –§—ñ–ª—å—Ç—Ä VIP –∫–ª—ñ—î–Ω—Ç—ñ–≤ */
  isVip?: boolean;
  /**
   * –ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
   * @minimum 0
   */
  page?: number;
  /**
   * –†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
   * @minimum 1
   * @maximum 100
   */
  size?: number;
  /** –ü–æ–ª–µ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è */
  sort?: ClientSearchRequestSort;
}

/**
 * –¢–∏–ø —Ç–æ–∫–µ–Ω—É (–∑–∞–≤–∂–¥–∏ Bearer)
 */
export type AuthResponseTokenType = typeof AuthResponseTokenType[keyof typeof AuthResponseTokenType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AuthResponseTokenType = {
  Bearer: 'Bearer',
} as const;

/**
 * –í—ñ–¥–ø–æ–≤—ñ–¥—å –∑ —Ç–æ–∫–µ–Ω–∞–º–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
 */
export interface AuthResponse {
  /** JWT access —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó API –∑–∞–ø–∏—Ç—ñ–≤ */
  accessToken: string;
  /** Refresh —Ç–æ–∫–µ–Ω –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É */
  refreshToken: string;
  /** –¢–∏–ø —Ç–æ–∫–µ–Ω—É (–∑–∞–≤–∂–¥–∏ Bearer) */
  tokenType: AuthResponseTokenType;
  /**
   * –ß–∞—Å –∂–∏—Ç—Ç—è access —Ç–æ–∫–µ–Ω—É –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
   * @minimum 300
   * @maximum 86400
   */
  expiresIn: number;
  user: UserResponse;
}

export type UserResponseRolesItem = typeof UserResponseRolesItem[keyof typeof UserResponseRolesItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserResponseRolesItem = {
  ADMIN: 'ADMIN',
  MANAGER: 'MANAGER',
  EMPLOYEE: 'EMPLOYEE',
  CASHIER: 'CASHIER',
  OPERATOR: 'OPERATOR',
} as const;

/**
 * –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export interface UserResponse {
  /** –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */
  id: string;
  /**
   * –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @minLength 3
   * @maxLength 50
   */
  username: string;
  /** Email –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */
  email: string;
  /**
   * –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @minLength 1
   * @maxLength 50
   */
  firstName: string;
  /**
   * –ü—Ä—ñ–∑–≤–∏—â–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @minLength 1
   * @maxLength 50
   */
  lastName: string;
  /**
   * –†–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @minItems 1
   * @maxItems 2147483647
   */
  roles: UserResponseRolesItem[];
  /** –ß–∏ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á */
  isActive: boolean;
  /** –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */
  createdAt: string;
}

/**
 * –ó–∞–ø–∏—Ç –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É
 */
export interface RefreshTokenRequest {
  /**
   * Refresh —Ç–æ–∫–µ–Ω –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è access —Ç–æ–∫–µ–Ω—É
   * @minLength 10
   * @maxLength 2147483647
   */
  refreshToken: string;
}

/**
 * –í—ñ–¥–ø–æ–≤—ñ–¥—å –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –ª–æ–≥–∞—É—Ç—É
 */
export interface LogoutResponse {
  /** –°—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü—ñ—ó */
  success: boolean;
  /** –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç */
  message: string;
}

/**
 * –ó–∞–ø–∏—Ç –Ω–∞ –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 */
export interface LoginRequest {
  /**
   * –Ü–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ email
   * @minLength 3
   * @maxLength 100
   * @pattern ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}|^[a-zA-Z0-9_]+$
   */
  username: string;
  /**
   * –ü–∞—Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @minLength 6
   * @maxLength 128
   */
  password: string;
}

export interface ClientSearchResponse {
  results?: ClientSearchResult[];
  /** –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–π–¥–µ–Ω–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ */
  totalFound?: number;
  /** –ß–∏ —î —â–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ */
  hasMore?: boolean;
}

export interface ClientSearchResult {
  /** –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä (UUID v4) */
  id?: string;
  firstName?: string;
  lastName?: string;
  readonly fullName?: string;
  /**
   * –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
   * @pattern ^\+380\d{9}$
   */
  phone?: string;
  /**
   * Email –∞–¥—Ä–µ—Å–∞
   * @minLength 0
   * @maxLength 254
   */
  email?: string;
  /** –î–∞—Ç–∞ –≤ ISO 8601 —Ñ–æ—Ä–º–∞—Ç—ñ */
  lastOrderDate?: string;
  /** –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å */
  orderCount?: number;
  /** –ü–æ–ª—è, —è–∫—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å –ø–æ—à—É–∫–æ–≤–æ–º—É –∑–∞–ø–∏—Ç—É */
  highlightedFields?: string[];
}

export type GetClientsParams = {
/**
 * –ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ (–ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ 0)
 * @minimum 0
 */
page?: number;
/**
 * –†–æ–∑–º—ñ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏
 * @minimum 1
 * @maximum 100
 */
size?: number;
/**
 * –ü–æ–ª–µ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
 */
sort?: string;
};

export type SearchClientsParams = {
/**
 * –ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç (—ñ–º'—è, –ø—Ä—ñ–∑–≤–∏—â–µ, —Ç–µ–ª–µ—Ñ–æ–Ω, email)
 * @minLength 2
 * @maxLength 100
 */
query: string;
/**
 * –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ (–¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è)
 * @minimum 1
 * @maximum 50
 */
limit?: number;
};

