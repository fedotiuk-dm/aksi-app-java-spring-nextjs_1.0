'use client';

import axios from 'axios';
import type { AxiosError, AxiosResponse, AxiosRequestConfig, AxiosInstance } from 'axios';

import { useAuthStore } from '@/features/auth';


// –†–æ–∑—à–∏—Ä—é—î–º–æ —Ç–∏–ø AxiosRequestConfig –¥–ª—è –≤–ª–∞—Å–Ω–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π
interface ExtendedAxiosRequestConfig extends AxiosRequestConfig {
  _retry?: boolean;
}

/**
 * –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø–æ–º–∏–ª–∫–∏ –∑ –±–µ–∫–µ–Ω–¥—É
 */
export interface ApiErrorResponse {
  timestamp?: string;
  status: number;
  message: string;
  errorType?: string;
  path?: string;
  method?: string;
  errorId?: string;
  errors?: Record<string, string>;
  stackTrace?: string[];
}

/**
 * –†–æ–∑—à–∏—Ä–µ–Ω–∏–π –∫–ª–∞—Å –ø–æ–º–∏–ª–∫–∏ API
 */
export class ApiError extends Error {
  status: number;
  errorId?: string;
  timestamp?: string;
  path?: string;
  method?: string;
  errors?: Record<string, string>;
  stackTrace?: string[];
  errorType?: string;

  constructor(error: ApiErrorResponse) {
    super(error.message);
    this.name = error.errorType || 'ApiError';
    this.status = error.status;
    this.errorId = error.errorId;
    this.timestamp = error.timestamp;
    this.path = error.path;
    this.method = error.method;
    this.errors = error.errors;
    this.stackTrace = error.stackTrace;
    this.errorType = error.errorType;
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ –∫–æ–Ω—Å–æ–ª—å
   */
  getConsoleData(): Record<string, unknown> {
    const consoleData: Record<string, unknown> = {
      message: this.message,
      status: this.status,
    };

    if (this.errorId) consoleData.errorId = this.errorId;
    if (this.path) consoleData.path = this.path;
    if (this.method) consoleData.method = this.method;
    if (this.errorType) consoleData.errorType = this.errorType;
    if (this.errors) consoleData.validationErrors = this.errors;
    if (this.stackTrace) consoleData.stackTrace = this.stackTrace;

    return consoleData;
  }

  /**
   * –í–∏–≤–µ—Å—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —É –∫–æ–Ω—Å–æ–ª—å
   */
  logToConsole(): void {
    // –ù–µ –ª–æ–≥—É—î–º–æ Network Error —Ç–∞ canceled - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó
    if (this.message === 'Network Error' || this.message === 'canceled') {
      return;
    }
    console.error(`üî¥ API Error [${this.status}] ${this.errorId || ''}: ${this.message}`);
    console.error(this.getConsoleData());
  }

  /**
   * –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –ø–æ–º–∏–ª–∫—É Axios –≤ ApiError
   */
  static fromAxiosError(error: AxiosError): ApiError {
    if (error.response?.data) {
      // –Ø–∫—â–æ —Å–µ—Ä–≤–µ—Ä –ø–æ–≤–µ—Ä–Ω—É–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—É –ø–æ–º–∏–ª–∫—É
      const responseData = error.response.data as Partial<ApiErrorResponse>;

      return new ApiError({
        status: error.response.status,
        message: responseData.message || error.message || "–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º",
        errorId: responseData.errorId,
        errorType: responseData.errorType,
        path: responseData.path,
        method: responseData.method,
        errors: responseData.errors,
        stackTrace: responseData.stackTrace,
      });
    }

    // –Ø–∫—â–æ –Ω–µ–º–∞—î —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    return new ApiError({
      status: error.response?.status || 500,
      message: error.message || "–ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º",
    });
  }
}

// –§—É–Ω–∫—Ü—ñ—è handleApiError –±—É–ª–∞ –≤–∏–¥–∞–ª–µ–Ω–∞, –±–æ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è
// –í –ø—Ä–æ–µ–∫—Ç—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —á–µ—Ä–µ–∑ React Query —Ç–∞ axios interceptors

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è axios
const AXIOS_CONFIG = {
  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8080',
  timeout: 30000,
  // –®–ª—è—Ö–∏, –¥–ª—è —è–∫–∏—Ö –Ω–µ –ª–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
  silentPaths: ['/users/me', '/api/auth/session', '/test-headers', '/api/users'],
  // –¢–∏–ø–∏ –ø–æ–º–∏–ª–æ–∫, —è–∫—ñ –Ω–µ –ª–æ–≥—É—î–º–æ
  silentErrors: ['Network Error', 'timeout', 'ECONNABORTED', 'canceled'],
};

// –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Ç—ñ–ª—å–∫–∏ –≤ development
if (process.env.NODE_ENV === 'development') {
  console.log('üîß Axios configuration:', {
    baseURL: AXIOS_CONFIG.baseURL,
    timeout: AXIOS_CONFIG.timeout,
    withCredentials: true,
    currentOrigin: typeof window !== 'undefined' ? window.location.origin : 'SSR',
  });
}

/**
 * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –µ–∫–∑–µ–º–ø–ª—è—Ä—É Axios –∑ –±–∞–∑–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
 */
export const apiClient: AxiosInstance = axios.create({
  baseURL: AXIOS_CONFIG.baseURL,
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
  },
  timeout: AXIOS_CONFIG.timeout,
  withCredentials: true, // –ó–∞–≤–∂–¥–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ cookies –≤ –∑–∞–ø–∏—Ç–∞—Ö
});

/**
 * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è cookie –∑–∞ –Ω–∞–∑–≤–æ—é
 */
function getCookie(name: string): string | null {
  if (typeof window === 'undefined') return null;
  
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) {
    return parts.pop()?.split(';').shift() || null;
  }
  return null;
}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è CSRF —Ç–æ–∫–µ–Ω—É –¥–æ –≤—Å—ñ—Ö –Ω–µ–±–µ–∑–ø–µ—á–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
apiClient.interceptors.request.use((config) => {
  // –î–æ–¥–∞—î–º–æ CSRF —Ç–æ–∫–µ–Ω –¥–ª—è POST, PUT, DELETE, PATCH –∑–∞–ø–∏—Ç—ñ–≤
  const method = config.method?.toUpperCase();
  if (method && ['POST', 'PUT', 'DELETE', 'PATCH'].includes(method)) {
    const csrfToken = getCookie('XSRF-TOKEN');
    if (csrfToken) {
      config.headers['X-XSRF-TOKEN'] = csrfToken;
    }
  }
  
  return config;
});

// –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ —É —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏
if (process.env.NODE_ENV === 'development') {
  apiClient.interceptors.request.use((config) => {
    // –ù–µ –ª–æ–≥—É—î–º–æ —á—É—Ç–ª–∏–≤—ñ –º–∞—Ä—à—Ä—É—Ç–∏
    const url = config.url || '';
    const isSilentPath = AXIOS_CONFIG.silentPaths.some(path => url.includes(path));

    if (!isSilentPath) {
      console.log(`[API Request] ${config.method?.toUpperCase()} ${config.url}`);
    }

    return config;
  });

  apiClient.interceptors.response.use((response) => {
    // –ù–µ –ª–æ–≥—É—î–º–æ —á—É—Ç–ª–∏–≤—ñ –º–∞—Ä—à—Ä—É—Ç–∏
    const url = response.config.url || '';
    const isSilentPath = AXIOS_CONFIG.silentPaths.some(path => url.includes(path));

    if (!isSilentPath) {
      console.log(`[API Response] ${response.status} ${response.config.url}`);
    }
    return response;
  });
}

// Cookie-based authentication –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î refresh token –ª–æ–≥—ñ–∫–∏
// –°–µ—Å—ñ—è —É–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è

/**
 * –î–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ API
 */
function logApiError(error: AxiosError) {
  // –ù–µ –ª–æ–≥—É—î–º–æ Network Error —ñ –¥–µ—è–∫—ñ —ñ–Ω—à—ñ –ø–æ–º–∏–ª–∫–∏
  if (AXIOS_CONFIG.silentErrors.some(msg => error.message?.includes(msg))) {
    return;
  }

  if (!error.response?.data) {
    if (error.request) {
      // –ó–∞–ø–∏—Ç –±—É–≤ –∑—Ä–æ–±–ª–µ–Ω–∏–π, –∞–ª–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–µ–º–∞—î
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ silent path
      const isSilentPath = AXIOS_CONFIG.silentPaths.some(path => error.config?.url?.includes(path));
      
      // –õ–æ–≥—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –≤ development —Ä–µ–∂–∏–º—ñ —ñ —è–∫—â–æ —Ü–µ –Ω–µ silent path
      if (process.env.NODE_ENV === 'development' && !isSilentPath) {
        console.error('–ù–µ–º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞', {
          url: error.config?.url,
          method: error.config?.method?.toUpperCase(),
          message: error.message,
        });
      }
    } else {
      // –ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É
      console.error('–ü–æ–º–∏–ª–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—É:', error.message);
    }
    return;
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–º–∏–ª–∫–∏
  const errorData = error.response.data as Partial<ApiErrorResponse>;
  console.error('–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏:', {
    status: error.response.status,
    message: errorData.message || '–ü–æ–º–∏–ª–∫–∞ –±–µ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è',
    errorId: errorData.errorId,
    path: errorData.path || error.config?.url,
    method: errorData.method || error.config?.method?.toUpperCase(),
    errors: errorData.errors,
    timestamp: errorData.timestamp,
  });

  // –í–∏–≤–æ–¥–∏–º–æ —Å—Ç–µ–∫ —Ç—Ä–µ–π—Å —É —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏
  if (process.env.NODE_ENV === 'development' && errorData.stackTrace) {
    console.error('–°—Ç–µ–∫ —Ç—Ä–µ–π—Å –ø–æ–º–∏–ª–∫–∏:', errorData.stackTrace);
  }
}

// –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
apiClient.interceptors.response.use(
  (response: AxiosResponse) => response,
  async (error: unknown) => {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–∞–ø–∏—Ç –±—É–≤ —Å–∫–∞—Å–æ–≤–∞–Ω–∏–π
    if (axios.isCancel(error)) {
      // –î–ª—è —Å–∫–∞—Å–æ–≤–∞–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥—Ö–∏–ª—è—î–º–æ –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è
      return Promise.reject(error);
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞ Axios
    if (!axios.isAxiosError(error)) {
      return Promise.reject(error);
    }
    
    // –¢–µ–ø–µ—Ä TypeScript –∑–Ω–∞—î, —â–æ error —î AxiosError
    const axiosError = error as AxiosError;
    
    // –ë–µ–∑ –¥–æ—Å—Ç—É–ø—É –¥–æ window –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Ä–µ—à—Ç—É –æ–±—Ä–æ–±–∫–∏
    if (typeof window === 'undefined') {
      return Promise.reject(axiosError);
    }

    const originalRequest = axiosError.config as ExtendedAxiosRequestConfig;
    if (!originalRequest) {
      return Promise.reject(axiosError);
    }

    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω—É –ø–æ–º–∏–ª–∫—É API –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
    const apiError = ApiError.fromAxiosError(axiosError);

    // –õ–æ–≥—É—î–º–æ –ø–æ–º–∏–ª–∫—É —É —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–æ–±–∫–∏ (–∫—Ä—ñ–º –¥–µ—è–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤ —Ç–∞ —Ç–∏–ø—ñ–≤ –ø–æ–º–∏–ª–æ–∫)
    const isNetworkError = axiosError.message === 'Network Error';
    const isCancelError = axiosError.message === 'canceled';
    const isSilentPath = AXIOS_CONFIG.silentPaths.some(path => originalRequest.url?.includes(path));
    
    if (process.env.NODE_ENV === 'development' && !isSilentPath && !isNetworkError && !isCancelError) {
      apiError.logToConsole();
    }

    // –û–±—Ä–æ–±–∫–∞ 500 Internal Server Error
    if (axiosError.response?.status === 500) {
      // –û—Å–æ–±–ª–∏–≤–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è /users/me - —Ü–µ –º–æ–∂–µ –æ–∑–Ω–∞—á–∞—Ç–∏, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
      if (originalRequest.url?.includes('/users/me')) {
        console.log('üìå 500 error on /users/me - user might not be authenticated');
        return Promise.reject(new ApiError({
          status: 401,
          message: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π',
          path: '/users/me',
          method: 'GET'
        }));
      }

      // –î–ª—è —ñ–Ω—à–∏—Ö 500 –ø–æ–º–∏–ª–æ–∫
      return Promise.reject(apiError);
    }

    // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è /users/me - –Ω–µ –ª–æ–≥—É—î–º–æ —ñ –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫–∏
    if (originalRequest.url?.includes('/users/me')) {
      const status = axiosError.response?.status;
      if (status === 401 || status === 404 || status === 500) {
        // –¢–∏—Ö–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É –±–µ–∑ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        return Promise.reject(new Error('User not authenticated'));
      }
    }

    // –û–±—Ä–æ–±–∫–∞ 401 Unauthorized - —Å–µ—Å—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å –∞–±–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
    if (axiosError.response?.status === 401) {
      // –Ü–≥–Ω–æ—Ä—É—î–º–æ 401 –¥–ª—è –ø–µ–≤–Ω–∏—Ö —à–ª—è—Ö—ñ–≤ (logout, session check)
      const ignorePaths = ['/auth/logout', '/auth/session', '/users/me'];
      if (ignorePaths.some(path => originalRequest.url?.includes(path))) {
        return Promise.reject(axiosError);
      }

      // –î–ª—è —ñ–Ω—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
      useAuthStore.getState().logout();
      const callbackUrl = window.location.pathname + window.location.search;
      window.location.href = `/login?callbackUrl=${encodeURIComponent(callbackUrl)}`;
      return Promise.reject(axiosError);
    }

    // –û–±—Ä–æ–±–∫–∞ 403 Forbidden
    if (axiosError.response?.status === 403) {
      // –ù–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω –¥–ª—è /users/me
      if (!originalRequest.url?.includes('/users/me')) {
        useAuthStore.getState().logout();
        const callbackUrl = window.location.pathname + window.location.search;
        window.location.href = `/login?callbackUrl=${encodeURIComponent(callbackUrl)}`;
      }
    }

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –ø–æ–º–∏–ª–∫–∏
    logApiError(axiosError);

    return Promise.reject(axiosError);
  }
);

export default apiClient;
