/**
 * @fileoverview –†–æ–∑—à–∏—Ä–µ–Ω–∏–π Orval fetcher –∑ advanced error handling —Ç–∞ interceptors
 *
 * Features:
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —á–µ—Ä–µ–∑ JWT —Ç–æ–∫–µ–Ω–∏
 * - Retry –ª–æ–≥—ñ–∫–∞ –∑ exponential backoff
 * - –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
 * - Interceptors –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
 * - –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ AbortController
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π refresh —Ç–æ–∫–µ–Ω—ñ–≤ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
 */

import axios, {
  type AxiosRequestConfig,
  type AxiosResponse,
  type AxiosError,
  type InternalAxiosRequestConfig,
} from 'axios';

// üîß –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ Axios –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ metadata
declare module 'axios' {
  interface InternalAxiosRequestConfig {
    metadata?: {
      startTime: number;
    };
  }
}

// üîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
const BASE_URL = 'http://localhost:8080/api';

const DEFAULT_TIMEOUT = 30000; // 30 —Å–µ–∫—É–Ω–¥
const MAX_RETRY_ATTEMPTS = 3;
const RETRY_DELAY_BASE = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –±–∞–∑–æ–≤–∞ –∑–∞—Ç—Ä–∏–º–∫–∞

// üéØ –¢–∏–ø–∏ –¥–ª—è –∫—Ä–∞—â–æ—ó —Ç–∏–ø—ñ–∑–∞—Ü—ñ—ó
interface RetryConfig {
  attempts: number;
  delay: number;
}

interface ApiError extends Error {
  status?: number;
  code?: string;
  details?: any;
}

// üîß –¢–∏–ø –¥–ª—è API –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑ –ø–æ–º–∏–ª–∫–æ—é
interface ApiErrorResponse {
  message?: string;
  error?: string;
  details?: any;
}

// üîê –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ç–æ–∫–µ–Ω–∞–º–∏
// –ö–µ—à –¥–ª—è —Ç–æ–∫–µ–Ω–∞
let cachedToken: string | null = null;

const getAuthToken = async (): Promise<string | null> => {
  if (typeof window === 'undefined') return null;

  // –Ø–∫—â–æ —î –∫–µ—à–æ–≤–∞–Ω–∏–π —Ç–æ–∫–µ–Ω, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –π–æ–≥–æ
  if (cachedToken) return cachedToken;

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î —Ç–æ–∫–µ–Ω –≤ localStorage
  const storedToken = localStorage.getItem('accessToken');
  if (storedToken) {
    // –Ø–∫—â–æ —î –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Ç–æ–∫–µ–Ω, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
    cachedToken = storedToken;
    if (process.env.NODE_ENV === 'development') {
      console.log('üîê –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ accessToken –∑ localStorage');
    }
    return cachedToken;
  }

  // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null
  if (process.env.NODE_ENV === 'development') {
    console.log('üîê –ù–µ–º–∞—î accessToken –≤ localStorage');
  }
  return null;
};

const clearAuthToken = (): void => {
  if (typeof window === 'undefined') return;

  // –û—á–∏—â—É—î–º–æ –∫–µ—à —Ç–æ–∫–µ–Ω–∞
  cachedToken = null;

  // –û—á–∏—â—É—î–º–æ —Ç–æ–∫–µ–Ω–∏ –∑ localStorage
  localStorage.removeItem('accessToken');
  localStorage.removeItem('refreshToken');

  if (process.env.NODE_ENV === 'development') {
    console.log('üóëÔ∏è –¢–æ–∫–µ–Ω–∏ –æ—á–∏—â–µ–Ω–æ –∑ –∫–µ—à—É —Ç–∞ localStorage');
  }
};

// üöÄ –°—Ç–≤–æ—Ä—é—î–º–æ axios instance –∑ –±–∞–∑–æ–≤–æ—é –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é
const apiClient = axios.create({
  baseURL: BASE_URL,
  timeout: DEFAULT_TIMEOUT,
  withCredentials: true,
  headers: {
    'Content-Type': 'application/json',
    Accept: 'application/json',
    'X-Requested-With': 'XMLHttpRequest',
    // –î–æ–¥–∞—î–º–æ –≤–µ—Ä—Å—ñ—é –∫–ª—ñ—î–Ω—Ç–∞ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
    'X-Client-Version': process.env.NEXT_PUBLIC_APP_VERSION || 'dev',
  },
});

// üîÑ Utility –¥–ª—è retry –ª–æ–≥—ñ–∫–∏ –∑ exponential backoff
const calculateRetryDelay = (attempt: number): number => {
  return Math.min(RETRY_DELAY_BASE * Math.pow(2, attempt - 1), 30000);
};

const shouldRetry = (error: AxiosError, attempt: number): boolean => {
  // –ù–µ retry –¥–ª—è –∫–ª—ñ—î–Ω—Ç—Å—å–∫–∏—Ö –ø–æ–º–∏–ª–æ–∫ (4xx)
  if (error.response?.status && error.response.status >= 400 && error.response.status < 500) {
    return false;
  }

  // –ù–µ retry –¥–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
  if (error.code === 'ECONNABORTED' || error.code === 'ERR_CANCELED') {
    return false;
  }

  // Retry —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –º–µ—Ä–µ–∂–µ–≤–∏—Ö –ø—Ä–æ–±–ª–µ–º
  return attempt < MAX_RETRY_ATTEMPTS;
};

// üìù Request interceptor –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó —Ç–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è
apiClient.interceptors.request.use(
  async (config: InternalAxiosRequestConfig) => {
    // –î–æ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
    const token = await getAuthToken();
    if (token) {
      config.headers['Authorization'] = `Bearer ${token}`;
    }

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤ –≤ development
    if (process.env.NODE_ENV === 'development') {
      console.log(`üöÄ API Request: ${config.method?.toUpperCase()} ${config.url}`, {
        headers: config.headers,
        data: config.data,
        params: config.params,
      });
    }

    // –î–æ–¥–∞—î–º–æ timestamp –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
    config.metadata = { startTime: Date.now() };

    return config;
  },
  (error) => {
    console.error('‚ùå Request interceptor error:', error);
    return Promise.reject(error);
  }
);

// üì• Response interceptor –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è
apiClient.interceptors.response.use(
  (response: AxiosResponse) => {
    // –õ–æ–≥—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –≤ development
    if (process.env.NODE_ENV === 'development') {
      const duration = Date.now() - (response.config.metadata?.startTime || 0);
      console.log(
        `‚úÖ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`,
        {
          status: response.status,
          duration: `${duration}ms`,
          data: response.data,
        }
      );
    }

    return response;
  },
  async (error: AxiosError) => {
    const originalRequest = error.config as InternalAxiosRequestConfig & { _retry?: boolean };

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ (–∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—î—é –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–∏—Ö 404 —Ç–∞ —Å–∫–∞—Å–æ–≤–∞–Ω–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤)
    if (process.env.NODE_ENV === 'development') {
      const isSelectedClientNotFound =
        error.response?.status === 404 && originalRequest?.url?.includes('/selected-client');

      const isCanceledRequest = error.message === 'canceled' || error.code === 'ERR_CANCELED';

      if (isCanceledRequest) {
        // –°–∫–∞—Å–æ–≤–∞–Ω—ñ –∑–∞–ø–∏—Ç–∏ - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–µ –ª–æ–≥—É—î–º–æ —è–∫ –ø–æ–º–∏–ª–∫–∏
        console.log(
          `üö´ Request canceled: ${originalRequest?.method?.toUpperCase()} ${originalRequest?.url}`
        );
      } else if (!isSelectedClientNotFound) {
        console.error(
          `‚ùå API Error: ${originalRequest?.method?.toUpperCase()} ${originalRequest?.url}`,
          {
            status: error.response?.status,
            data: error.response?.data,
            message: error.message,
          }
        );
      } else {
        console.log(
          `‚ÑπÔ∏è No client selected yet: ${originalRequest?.method?.toUpperCase()} ${originalRequest?.url} (404)`
        );
      }
    }

    // –û–±—Ä–æ–±–∫–∞ 401 (Unauthorized)
    if (error.response?.status === 401 && !originalRequest._retry) {
      originalRequest._retry = true;

      // –û—á–∏—â—É—î–º–æ —Ç–æ–∫–µ–Ω
      clearAuthToken();

      // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É refresh —Ç–æ–∫–µ–Ω—ñ–≤ —Ç—É—Ç
      // –ù–∞—Ä–∞–∑—ñ –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
      if (typeof window !== 'undefined') {
        console.warn('üîí Unauthorized access - redirecting to login');
        // window.location.href = '/login';
      }

      return Promise.reject(error);
    }

    // Retry –ª–æ–≥—ñ–∫–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫
    if (!originalRequest._retry && shouldRetry(error, 1)) {
      originalRequest._retry = true;

      const delay = calculateRetryDelay(1);
      console.warn(`‚è≥ Retrying request after ${delay}ms...`);

      await new Promise((resolve) => setTimeout(resolve, delay));
      return apiClient(originalRequest);
    }

    return Promise.reject(error);
  }
);

// üîß –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è Orval –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ—é –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫
const customInstance = <T>(
  config: AxiosRequestConfig,
  options?: AxiosRequestConfig
): Promise<T> => {
  // –ú–µ—Ä–¥–∂–∏–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
  const mergedConfig = {
    ...config,
    ...options,
  };

  // –î–æ–¥–∞—î–º–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É AbortController —è–∫—â–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ
  if (!mergedConfig.signal && typeof AbortController !== 'undefined') {
    const controller = new AbortController();
    mergedConfig.signal = controller.signal;

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–∫–∞—Å–æ–≤—É—î–º–æ –∑–∞–ø–∏—Ç —á–µ—Ä–µ–∑ timeout
    const timeoutId = setTimeout(() => {
      controller.abort();
    }, mergedConfig.timeout || DEFAULT_TIMEOUT);

    // –û—á–∏—â—É—î–º–æ timeout –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É
    const originalThen = mergedConfig.signal.addEventListener;
    if (originalThen) {
      controller.signal.addEventListener('abort', () => {
        clearTimeout(timeoutId);
      });
    }
  }

  const promise = apiClient(mergedConfig)
    .then(({ data }) => {
      // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω—É –æ–±—Ä–æ–±–∫—É —É—Å–ø—ñ—à–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
      return data;
    })
    .catch((error: AxiosError) => {
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–ø—ñ–∑–æ–≤–∞–Ω—É –ø–æ–º–∏–ª–∫—É
      const apiError: ApiError = new Error(
        (error.response?.data as ApiErrorResponse)?.message ||
          error.message ||
          '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ API'
      );

      apiError.status = error.response?.status;
      apiError.code = error.code;
      apiError.details = error.response?.data;

      // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω—É –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫ (toast, –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤ Sentry, —Ç–æ—â–æ)
      if (process.env.NODE_ENV === 'production') {
        // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –ø–æ–º–∏–ª–æ–∫ –≤ —Å–∏—Å—Ç–µ–º—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
        console.error('Production API Error:', {
          url: error.config?.url,
          method: error.config?.method,
          status: error.response?.status,
          message: apiError.message,
        });
      }

      throw apiError;
    });

  return promise;
};

// üéØ –î–æ–¥–∞—Ç–∫–æ–≤—ñ —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ API
export const apiUtils = {
  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∑'—î–¥–Ω–∞–Ω–Ω—è
  async healthCheck(): Promise<boolean> {
    try {
      await customInstance({ url: '/health', method: 'GET' });
      return true;
    } catch {
      return false;
    }
  },

  // –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–µ—à—ñ–≤ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
  clearCache(): void {
    // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –æ—á–∏—â–µ–Ω–Ω—è React Query –∫–µ—à—É
    console.log('üóëÔ∏è API cache cleared');
  },

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
  getToken: getAuthToken,

  // –û—á–∏—â–µ–Ω–Ω—è —Ç–æ–∫–µ–Ω—É
  clearToken: clearAuthToken,

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —î —Ç–æ–∫–µ–Ω
  async hasValidToken(): Promise<boolean> {
    const token = await getAuthToken();
    if (!token) return false;

    // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ expire
    try {
      // –ü—Ä–æ—Å—Ç–∏–π decode JWT –±–µ–∑ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ expire)
      const payload = JSON.parse(atob(token.split('.')[1]));
      return payload.exp * 1000 > Date.now();
    } catch {
      return false;
    }
  },
};

// Default export –¥–ª—è Orval
export default customInstance;

// Named export –¥–ª—è Orval –∑ –æ–ø—Ü—ñ—î—é name
export const orvalFetcher = customInstance;
