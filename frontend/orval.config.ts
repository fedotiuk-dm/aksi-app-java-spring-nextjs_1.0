/**
 * @fileoverview –î–û–ú–ï–ù–ù–ê –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Orval –∑–∞ –ø—Ä–∏–Ω—Ü–∏–ø–æ–º "DDD inside, FSD outside"
 *
 * üéØ –§—ñ–ª–æ—Å–æ—Ñ—ñ—è: "–ö–æ–∂–µ–Ω –¥–æ–º–µ–Ω - –æ–∫—Ä–µ–º–∏–π –º–æ–¥—É–ª—å + –∫–æ–º–ø–æ–∑–∏—Ü—ñ—è –≤ UI"
 *
 * ‚úÖ –©–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –¥–ª—è –ö–û–ñ–ù–û–ì–û –¥–æ–º–µ–Ω—É:
 * - {domain}Api.ts - –≤—Å—ñ React Query —Ö—É–∫–∏ (useQuery, useMutation)
 * - index.ts - TypeScript —Ç–∏–ø–∏ + BARREL EXPORT
 * - schemas.zod.ts - –≤—Å—ñ Zod —Å—Ö–µ–º–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
 *
 * üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç:
 * shared/api/generated/
 *   ‚îú‚îÄ‚îÄ auth/             # Auth Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ authApi.ts                - —Ö—É–∫–∏ (useLogin, useLogout, useGetSessionInfo —Ç–æ—â–æ)
 *   ‚îÇ   ‚îú‚îÄ‚îÄ index.ts                  - —Ç–∏–ø–∏ + BARREL: export * from './authApi'
 *   ‚îÇ   ‚îî‚îÄ‚îÄ schemas.zod.ts            - Zod —Å—Ö–µ–º–∏
 *   ‚îú‚îÄ‚îÄ user/             # User Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ userApi.ts                - —Ö—É–∫–∏ (useListUsers, useCreateUser, useUpdateUser —Ç–æ—â–æ)
 *   ‚îÇ   ‚îú‚îÄ‚îÄ index.ts                  - —Ç–∏–ø–∏ + BARREL: export * from './userApi'
 *   ‚îÇ   ‚îî‚îÄ‚îÄ schemas.zod.ts            - Zod —Å—Ö–µ–º–∏
 *   ‚îú‚îÄ‚îÄ customer/         # Customer Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ customerApi.ts            - —Ö—É–∫–∏ (useListCustomers, useCreateCustomer —Ç–æ—â–æ)
 *   ‚îÇ   ‚îú‚îÄ‚îÄ index.ts                  - —Ç–∏–ø–∏ + BARREL: export * from './customerApi'
 *   ‚îÇ   ‚îî‚îÄ‚îÄ schemas.zod.ts            - Zod —Å—Ö–µ–º–∏
 *   ‚îî‚îÄ‚îÄ serviceItem/      # Service Item Domain
 *       ‚îú‚îÄ‚îÄ serviceItemApi.ts         - —Ö—É–∫–∏ (useListServices, useListItems, useGetServiceItemPrice —Ç–æ—â–æ)
 *       ‚îú‚îÄ‚îÄ index.ts                  - —Ç–∏–ø–∏ + BARREL: export * from './serviceItemApi'
 *       ‚îî‚îÄ‚îÄ schemas.zod.ts            - Zod —Å—Ö–µ–º–∏
 *
 * üöÄ –ü–ï–†–ï–í–ê–ì–ò –ö–û–ú–ü–û–ó–ò–¶–Ü–á:
 * ‚úÖ import { useLogin } from '@/shared/api/generated/auth'
 * ‚úÖ import { useListUsers } from '@/shared/api/generated/user'
 * ‚úÖ import { useCreateCustomer } from '@/shared/api/generated/customer'
 * ‚úÖ import { useListServices } from '@/shared/api/generated/serviceItem'
 *
 * üéØ ORDER WIZARD: UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é –¥–æ–º–µ–Ω–Ω–∏—Ö API
 */

import type { Config } from '@orval/core';

// üîß –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const API_BASE_URL = process.env.ORVAL_API_URL || 'http://localhost:8080/v3/api-docs';
const MUTATOR_PATH = './lib/api/orval-fetcher.ts';
const MUTATOR_NAME = 'orvalFetcher';

// üéØ –î–û–ú–ï–ù–ù–Ü –¢–ï–ì–ò (—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω—ñ –∑ backend OpenAPI)
const DOMAIN_TAGS = {
  // üîê Auth Domain
  auth: ['auth'],

  // üë• User Domain
  user: ['users'],

  // üë§ Customer Domain
  customer: ['customers'],

  // üè∑Ô∏è Service Item Domain
  serviceItem: ['services', 'items', 'service-items'],
};

// üè≠ –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–º–µ–Ω–Ω–∏—Ö –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
const createDomainConfig = (name: string, tags: string[]) => ({
  // React Query —Ö—É–∫–∏
  [`${name}-hooks`]: {
    input: {
      target: API_BASE_URL,
      filters: {
        mode: 'include' as const,
        tags,
      },
    },
    output: {
      target: `shared/api/generated/${name}`,
      client: 'react-query' as const,
      mode: 'split' as const,
      override: {
        mutator: {
          path: MUTATOR_PATH,
          name: MUTATOR_NAME,
          default: true,
        },
        requestOptions: true,
        query: {
          useQuery: true,
          useInfiniteQuery: true,
          useMutation: true,
          version: 5 as const,
        },
        // üîê Basic Auth –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ OpenAPI
        requestConfig: {
          auth: {
            username: 'admin',
            password: 'admin123',
          },
        },
      },
    },
  },
  // Zod —Å—Ö–µ–º–∏
  [`${name}-zod`]: {
    input: {
      target: API_BASE_URL,
      filters: {
        mode: 'include' as const,
        tags,
      },
    },
    output: {
      target: `shared/api/generated/${name}/schemas.zod.ts`,
      client: 'zod' as const,
      mode: 'single' as const,
      override: {
        // üîê Basic Auth –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ OpenAPI
        requestConfig: {
          auth: {
            username: 'admin',
            password: 'admin123',
          },
        },
      },
    },
  },
});

const config: Config = {
  // üîê AUTH DOMAIN
  ...createDomainConfig('auth', DOMAIN_TAGS.auth),

  // üë• USER DOMAIN
  ...createDomainConfig('user', DOMAIN_TAGS.user),

  // üë§ CUSTOMER DOMAIN
  ...createDomainConfig('customer', DOMAIN_TAGS.customer),

  // üè∑Ô∏è SERVICE ITEM DOMAIN
  ...createDomainConfig('serviceItem', DOMAIN_TAGS.serviceItem),
};

export default config;
