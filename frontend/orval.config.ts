/**
 * @fileoverview –°–ü–†–û–©–ï–ù–ê –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Orval: –î–æ–∑–≤–æ–ª—è—î–º–æ Orval —Ä–æ–±–∏—Ç–∏ —Å–≤–æ—é —Ä–æ–±–æ—Ç—É
 *
 * üéØ –§—ñ–ª–æ—Å–æ—Ñ—ñ—è: "Orval –∑–Ω–∞—î —è–∫ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏ - –Ω–µ –∑–∞–≤–∞–∂–∞—î–º–æ –π–æ–º—É"
 *
 * ‚úÖ –©–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û:
 * - –¢–æ–Ω–∫—ñ Axios –∫–ª—ñ—î–Ω—Ç–∏ (–ë–ï–ó React Query)
 * - –Ü–Ω–¥–µ–∫—Å–∏ –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É
 * - Zod —Å—Ö–µ–º–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
 * - TypeScript —Ç–∏–ø–∏
 *
 * üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ):
 * shared/api/generated/wizard/
 *   ‚îú‚îÄ‚îÄ aksiApi.ts           - –¢–æ–Ω–∫—ñ Axios —Ñ—É–Ω–∫—Ü—ñ—ó
 *   ‚îú‚îÄ‚îÄ aksiApi.schemas.ts   - TypeScript —Ç–∏–ø–∏
 *   ‚îú‚îÄ‚îÄ index.ts             - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å
 *   ‚îî‚îÄ‚îÄ zod/
 *       ‚îú‚îÄ‚îÄ aksiApi.ts       - Zod —Å—Ö–µ–º–∏
 *       ‚îî‚îÄ‚îÄ index.ts         - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å
 */

import type { Config } from '@orval/core';

// üîß –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const API_BASE_URL = 'http://localhost:8080/api/v3/api-docs';
const MUTATOR_PATH = './lib/api/orval-fetcher.ts';
const MUTATOR_NAME = 'orvalFetcher';

// üéØ –¢–µ–≥–∏ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
const ORDER_WIZARD_TAGS = [
  'Order Wizard - Stage 1',
  'Order Wizard - Stage 2',
  'Order Wizard - Stage 3',
  'Order Wizard - Stage 4',
  'Order Wizard - Stage 2 Substep 1',
  'Order Wizard - Stage 2 Substep 2',
  'Order Wizard - Stage 2 Substep 3',
  'Order Wizard - Stage 2 Substep 4',
  'Order Wizard - Stage 2 Substep 5',
  'Order Wizard - Main API',
];

const AUTH_TAGS = ['Authentication'];

const config: Config = {
  // üîê Authentication API - –¢–æ–Ω–∫—ñ Axios –∫–ª—ñ—î–Ω—Ç–∏
  'auth-api': {
    input: {
      target: API_BASE_URL,
      filters: {
        tags: AUTH_TAGS,
      },
    },
    output: {
      target: './shared/api/generated/auth',
      client: 'axios', // üéØ –¢—ñ–ª—å–∫–∏ axios - –ë–ï–ó react-query
      mode: 'split', // Orval –°–ê–ú —Å—Ç–≤–æ—Ä–∏—Ç—å —ñ–Ω–¥–µ–∫—Å–∏
      override: {
        mutator: {
          path: MUTATOR_PATH,
          name: MUTATOR_NAME,
          default: true,
        },
      },
    },
  },

  // üîê Authentication Zod —Å—Ö–µ–º–∏
  'auth-zod': {
    input: {
      target: API_BASE_URL,
      filters: {
        tags: AUTH_TAGS,
      },
    },
    output: {
      target: './shared/api/generated/auth/zod',
      client: 'zod',
      mode: 'split', // Orval –°–ê–ú —Å—Ç–≤–æ—Ä–∏—Ç—å —ñ–Ω–¥–µ–∫—Å–∏
      override: {
        zod: {
          generate: {
            body: true,
            param: true,
            query: true,
            header: true,
            response: true,
          },
          // üõ°Ô∏è Zod strict —Ä–µ–∂–∏–º –¥–ª—è "zero trust" API
          strict: {
            param: true,
            query: true,
            header: true,
            body: true,
            response: true,
          },
          // üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤
          coerce: {
            param: true,
            query: true,
            body: true,
            response: true,
          },
          generateEachHttpStatus: true,
        },
      },
    },
  },

  // üî• Order Wizard - –¢–æ–Ω–∫—ñ Axios –∫–ª—ñ—î–Ω—Ç–∏
  'wizard-api': {
    input: {
      target: API_BASE_URL,
      filters: {
        tags: ORDER_WIZARD_TAGS,
      },
    },
    output: {
      target: './shared/api/generated/wizard',
      client: 'axios', // üéØ –¢—ñ–ª—å–∫–∏ axios - –ë–ï–ó react-query
      mode: 'split', // Orval –°–ê–ú —Å—Ç–≤–æ—Ä–∏—Ç—å —ñ–Ω–¥–µ–∫—Å–∏
      override: {
        mutator: {
          path: MUTATOR_PATH,
          name: MUTATOR_NAME,
          default: true,
        },
      },
    },
  },

  // üî• Zod —Å—Ö–µ–º–∏
  'wizard-zod': {
    input: {
      target: API_BASE_URL,
      filters: {
        tags: ORDER_WIZARD_TAGS,
      },
    },
    output: {
      target: './shared/api/generated/wizard/zod',
      client: 'zod',
      mode: 'split', // Orval –°–ê–ú —Å—Ç–≤–æ—Ä–∏—Ç—å —ñ–Ω–¥–µ–∫—Å–∏
      override: {
        zod: {
          generate: {
            body: true,
            param: true,
            query: true,
            header: true,
            response: true,
          },
          // üõ°Ô∏è Zod strict —Ä–µ–∂–∏–º –¥–ª—è "zero trust" API
          strict: {
            param: true, // –°—Ç—Ä–æ–≥–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
            query: true, // –°—Ç—Ä–æ–≥–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è query
            header: true, // –°—Ç—Ä–æ–≥–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∑–∞–≥–æ–ª–æ–≤–∫—ñ–≤
            body: true, // –°—Ç—Ä–æ–≥–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è body
            response: true, // –°—Ç—Ä–æ–≥–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
          },
          // üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ (–±–∞–∑–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞)
          coerce: {
            param: true, // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
            query: true, // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î query
            body: true, // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î body –ø–æ–ª—è
            response: true, // –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î response –ø–æ–ª—è
          },
          generateEachHttpStatus: true,
        },
      },
    },
  },
};

export default config;
