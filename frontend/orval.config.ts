/**
 * @fileoverview –î–û–ú–ï–ù–ù–ê –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Orval –∑–∞ –ø—Ä–∏–Ω—Ü–∏–ø–æ–º "DDD inside, FSD outside"
 *
 * üéØ –§—ñ–ª–æ—Å–æ—Ñ—ñ—è: "–ö–æ–∂–µ–Ω –¥–æ–º–µ–Ω - –æ–∫—Ä–µ–º–∏–π –º–æ–¥—É–ª—å + –∫–æ–º–ø–æ–∑–∏—Ü—ñ—è –≤ UI"
 *
 * ‚úÖ –©–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –¥–ª—è –ö–û–ñ–ù–û–ì–û –¥–æ–º–µ–Ω—É:
 * - {domain}Api.ts - –≤—Å—ñ React Query —Ö—É–∫–∏ (useQuery, useMutation)
 * - {domain}Api.schemas.ts - –≤—Å—ñ TypeScript —Ç–∏–ø–∏
 * - schemas.zod.ts - –≤—Å—ñ Zod —Å—Ö–µ–º–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
 * - index.ts - BARREL EXPORT (–ø—É–±–ª—ñ—á–Ω–µ API –¥–æ–º–µ–Ω—É)
 *
 * üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç:
 * shared/api/generated/
 *   ‚îú‚îÄ‚îÄ client/           # Client Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ clientApi.ts              - —Ö—É–∫–∏ (useClients, useCreateClient —Ç–æ—â–æ)
 *   ‚îÇ   ‚îú‚îÄ‚îÄ clientApi.schemas.ts      - —Ç–∏–ø–∏ (ClientResponse, CreateClientRequest —Ç–æ—â–æ)
 *   ‚îÇ   ‚îú‚îÄ‚îÄ schemas.zod.ts            - Zod —Å—Ö–µ–º–∏
 *   ‚îÇ   ‚îî‚îÄ‚îÄ index.ts                  - BARREL: export * from './clientApi'
 *   ‚îú‚îÄ‚îÄ branch/           # Branch Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ branchApi.ts              - —Ö—É–∫–∏ (useBranches, useCreateBranch —Ç–æ—â–æ)
 *   ‚îÇ   ‚îî‚îÄ‚îÄ ...
 *   ‚îú‚îÄ‚îÄ order/            # Order Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ orderApi.ts               - —Ö—É–∫–∏ (useOrders, useCreateOrder —Ç–æ—â–æ)
 *   ‚îÇ   ‚îî‚îÄ‚îÄ ...
 *   ‚îú‚îÄ‚îÄ item/             # Item Domain
 *   ‚îÇ   ‚îú‚îÄ‚îÄ itemApi.ts                - —Ö—É–∫–∏ (useServiceCategories, usePriceList —Ç–æ—â–æ)
 *   ‚îÇ   ‚îî‚îÄ‚îÄ ...
 *   ‚îî‚îÄ‚îÄ document/         # Document Domain
 *       ‚îú‚îÄ‚îÄ documentApi.ts            - —Ö—É–∫–∏ (useReceipts, useDocuments —Ç–æ—â–æ)
 *       ‚îî‚îÄ‚îÄ ...
 *
 * üöÄ –ü–ï–†–ï–í–ê–ì–ò –ö–û–ú–ü–û–ó–ò–¶–Ü–á:
 * ‚úÖ import { useCreateClient } from '@/shared/api/generated/client'
 * ‚úÖ import { useBranches } from '@/shared/api/generated/branch'
 * ‚úÖ import { useCreateOrder } from '@/shared/api/generated/order'
 * ‚úÖ import { useServiceCategories } from '@/shared/api/generated/item'
 *
 * üéØ ORDER WIZARD: UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é –¥–æ–º–µ–Ω–Ω–∏—Ö API
 */

import type { Config } from '@orval/core';

// üîß –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const API_BASE_URL = process.env.ORVAL_API_URL || 'http://localhost:8080/api/v3/api-docs';
const MUTATOR_PATH = './lib/api/orval-fetcher.ts';
const MUTATOR_NAME = 'orvalFetcher';

// üéØ –î–û–ú–ï–ù–ù–Ü –¢–ï–ì–ò (—Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω—ñ –∑ backend OpenAPI)
const DOMAIN_TAGS = {
  // üë§ Client Domain
  client: ['clients', 'client-search', 'client-contacts'],

  // üè¢ Branch Domain
  branch: ['branches', 'working-schedule', 'receipt-numbers', 'branch-statistics'],

  // üì¶ Order Domain
  order: ['orders', 'order-items', 'order-calculations', 'order-completion'],

  // üè∑Ô∏è Item Domain
  item: ['service-categories', 'price-list', 'price-modifiers', 'item-calculations', 'item-photos'],

  // üìÑ Document Domain
  document: ['receipts', 'documents', 'digital-signatures', 'qr-codes', 'pdf-generation'],
};

// üè≠ –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–º–µ–Ω–Ω–∏—Ö –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
const createDomainConfig = (name: string, tags: string[]) => ({
  // React Query —Ö—É–∫–∏ + —Ç–∏–ø–∏ –¥–ª—è –¥–æ–º–µ–Ω—É
  [`${name}-api`]: {
    input: {
      target: API_BASE_URL,
      filters: {
        tags,
      },
    },
    output: {
      target: `./shared/api/generated/${name}/${name}Api.ts`,
      client: 'react-query' as const,
      mode: 'split' as const,
      // üìù –ö–∞—Å—Ç–æ–º–Ω—ñ –Ω–∞–∑–≤–∏ —Ñ–∞–π–ª—ñ–≤
      schemas: `${name}Api.schemas.ts`,
      override: {
        mutator: {
          path: MUTATOR_PATH,
          name: MUTATOR_NAME,
          default: true,
        },
        requestOptions: true,
        query: {
          useQuery: true,
          useInfiniteQuery: true,
          useMutation: true,
          version: 5 as const,
        },
        // üîê Basic Auth –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ OpenAPI
        requestConfig: {
          auth: {
            username: 'admin',
            password: 'admin123',
          },
        },
      },
    },
  },

  // Zod —Å—Ö–µ–º–∏ –¥–ª—è –¥–æ–º–µ–Ω—É
  [`${name}-zod`]: {
    input: {
      target: API_BASE_URL,
      filters: {
        tags,
      },
    },
    output: {
      target: `./shared/api/generated/${name}/schemas.zod.ts`,
      client: 'zod' as const,
      mode: 'single' as const,
      override: {
        zod: {
          generate: {
            body: true,
            param: true,
            query: true,
            header: true,
            response: true,
          },
          // üõ°Ô∏è Zod strict —Ä–µ–∂–∏–º –¥–ª—è "zero trust" API
          strict: {
            param: true,
            query: true,
            header: true,
            body: true,
            response: true,
          },
          // üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤
          coerce: {
            param: true,
            query: true,
            body: true,
            response: true,
          },
          generateEachHttpStatus: true,
        },
        // üîê Basic Auth –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ OpenAPI
        requestConfig: {
          auth: {
            username: 'admin',
            password: 'admin123',
          },
        },
      },
    },
  },
});

const config: Config = {
  // üë§ CLIENT DOMAIN
  ...createDomainConfig('client', DOMAIN_TAGS.client),

  // üè¢ BRANCH DOMAIN
  ...createDomainConfig('branch', DOMAIN_TAGS.branch),

  // üì¶ ORDER DOMAIN
  ...createDomainConfig('order', DOMAIN_TAGS.order),

  // üè∑Ô∏è ITEM DOMAIN
  ...createDomainConfig('item', DOMAIN_TAGS.item),

  // üìÑ DOCUMENT DOMAIN
  ...createDomainConfig('document', DOMAIN_TAGS.document),
};

export default config;
