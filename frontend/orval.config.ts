/**
 * @fileoverview –ú–û–î–£–õ–¨–ù–ê –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Orval –∑ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–æ—é –¥–ª—è BARREL EXPORTS
 *
 * üéØ –§—ñ–ª–æ—Å–æ—Ñ—ñ—è: "–ú—ñ–Ω—ñ–º—É–º —Ñ–∞–π–ª—ñ–≤, –º–∞–∫—Å–∏–º—É–º –ª–æ–≥—ñ–∫–∏ + —á–∏—Å—Ç—ñ —ñ–º–ø–æ—Ä—Ç–∏"
 *
 * ‚úÖ –©–æ –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è:
 * - aksiApi.ts - –≤—Å—ñ Axios —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞ React Query —Ö—É–∫–∏
 * - aksiApi.schemas.ts - –≤—Å—ñ TypeScript —Ç–∏–ø–∏
 * - schemas.zod.ts - –≤—Å—ñ Zod —Å—Ö–µ–º–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
 * - index.ts - BARREL EXPORT (—Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –æ–∫—Ä–µ–º–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º)
 *
 * üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç:
 * shared/api/generated/
 *   ‚îú‚îÄ‚îÄ auth/
 *   ‚îÇ   ‚îú‚îÄ‚îÄ aksiApi.ts              - API —Ñ—É–Ω–∫—Ü—ñ—ó + React Query —Ö—É–∫–∏
 *   ‚îÇ   ‚îú‚îÄ‚îÄ aksiApi.schemas.ts      - TypeScript —Ç–∏–ø–∏
 *   ‚îÇ   ‚îú‚îÄ‚îÄ schemas.zod.ts          - Zod —Å—Ö–µ–º–∏
 *   ‚îÇ   ‚îî‚îÄ‚îÄ index.ts                - üî• BARREL: export * from './aksiApi'
 *   ‚îú‚îÄ‚îÄ stage1/
 *   ‚îÇ   ‚îú‚îÄ‚îÄ aksiApi.ts              - API —Ñ—É–Ω–∫—Ü—ñ—ó + React Query —Ö—É–∫–∏
 *   ‚îÇ   ‚îú‚îÄ‚îÄ aksiApi.schemas.ts      - TypeScript —Ç–∏–ø–∏
 *   ‚îÇ   ‚îú‚îÄ‚îÄ schemas.zod.ts          - Zod —Å—Ö–µ–º–∏
 *   ‚îÇ   ‚îî‚îÄ‚îÄ index.ts                - üî• BARREL: –≤—Å—ñ –µ–∫—Å–ø–æ—Ä—Ç–∏ –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ
 *   ‚îî‚îÄ‚îÄ ...
 *
 * üöÄ –ü–ï–†–ï–í–ê–ì–ò BARREL EXPORTS:
 * ‚úÖ –ó–∞–º—ñ—Å—Ç—å: import { useStage1SearchClients } from '@/shared/api/generated/stage1/aksiApi'
 * ‚úÖ –°—Ç–∞—î:    import { useStage1SearchClients } from '@/shared/api/generated/stage1'
 *
 * ‚úÖ –ó–∞–º—ñ—Å—Ç—å: import { ClientResponse } from '@/shared/api/generated/stage1/aksiApi.schemas'
 * ‚úÖ –°—Ç–∞—î:    import { ClientResponse } from '@/shared/api/generated/stage1'
 *
 * ‚úÖ –ó–∞–º—ñ—Å—Ç—å: import { clientSearchCriteriaSchema } from '@/shared/api/generated/stage1/schemas.zod'
 * ‚úÖ –°—Ç–∞—î:    import { clientSearchCriteriaSchema } from '@/shared/api/generated/stage1'
 */

import type { Config } from '@orval/core';

// üîß –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
const API_BASE_URL = 'http://localhost:8080/api/v3/api-docs';
const MUTATOR_PATH = './lib/api/orval-fetcher.ts';
const MUTATOR_NAME = 'orvalFetcher';

// üéØ –¢–µ–≥–∏ –¥–ª—è –º–æ–¥—É–ª—ñ–≤
const TAGS = {
  auth: ['Authentication'],
  stage1: ['Order Wizard - Stage 1'],
  stage2: ['Order Wizard - Stage 2'],
  substep1: ['Order Wizard - Stage 2 Substep 1'],
  substep2: ['Order Wizard - Stage 2 Substep 2'],
  substep3: ['Order Wizard - Stage 2 Substep 3'],
  substep4: ['Order Wizard - Stage 2 Substep 4'],
  substep5: ['Order Wizard - Stage 2 Substep 5'],
  stage3: ['Order Wizard - Stage 3'],
  stage4: ['Order Wizard - Stage 4'],
  main: ['Order Wizard - Main API'],
};

// üè≠ –§–∞–±—Ä–∏–∫–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–æ–¥—É–ª—å–Ω–∏—Ö –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
const createModuleConfig = (name: string, tags: string[]) => ({
  // Axios API –∫–ª—ñ—î–Ω—Ç + —Ç–∏–ø–∏ –¥–ª—è –º–æ–¥—É–ª—è
  [`${name}-api`]: {
    input: {
      target: API_BASE_URL,
      filters: {
        tags,
      },
    },
    output: {
      target: `./shared/api/generated/${name}`,
      client: 'axios' as const,
      mode: 'split' as const,
      override: {
        mutator: {
          path: MUTATOR_PATH,
          name: MUTATOR_NAME,
          default: true,
        },
        requestOptions: true,
        query: {
          useQuery: true,
          useInfiniteQuery: true,
          useMutation: true,
        },
      },
    },
  },

  // Zod —Å—Ö–µ–º–∏ –¥–ª—è –º–æ–¥—É–ª—è
  [`${name}-zod`]: {
    input: {
      target: API_BASE_URL,
      filters: {
        tags,
      },
    },
    output: {
      target: `./shared/api/generated/${name}/schemas.zod.ts`,
      client: 'zod' as const,
      mode: 'single' as const,
      override: {
        zod: {
          generate: {
            body: true,
            param: true,
            query: true,
            header: true,
            response: true,
          },
          // üõ°Ô∏è Zod strict —Ä–µ–∂–∏–º –¥–ª—è "zero trust" API
          strict: {
            param: true,
            query: true,
            header: true,
            body: true,
            response: true,
          },
          // üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤
          coerce: {
            param: true,
            query: true,
            body: true,
            response: true,
          },
          generateEachHttpStatus: true,
        },
      },
    },
  },
});

const config: Config = {
  // üîê Authentication
  ...createModuleConfig('auth', TAGS.auth),

  // üî• Order Wizard - Stage 1
  ...createModuleConfig('stage1', TAGS.stage1),

  // üî• Order Wizard - Stage 2
  ...createModuleConfig('stage2', TAGS.stage2),

  // üî• Order Wizard - Substeps
  ...createModuleConfig('substep1', TAGS.substep1),
  ...createModuleConfig('substep2', TAGS.substep2),
  ...createModuleConfig('substep3', TAGS.substep3),
  ...createModuleConfig('substep4', TAGS.substep4),
  ...createModuleConfig('substep5', TAGS.substep5),

  // üî• Order Wizard - Stage 3
  ...createModuleConfig('stage3', TAGS.stage3),

  // üî• Order Wizard - Stage 4
  ...createModuleConfig('stage4', TAGS.stage4),

  // üî• Order Wizard - Main API
  ...createModuleConfig('main', TAGS.main),
};

export default config;
