/**
 * @fileoverview –†–æ–∑—à–∏—Ä–µ–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Orval –¥–ª—è –¥–æ–º–µ–Ω–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó API + Zod —Å—Ö–µ–º–∏
 *
 * –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –¥–æ–º–µ–Ω–∞–º –±–µ–∫–µ–Ω–¥—É:
 * backend/src/main/java/com/aksi/domain/
 *   ‚îú‚îÄ‚îÄ auth/       ‚Üí shared/api/generated/auth/ (API + Zod)
 *   ‚îú‚îÄ‚îÄ branch/     ‚Üí shared/api/generated/branch/ (API + Zod)
 *   ‚îú‚îÄ‚îÄ client/     ‚Üí shared/api/generated/client/ (API + Zod)
 *   ‚îú‚îÄ‚îÄ order/      ‚Üí shared/api/generated/order/ (API + Zod)
 *   ‚îú‚îÄ‚îÄ pricing/    ‚Üí shared/api/generated/pricing/ (API + Zod)
 *   ‚îî‚îÄ‚îÄ user/       ‚Üí shared/api/generated/user/ (API + Zod)
 *
 * üî• Advanced features:
 * - tags-split: –†–æ–∑–±–∏–≤–∫–∞ API –ø–æ –¥–æ–º–µ–Ω–∞—Ö
 * - zod: –°—Ö–µ–º–∏ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó –∑ –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—î—é
 * - mutator: –ì–ª–æ–±–∞–ª—å–Ω–∏–π fetch –∑ error handling —Ç–∞ interceptors
 * - queryOptions: –ö–µ—à, retry, staleTime, gcTime, —Ç–æ—â–æ
 * - CI –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è: –°–∫—Ä–∏–ø—Ç–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 */

import type { Config } from '@orval/core';

// üîß –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
const API_BASE_URL = 'http://localhost:8080/api/v3/api-docs';
const MUTATOR_PATH = './lib/api/orval-fetcher.ts';
const MUTATOR_NAME = 'orvalFetcher';

// üéØ –ú–∞–ø–ø—ñ–Ω–≥ —Ç–µ–≥—ñ–≤ OpenAPI –Ω–∞ –¥–æ–º–µ–Ω–∏ –±–µ–∫–µ–Ω–¥—É
const DOMAIN_TAG_MAPPING = {
  // üîê –î–æ–º–µ–Ω auth - –∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
  auth: ['Authentication'],

  // üè¢ –î–æ–º–µ–Ω branch - –ø—É–Ω–∫—Ç–∏ –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω—å
  branch: ['Branch Locations API'],

  // üë§ –î–æ–º–µ–Ω client - –∫–ª—ñ—î–Ω—Ç–∏ —Ç–∞ —ó—Ö –ø—ñ–¥–ø–∏—Å–∏
  client: ['Clients', 'Client - Signatures'],

  // üì¶ –î–æ–º–µ–Ω order - –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –ø–æ–≤'—è–∑–∞–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó (–±–µ–∑ OrderWizard)
  order: [
    'Orders',
    'Order Completion',
    'OrderFinalization',
    'Order Summary',
    'Order Discounts',
    'Additional Requirements for Order',
    'Order Item Photos',
    'Payment for Order',
  ],

  // üßô‚Äç‚ôÇÔ∏è –î–æ–º–µ–Ω order-wizard - –º–∞–π—Å—Ç–µ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å (–æ–∫—Ä–µ–º–æ –≤–∏–Ω–µ—Å–µ–Ω–æ)
  'order-wizard': ['Order Wizard'],

  // üí∞ –î–æ–º–µ–Ω pricing - —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∏
  pricing: [
    'Price Calculator',
    'Price List',
    'Service Category',
    'Unit Of Measure',
    'Price Modifiers',
    'Pricing - Modifier Recommendations',
    'Item Characteristics',
    'Pricing - Stain Types',
    'Pricing - Defect Types',
  ],

  // üë• –î–æ–º–µ–Ω user - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Å–∏—Å—Ç–µ–º–∏ (—è–∫—â–æ —î –æ–∫—Ä–µ–º—ñ API)
  user: [],

  // üßæ –î–æ–¥–∞—Ç–∫–æ–≤—ñ —Å–µ—Ä–≤—ñ—Å–∏
  receipt: ['Receipt'],

  // üß™ –¢–µ—Å—Ç–æ–≤—ñ endpoints
  test: ['Test'],
};

// üèóÔ∏è –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –¥–æ–º–µ–Ω—É (React Query + API)
const createDomainConfig = (domainName: string, tags: string[], outputPath: string) => ({
  input: {
    target: API_BASE_URL,
    filters: {
      tags,
    },
  },
  output: {
    target: outputPath,
    client: 'react-query' as const,
    mode: 'split' as const,
    override: {
      // üîß –ö–∞—Å—Ç–æ–º–Ω–∏–π mutator –∑ error handling
      mutator: {
        path: MUTATOR_PATH,
        name: MUTATOR_NAME,
        default: true,
      },

      // üé£ React Query –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑ advanced options
      query: {
        useQuery: true,
        useMutation: true,
        useInfinite: true, // –î–æ–¥–∞—î–º–æ infinite queries
        signal: true, // –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ AbortController
      },

      // ‚öôÔ∏è –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Query Options (–Ω–æ–≤–∞ –Ω–∞–∑–≤–∞)
      queryOptions: {
        staleTime: 5 * 60 * 1000, // 5 —Ö–≤–∏–ª–∏–Ω
        gcTime: 10 * 60 * 1000, // 10 —Ö–≤–∏–ª–∏–Ω
        refetchOnWindowFocus: false,
        refetchOnReconnect: true,
      },

      // üîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Mutation Options
      mutationOptions: {
        onError: (error: Error) => {
          console.error('Mutation error:', error);
        },
      },
    },
  },

  // ü™ù Post-generation hooks
  hooks: {
    afterAllFilesWrite: [
      'node ./scripts/create-api-index.js',
      `echo "‚úÖ Generated ${domainName} API"`,
    ],
  },
});

// üî• –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó Zod —Å—Ö–µ–º
const createZodConfig = (domainName: string, tags: string[], outputPath: string) => ({
  input: {
    target: API_BASE_URL,
    filters: {
      tags,
    },
  },
  output: {
    target: `${outputPath}/zod`,
    client: 'zod' as const,
    mode: 'split' as const,
    override: {
      // üîß Zod-—Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
      zod: {
        generate: {
          body: true,
          param: true,
          query: true,
          header: true,
          response: true,
        },
        strict: {
          param: true,
          query: true,
          header: true,
          body: true,
          response: true,
        },
        // –ì–µ–Ω–µ—Ä—É—î–º–æ —Å—Ö–µ–º–∏ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ HTTP —Å—Ç–∞—Ç—É—Å—É
        generateEachHttpStatus: true,
      },
    },
  },

  // ü™ù Post-generation hooks –¥–ª—è Zod
  hooks: {
    afterAllFilesWrite: [
      `node ./scripts/create-zod-index.js ${domainName}`,
      `echo "‚úÖ Generated ${domainName} Zod schemas"`,
    ],
  },
});

const config: Config = {};

// üèóÔ∏è –ì–µ–Ω–µ—Ä—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –¥–æ–º–µ–Ω—É
Object.entries(DOMAIN_TAG_MAPPING).forEach(([domainName, tags]) => {
  // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –¥–æ–º–µ–Ω–∏ –±–µ–∑ —Ç–µ–≥—ñ–≤
  if (tags.length === 0) return;

  const outputPath = `./shared/api/generated/${domainName}`;

  // 1Ô∏è‚É£ React Query API –∫–ª—ñ—î–Ω—Ç –∑ advanced features
  config[`${domainName}-api`] = createDomainConfig(domainName, tags, outputPath);

  // 2Ô∏è‚É£ Zod —Å—Ö–µ–º–∏ –∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–∏–º–∏ –º–æ–∂–ª–∏–≤–æ—Å—Ç—è–º–∏
  config[`${domainName}-zod`] = createZodConfig(domainName, tags, outputPath);
});

// üåü –î–æ–¥–∞—Ç–∫–æ–≤–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ API (–±–µ–∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó)
config['full-api'] = {
  input: {
    target: API_BASE_URL,
  },
  output: {
    target: './shared/api/generated/full',
    client: 'react-query' as const,
    mode: 'split' as const,
    override: {
      mutator: {
        path: MUTATOR_PATH,
        name: MUTATOR_NAME,
        default: true,
      },
      query: {
        useQuery: true,
        useMutation: true,
        useInfinite: true,
        signal: true,
        options: {
          staleTime: 5 * 60 * 1000,
          gcTime: 10 * 60 * 1000,
          refetchOnWindowFocus: false,
          refetchOnReconnect: true,
        },
      },
    },
  },
  hooks: {
    afterAllFilesWrite: ['node ./scripts/create-api-index.js', 'echo "‚úÖ Generated full API"'],
  },
};

// üî• –ü–æ–≤–Ω—ñ Zod —Å—Ö–µ–º–∏
config['full-zod'] = {
  input: {
    target: API_BASE_URL,
  },
  output: {
    target: './shared/api/generated/full/zod',
    client: 'zod' as const,
    mode: 'split' as const,
    override: {
      zod: {
        generate: {
          body: true,
          param: true,
          query: true,
          header: true,
          response: true,
        },
        strict: {
          param: true,
          query: true,
          header: true,
          body: true,
          response: true,
        },
        generateEachHttpStatus: true,
      },
    },
  },
  hooks: {
    afterAllFilesWrite: [
      'node ./scripts/create-zod-index.js full',
      'echo "‚úÖ Generated full Zod schemas"',
    ],
  },
};

export default config;
