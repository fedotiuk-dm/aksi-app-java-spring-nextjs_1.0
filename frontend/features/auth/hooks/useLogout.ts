'use client';

import { useRouter } from 'next/navigation';
import { useState } from 'react';

import { useLogout as useApiLogout } from '../api';
import { useAuthStore } from '../store';

/**
 * –ö–ª—ñ—î–Ω—Ç—Å—å–∫–∏–π —Ö—É–∫ –¥–ª—è –≤–∏—Ö–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Å–∏—Å—Ç–µ–º–∏
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –æ–Ω–æ–≤–ª–µ–Ω—ñ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ API –∫–ª—ñ—î–Ω—Ç–∏
 */
export const useLogout = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const router = useRouter();

  const logoutFromStore = useAuthStore((state) => state.logout);
  const setStoreError = useAuthStore((state) => state.setError);
  const setStoreLoading = useAuthStore((state) => state.setLoading);

  // –û—Ç—Ä–∏–º—É—î–º–æ —Ö—É–∫ –¥–ª—è API-–∑–∞–ø–∏—Ç—É
  const apiLogoutMutation = useApiLogout();

  /**
   * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏—Ö–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @param redirectTo - —à–ª—è—Ö, –Ω–∞ —è–∫–∏–π –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –ø—ñ—Å–ª—è –≤–∏—Ö–æ–¥—É
   */
  const logout = async (redirectTo: string = '/login') => {
    try {
      setIsLoading(true);
      setStoreLoading(true);
      setError(null);
      setStoreError(null);

      console.log('üö™ –í–∏–∫–æ–Ω—É—î–º–æ –ª–æ–≥–∞—É—Ç...');

      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Orval API —Ö—É–∫ –¥–ª—è –ª–æ–≥–∞—É—Ç—É
      await apiLogoutMutation.mutateAsync();

      console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥–∞—É—Ç');

      // –û—á–∏—â—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑—ñ —Å—Ç–æ—Ä—É
      logoutFromStore();

      console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞:', redirectTo);

      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ª–æ–≥—ñ–Ω—É
      setTimeout(() => {
        router.push(redirectTo);
        console.log('‚úÖ –õ–æ–≥–∞—É—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ');
      }, 50);
    } catch (error: unknown) {
      // üö® –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫–∏
      const apiError = error as { message?: string; status?: number };
      const errorMessage = apiError?.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∑ —Å–∏—Å—Ç–µ–º–∏';

      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ –∑ —Å–∏—Å—Ç–µ–º–∏:', error);
      setError(errorMessage);
      setStoreError({ message: errorMessage, status: apiError?.status || 500 });

      // –ù–∞–≤—ñ—Ç—å —è–∫—â–æ API –ø–æ–º–∏–ª–∫–∞, –æ—á–∏—â—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
      logoutFromStore();

      // –í—Å–µ –æ–¥–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
      setTimeout(() => {
        router.push(redirectTo);
        console.log('‚ö†Ô∏è –õ–æ–≥–∞—É—Ç –∑ –ø–æ–º–∏–ª–∫–æ—é, –∞–ª–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ');
      }, 50);
    } finally {
      setIsLoading(false);
      setStoreLoading(false);
    }
  };

  return {
    logout,
    isLoading,
    error,
    // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –∑ React Query
    isApiLoading: apiLogoutMutation.isPending,
    apiError: apiLogoutMutation.error,
  };
};
