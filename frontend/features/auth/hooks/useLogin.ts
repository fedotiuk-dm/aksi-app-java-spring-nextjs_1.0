'use client';

import { useRouter } from 'next/navigation';
import { useState } from 'react';

import type { LoginRequest } from '@/shared/api/generated/auth';

import { useLogin as useApiLogin } from '../api';
import { adaptAuthResponseToAuthUser } from '../model/types';
import { useAuthStore } from '../store';

/**
 * –ö–ª—ñ—î–Ω—Ç—Å—å–∫–∏–π —Ö—É–∫ –¥–ª—è –≤—Ö–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Å–∏—Å—Ç–µ–º—É
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –æ–Ω–æ–≤–ª–µ–Ω—ñ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ API –∫–ª—ñ—î–Ω—Ç–∏
 */
export const useLogin = () => {
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const router = useRouter();

  const setUser = useAuthStore((state) => state.setUser);
  const setStoreError = useAuthStore((state) => state.setError);
  const setStoreLoading = useAuthStore((state) => state.setLoading);

  // –û—Ç—Ä–∏–º—É—î–º–æ —Ö—É–∫ –¥–ª—è API-–∑–∞–ø–∏—Ç—É (—Ç–µ–ø–µ—Ä –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º Orval)
  const apiLoginMutation = useApiLogin();

  /**
   * –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—Ö–æ–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * @param credentials - –¥–∞–Ω—ñ –¥–ª—è –≤—Ö–æ–¥—É
   * @param redirectTo - —à–ª—è—Ö, –Ω–∞ —è–∫–∏–π –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤—Ö–æ–¥—É
   */
  const login = async (credentials: LoginRequest, redirectTo: string = '/dashboard') => {
    try {
      setIsLoading(true);
      setStoreLoading(true);
      setError(null);
      setStoreError(null);

      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π Orval API —Ö—É–∫ –¥–ª—è –ª–æ–≥—ñ–Ω—É
      const response = await apiLoginMutation.mutateAsync({ data: credentials });

      console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω, –≤—ñ–¥–ø–æ–≤—ñ–¥—å:', response);

      // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ API response –≤ AuthUser —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä
      const user = adaptAuthResponseToAuthUser(response);

      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ store
      setUser(user);

      console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞:', redirectTo);
      console.log('üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π:', user);

      // –î–æ–¥–∞—î–º–æ –Ω–µ–≤–µ–ª–∏–∫—É –∑–∞—Ç—Ä–∏–º–∫—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è–º
      setTimeout(() => {
        router.push(redirectTo);
        console.log('‚úÖ –õ–æ–≥—ñ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ');
      }, 50);

      return response;
    } catch (error: unknown) {
      // üö® –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–º–∏–ª–∫–∏
      const apiError = error as { message?: string; status?: number };
      const errorMessage = apiError?.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ –≤ —Å–∏—Å—Ç–µ–º—É';

      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ –≤ —Å–∏—Å—Ç–µ–º—É:', error);
      setError(errorMessage);
      setStoreError({ message: errorMessage, status: apiError?.status || 500 });
      throw error;
    } finally {
      setIsLoading(false);
      setStoreLoading(false);
    }
  };

  return {
    login,
    isLoading,
    error,
    // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –∑ React Query
    isApiLoading: apiLoginMutation.isPending,
    apiError: apiLoginMutation.error,
  };
};
