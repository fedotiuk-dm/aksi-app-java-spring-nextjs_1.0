import { create } from 'zustand';

import { AuthUser, UserRole, AuthError } from '../model/types';

interface AuthState {
  // –°—Ç–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  isLoggedIn: boolean;
  username: string | null;
  name: string | null;
  email: string | null;
  role: UserRole | null;
  userId: string | null;
  position: string | null;
  loading: boolean;
  error: AuthError | null;

  // –ú–µ—Ç–æ–¥–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é –Ω–∞ —Å—Ç–æ—Ä–æ–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞
  setUser: (user: AuthUser | null) => void;
  setError: (error: AuthError | null) => void;
  setLoading: (loading: boolean) => void;
  logout: () => void;
  clearUser: () => void; // –î–æ–¥–∞—î–º–æ alias –¥–ª—è logout
  hasRole: (role: UserRole) => boolean;
  checkIsLoggedIn: () => boolean;
  clearError: () => void;

  // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–ª–µ–π
  isAdmin: () => boolean;
  isManagerOrAdmin: () => boolean;
  canHandleCash: () => boolean;
  canTakeOrders: () => boolean;
}

export const useAuthStore = create<AuthState>((set, get) => ({
  isLoggedIn: false,
  username: null,
  name: null,
  email: null,
  role: null,
  userId: null,
  position: null,
  loading: false,
  error: null,

  /**
   * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   */
  setUser: (user: AuthUser | null) => {
    if (user) {
      console.log('üîê –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ store:', user);
      set({
        isLoggedIn: true,
        username: user.username,
        name: user.name,
        email: user.email,
        role: user.role,
        userId: user.id,
        position: user.position || null,
        error: null,
        loading: false,
      });
      console.log('‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –≤ store, —Ä–æ–ª—å:', user.role);
    } else {
      // –Ø–∫—â–æ user = null, –≤–∏–∫–æ–Ω—É—î–º–æ logout
      console.log('üö™ –û—á–∏—â—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ store');
      get().logout();
    }
  },

  /**
   * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –ø–æ–º–∏–ª–∫–∏
   */
  setError: (error: AuthError | null) => {
    console.log('üö® –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ–º–∏–ª–∫—É –≤ store:', error);
    set({ error, loading: false });
  },

  /**
   * –û—á–∏—â–∞—î –ø–æ–º–∏–ª–∫—É
   */
  clearError: () => set({ error: null }),

  /**
   * –í—Å—Ç–∞–Ω–æ–≤–ª—é—î —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
   */
  setLoading: (loading: boolean) => {
    console.log('‚è≥ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', loading);
    set({ loading });
  },

  /**
   * –í–∏–∫–æ–Ω—É—î –≤–∏—Ö—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - –æ—á–∏—â–∞—î –≤—Å—ñ –¥–∞–Ω—ñ —Å–µ—Å—ñ—ó
   */
  logout: () => {
    console.log('üö™ –í–∏–∫–æ–Ω—É—î–º–æ logout –≤ store');

    // –û—á–∏—â—É—î–º–æ —Ç–æ–∫–µ–Ω–∏ –∑ localStorage
    if (typeof window !== 'undefined') {
      localStorage.removeItem('accessToken');
      localStorage.removeItem('refreshToken');
      console.log('üóëÔ∏è –¢–æ–∫–µ–Ω–∏ –æ—á–∏—â–µ–Ω–æ –∑ localStorage');
    }

    set({
      isLoggedIn: false,
      username: null,
      name: null,
      email: null,
      role: null,
      userId: null,
      position: null,
      error: null,
      loading: false,
    });
  },

  /**
   * Alias –¥–ª—è logout
   */
  clearUser: () => get().logout(),

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –ø–µ–≤–Ω—É —Ä–æ–ª—å
   */
  hasRole: (role: UserRole) => {
    const { isLoggedIn, role: userRole } = get();
    return isLoggedIn && userRole === role;
  },

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π
   */
  checkIsLoggedIn: () => get().isLoggedIn,

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
   */
  isAdmin: () => {
    const { isLoggedIn, role } = get();
    return isLoggedIn && role === UserRole.ADMIN;
  },

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∞–±–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
   */
  isManagerOrAdmin: () => {
    const { isLoggedIn, role } = get();
    return isLoggedIn && (role === UserRole.MANAGER || role === UserRole.ADMIN);
  },

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –º–æ–∂–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –∫–∞—Å–æ—é
   */
  canHandleCash: () => {
    const { isLoggedIn, role } = get();
    return (
      isLoggedIn &&
      (role === UserRole.CASHIER || role === UserRole.MANAGER || role === UserRole.ADMIN)
    );
  },

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –º–æ–∂–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏–π–º–∞—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
   */
  canTakeOrders: () => {
    const { isLoggedIn, role } = get();
    return isLoggedIn && role !== UserRole.CASHIER; // –í—Å—ñ –∫—Ä—ñ–º –∫–∞—Å–∏—Ä–∞
  },
}));
