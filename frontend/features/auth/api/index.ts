/**
 * @fileoverview Auth API —Ö—É–∫–∏ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
 *
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î:
 * - Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ auth —Ñ—É–Ω–∫—Ü—ñ—ó
 * - React Query –¥–ª—è —Å—Ç–∞–Ω—É —Ç–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è
 * - Zod —Å—Ö–µ–º–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
 */

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≥–æ—Ç–æ–≤—ñ Orval —Ö—É–∫–∏
import {
  useAuthLogin,
  useAuthRegister,
  useAuthRefreshToken,
  useAuthTestEndpoint,
} from '@/shared/api/generated/auth';

import type {
  LoginRequest,
  RegisterRequest,
  AuthLogin200,
  AuthRegister200,
  AuthRefreshToken200,
} from '@/shared/api/generated/auth';

/**
 * –•—É–∫ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –û–±–≥–æ—Ä—Ç–∫–∞ –Ω–∞–¥ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–º useAuthLogin
 */
export const useLogin = () => {
  return useAuthLogin({
    mutation: {
      onError: (error) => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ –≤ —Å–∏—Å—Ç–µ–º—É:', error);
      },
      onSuccess: (data) => {
        console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –≤ —Å–∏—Å—Ç–µ–º—É:', data);
      },
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –û–±–≥–æ—Ä—Ç–∫–∞ –Ω–∞–¥ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–º useAuthRegister
 */
export const useRegister = () => {
  return useAuthRegister({
    mutation: {
      onError: (error) => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:', error);
      },
      onSuccess: (data) => {
        console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è:', data);
      },
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è JWT —Ç–æ–∫–µ–Ω–∞
 * –û–±–≥–æ—Ä—Ç–∫–∞ –Ω–∞–¥ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–º useAuthRefreshToken
 */
export const useRefreshToken = () => {
  return useAuthRefreshToken({
    mutation: {
      onError: (error) => {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–æ–∫–µ–Ω–∞:', error);
      },
      onSuccess: (data) => {
        console.log('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ:', data);
      },
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ auth API
 * –û–±–≥–æ—Ä—Ç–∫–∞ –Ω–∞–¥ Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–º useAuthTestEndpoint
 */
export const useAuthTest = () => {
  return useAuthTestEndpoint({
    query: {
      staleTime: 5 * 60 * 1000, // 5 —Ö–≤–∏–ª–∏–Ω
      retry: 1,
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è –≤–∏—Ö–æ–¥—É –∑ —Å–∏—Å—Ç–µ–º–∏
 * –ü–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ª–æ–∫–∞–ª—å–Ω—É –ª–æ–≥—ñ–∫—É, –æ—Å–∫—ñ–ª—å–∫–∏ logout endpoint –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ
 */
export const useLogout = () => {
  // TODO: –î–æ–¥–∞—Ç–∏ logout endpoint –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ Orval —Ö—É–∫
  return {
    mutate: () => {
      console.log('üö™ –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏ (–ª–æ–∫–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞)');
    },
    isPending: false,
    isError: false,
    error: null,
  };
};

// üìù –ï–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø—ñ–≤ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
export type { LoginRequest, RegisterRequest, AuthLogin200, AuthRegister200, AuthRefreshToken200 };
