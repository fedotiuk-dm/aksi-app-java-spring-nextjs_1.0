/**
 * @fileoverview Auth API —Ö—É–∫–∏ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
 *
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î:
 * - Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ auth —Ñ—É–Ω–∫—Ü—ñ—ó
 * - React Query –¥–ª—è —Å—Ç–∞–Ω—É —Ç–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è
 * - Zod —Å—Ö–µ–º–∏ –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
 */

import { useMutation, useQuery } from '@tanstack/react-query';

import { getAksiApi } from '@/shared/api/generated/auth/aksiApi';

import type {
  LoginRequest,
  RegisterRequest,
  AuthLogin200,
  AuthRegister200,
  AuthRefreshToken200,
} from '@/shared/api/generated/auth/aksiApi.schemas';

// üîê –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ auth API –∫–ª—ñ—î–Ω—Ç
const authApi = getAksiApi();

/**
 * –•—É–∫ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π authLogin –∫–ª—ñ—î–Ω—Ç
 */
export const useLogin = () => {
  return useMutation<AuthLogin200, Error, LoginRequest>({
    mutationFn: async (loginData) => {
      return await authApi.authLogin(loginData);
    },
    onError: (error) => {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥—ñ –≤ —Å–∏—Å—Ç–µ–º—É:', error);
    },
    onSuccess: (data) => {
      console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –≤ —Å–∏—Å—Ç–µ–º—É:', data);
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π authRegister –∫–ª—ñ—î–Ω—Ç
 */
export const useRegister = () => {
  return useMutation<AuthRegister200, Error, RegisterRequest>({
    mutationFn: async (registerData) => {
      return await authApi.authRegister(registerData);
    },
    onError: (error) => {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó:', error);
    },
    onSuccess: (data) => {
      console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è:', data);
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è JWT —Ç–æ–∫–µ–Ω–∞
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π authRefreshToken –∫–ª—ñ—î–Ω—Ç
 */
export const useRefreshToken = () => {
  return useMutation<AuthRefreshToken200, Error, string>({
    mutationFn: async (refreshToken) => {
      return await authApi.authRefreshToken(refreshToken);
    },
    onError: (error) => {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–æ–∫–µ–Ω–∞:', error);
    },
    onSuccess: (data) => {
      console.log('‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ:', data);
    },
  });
};

/**
 * –•—É–∫ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ auth API
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î Orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π authTestEndpoint –∫–ª—ñ—î–Ω—Ç
 */
export const useAuthTest = () => {
  return useQuery<string, Error>({
    queryKey: ['auth', 'test'],
    queryFn: async () => {
      return await authApi.authTestEndpoint();
    },
    staleTime: 5 * 60 * 1000, // 5 —Ö–≤–∏–ª–∏–Ω
    retry: 1,
  });
};

/**
 * –•—É–∫ –¥–ª—è –≤–∏—Ö–æ–¥—É –∑ —Å–∏—Å—Ç–µ–º–∏
 * –ü–æ–∫–∏ —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ª–æ–∫–∞–ª—å–Ω—É –ª–æ–≥—ñ–∫—É, –æ—Å–∫—ñ–ª—å–∫–∏ logout endpoint –Ω–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ
 */
export const useLogout = () => {
  return useMutation<void, Error, void>({
    mutationFn: async () => {
      // TODO: –î–æ–¥–∞—Ç–∏ logout endpoint –Ω–∞ –±–µ–∫–µ–Ω–¥—ñ
      // –ü–æ–∫–∏ —â–æ –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
      console.log('üö™ –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏ (–ª–æ–∫–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞)');
      return void 0;
    },
    onSuccess: () => {
      console.log('‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏');
    },
  });
};

// üìù –ï–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø—ñ–≤ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
export type { LoginRequest, RegisterRequest, AuthLogin200, AuthRegister200, AuthRefreshToken200 };
