/**
 * @fileoverview Auth service –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ HttpOnly cookies
 * 
 * –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:
 * - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î orval –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ —Ö—É–∫–∏
 * - –ü—Ä–∞—Ü—é—î –∑ HttpOnly cookies (—Ç–æ–∫–µ–Ω–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ñ –≤ JS)
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ axios interceptors
 */

import { api } from '@/lib/axios';
import type { LoginRequest } from '@/shared/api/generated/auth';
import type { UserResponse } from '@/shared/api/generated/user';

interface AuthServiceResponse {
  success: boolean;
  message?: string;
  user?: UserResponse;
}

class AuthService {
  /**
   * –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   * –¢–æ–∫–µ–Ω–∏ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –≤ HttpOnly cookies
   */
  async login(credentials: LoginRequest): Promise<AuthServiceResponse> {
    try {
      // Backend –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç—å HttpOnly cookies –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
      await api.post('/auth/login', credentials);
      
      // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –∞–ª–µ –Ω–µ –±–ª–æ–∫—É—î–º–æ —É—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω
      let user = undefined;
      try {
        user = await this.getCurrentUser();
      } catch (getUserError) {
        // –Ü–≥–Ω–æ—Ä—É—î–º–æ –ø–æ–º–∏–ª–∫—É –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ - –ª–æ–≥—ñ–Ω –≤—Å–µ –æ–¥–Ω–æ —É—Å–ø—ñ—à–Ω–∏–π
        console.log('Could not get user data after login, but login was successful');
      }
      
      return {
        success: true,
        user: user || undefined,
      };
    } catch (error) {
      console.error('Login error:', error);
      return {
        success: false,
        message: '–ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å',
      };
    }
  }

  /**
   * –í–∏—Ö—ñ–¥ –∑ —Å–∏—Å—Ç–µ–º–∏
   * –û—á–∏—â–∞—î HttpOnly cookies –Ω–∞ backend
   */
  async logout(): Promise<void> {
    try {
      await api.post('/auth/logout');
    } catch (error) {
      console.error('Logout error:', error);
      // –ù–∞–≤—ñ—Ç—å —è–∫—â–æ –ø–æ–º–∏–ª–∫–∞ - –æ—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
    }
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
   */
  async getCurrentUser(): Promise<UserResponse | null> {
    try {
      console.log('üîç Getting current user from /users/me');
      const response = await api.get<UserResponse>('/users/me');
      console.log('‚úÖ User data received:', response);
      return response;
    } catch (error: any) {
      console.log('‚ùå Get current user error:', error?.response?.status || error.message);
      
      // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ 401 –∞–±–æ 500 (—â–æ —Ç–µ–∂ –º–æ–∂–µ –æ–∑–Ω–∞—á–∞—Ç–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π) - —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
      if (error?.response?.status === 401 || error?.response?.status === 500) {
        console.log('üìå User not authenticated, returning null');
        return null;
      }
      
      // –î–ª—è —ñ–Ω—à–∏—Ö –ø–æ–º–∏–ª–æ–∫ —Ç–∞–∫–æ–∂ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null, –∞–ª–µ –ª–æ–≥—É—î–º–æ
      console.error('Unexpected error getting user:', error);
      return null;
    }
  }

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
   * –†–æ–±–∏—Ç—å –∑–∞–ø–∏—Ç –¥–æ API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ cookies
   */
  async checkAuth(): Promise<boolean> {
    try {
      const user = await this.getCurrentUser();
      return !!user;
    } catch {
      return false;
    }
  }

  /**
   * –û–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω
   * –í—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —á–µ—Ä–µ–∑ axios interceptors
   */
  async refreshToken(): Promise<boolean> {
    try {
      await api.post('/auth/refresh-token');
      return true;
    } catch {
      return false;
    }
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ singleton instance
export const authService = new AuthService();