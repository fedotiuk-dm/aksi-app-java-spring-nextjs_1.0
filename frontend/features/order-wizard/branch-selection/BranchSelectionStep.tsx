'use client';

import { Box, TextField, Paper, Typography, Alert } from '@mui/material';
import React, { useState } from 'react';

import { useBranchSelection } from '@/domain/branch';
import { Branch } from '@/domain/branch';
import { useOrderCreation } from '@/domain/order';
import { useWizard } from '@/domain/wizard';
import { StepContainer, StepNavigation, OrderCreationSummary, AutoFieldsInfo } from '@/shared/ui';

import { BranchSelector } from './ui/BranchSelector';
import { SelectedBranchInfo } from './ui/SelectedBranchInfo';

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è BRANCH_SELECTION –∫—Ä–æ–∫—É Order Wizard
 *
 * FSD –ø—Ä–∏–Ω—Ü–∏–ø–∏:
 * - –¢—ñ–ª—å–∫–∏ UI –ª–æ–≥—ñ–∫–∞ (–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)
 * - –û—Ç—Ä–∏–º—É—î –≤—Å—ñ –¥–∞–Ω—ñ –∑ domain —Ö—É–∫—ñ–≤
 * - –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
 * - –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏—Ö UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
 *
 * –ó–≥—ñ–¥–Ω–æ –∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—î—é Order Wizard:
 * 1.2. –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * - –ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó (–≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)
 * - –£–Ω—ñ–∫–∞–ª—å–Ω–∞ –º—ñ—Ç–∫–∞ (–≤–≤–æ–¥–∏—Ç—å—Å—è –≤—Ä—É—á–Ω—É –∞–±–æ —Å–∫–∞–Ω—É—î—Ç—å—Å—è)
 * - –ü—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–≤–∏–±—ñ—Ä —Ñ—ñ–ª—ñ—ó)
 * - –î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)
 */
export const BranchSelectionStep: React.FC = () => {
  // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—é —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –∑ domain layer
  const branchSelection = useBranchSelection();
  const wizard = useWizard();
  const orderCreation = useOrderCreation();

  // –õ–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –¥–ª—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ—ó –º—ñ—Ç–∫–∏
  const [tagNumber, setTagNumber] = useState<string>('');

  // –î–æ–¥–∞—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  console.log('BranchSelectionStep render:', {
    selectedBranch: branchSelection.selectedBranch,
    hasSelection: branchSelection.hasSelection,
    isSelectionValid: branchSelection.isSelectionValid,
    isLoading: branchSelection.isLoading,
    error: branchSelection.error,
    activeBranches: branchSelection.activeBranches.length,
    tagNumber,
    orderCreationState: orderCreation.creationState,
  });

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–±–æ—Ä—É —Ñ—ñ–ª—ñ—ó
   */
  const handleBranchSelect = (branch: Branch) => {
    console.log('–§—ñ–ª—ñ—é –≤–∏–±—Ä–∞–Ω–æ –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', branch);
    branchSelection.selectBranchObject(branch);
  };

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—ó –º—ñ—Ç–∫–∏
   */
  const handleTagNumberChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setTagNumber(event.target.value);
  };

  /**
   * –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
   */
  const canCreateOrder =
    branchSelection.isSelectionValid && tagNumber.trim().length > 0 && !orderCreation.isCreating;

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É (—Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)
   */
  const handleNext = async () => {
    if (!canCreateOrder) {
      console.log('‚ùå –ù–µ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', {
        canCreateOrder,
        hasValidBranch: branchSelection.isSelectionValid,
        hasTagNumber: tagNumber.trim().length > 0,
        isCreating: orderCreation.isCreating,
      });
      return;
    }

    console.log('üîÑ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑:', {
      customerId: wizard.context?.customerId,
      branchLocationId: branchSelection.selectedBranch?.id,
      tagNumber: tagNumber.trim(),
    });

    try {
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö
      if (!wizard.context?.customerId) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π customerId –≤ wizard context');
        return;
      }

      if (!branchSelection.selectedBranch?.id) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π branchLocationId');
        return;
      }

      if (!tagNumber.trim()) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–∞ –º—ñ—Ç–∫–∞');
        return;
      }

      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–µ–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ domain layer
      const result = await orderCreation.createOrderForWizard(
        wizard.context.customerId,
        branchSelection.selectedBranch.id,
        tagNumber.trim()
      );

      if (result.success && result.order) {
        console.log('‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ:', result.order);
        // –ù–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ - –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–Ω–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –¥–æ Item Manager"
      } else {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', result.errors);
      }
    } catch (error) {
      console.error('‚ùå –í–∏–Ω—è—Ç–æ–∫ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:', error);
    }
  };

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É
   */
  const handleBack = async () => {
    console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É (–∫–ª—ñ—î–Ω—Ç–∏)');

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É —á–µ—Ä–µ–∑ wizard
    const result = wizard.navigateBack();
    if (result.success) {
      console.log('–£—Å–ø—ñ—à–Ω–æ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É');
    } else {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:', result.errors);
    }
  };

  return (
    <StepContainer
      title="–ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
      subtitle="–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—ñ—é —Ç–∞ –≤–≤–µ–¥—ñ—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω—É –º—ñ—Ç–∫—É"
    >
      <Box sx={{ minHeight: '400px' }}>
        {/* –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è */}
        {orderCreation.error && (
          <Alert severity="error" sx={{ mb: 3 }}>
            –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {orderCreation.error}
          </Alert>
        )}

        {/* 1. –£–Ω—ñ–∫–∞–ª—å–Ω–∞ –º—ñ—Ç–∫–∞ */}
        <Paper sx={{ p: 3, mb: 3 }}>
          <Typography variant="h6" gutterBottom>
            –£–Ω—ñ–∫–∞–ª—å–Ω–∞ –º—ñ—Ç–∫–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
          </Typography>
          <TextField
            fullWidth
            label="–í–≤–µ–¥—ñ—Ç—å –∞–±–æ –≤—ñ–¥—Å–∫–∞–Ω—É–π—Ç–µ —É–Ω—ñ–∫–∞–ª—å–Ω—É –º—ñ—Ç–∫—É"
            value={tagNumber}
            onChange={handleTagNumberChange}
            placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: OW-001234"
            helperText="–û–±–æ–≤'—è–∑–∫–æ–≤–µ –ø–æ–ª–µ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è"
            error={tagNumber.trim().length === 0}
            sx={{ mb: 2 }}
          />
        </Paper>

        {/* 2. –í–∏–±—ñ—Ä —Ñ—ñ–ª—ñ—ó */}
        <Paper sx={{ p: 3, mb: 3 }}>
          <Typography variant="h6" gutterBottom>
            –ü—É–Ω–∫—Ç –ø—Ä–∏–π–æ–º—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
          </Typography>

          {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –æ–±—Ä–∞–Ω—É —Ñ—ñ–ª—ñ—é */}
          {branchSelection.hasSelection && branchSelection.selectedBranch && (
            <Box sx={{ mb: 3 }}>
              <SelectedBranchInfo
                branch={branchSelection.selectedBranch}
                onClear={branchSelection.clearSelection}
              />
            </Box>
          )}

          {/* –°–µ–ª–µ–∫—Ç–æ—Ä —Ñ—ñ–ª—ñ–π */}
          <BranchSelector
            availableBranches={branchSelection.activeBranches}
            selectedBranch={branchSelection.selectedBranch}
            searchResults={branchSelection.searchResults?.branches}
            onSelectBranch={handleBranchSelect}
            onSearch={branchSelection.search}
            onClearSearch={() => {
              branchSelection.clearSearch();
            }}
            onRefresh={async () => {
              await branchSelection.clearSelection();
              await branchSelection.refreshBranches();
            }}
            isLoading={branchSelection.isLoading}
            error={branchSelection.error}
            showActiveOnly={branchSelection.showActiveOnly}
            onToggleActiveFilter={async () => {
              await branchSelection.clearSelection();
              await branchSelection.toggleActiveFilter();
            }}
          />
        </Paper>

        {/* 3. –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –ø–æ–ª—è */}
        {canCreateOrder && (
          <Box sx={{ mb: 3 }}>
            <AutoFieldsInfo
              fields={['–ù–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó', '–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è']}
              variant="info"
            />
          </Box>
        )}

        {/* 4. –ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è */}
        {orderCreation.hasOrder && orderCreation.currentOrder && (
          <Box sx={{ mb: 3 }}>
            <OrderCreationSummary
              order={{
                receiptNumber: orderCreation.currentOrder.receiptNumber,
                tagNumber: orderCreation.currentOrder.tagNumber,
                createdDate: orderCreation.currentOrder.createdDate,
                expectedCompletionDate: orderCreation.currentOrder.expectedCompletionDate,
                branchLocation: {
                  name: orderCreation.currentOrder.branchLocation?.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ',
                  address: orderCreation.currentOrder.branchLocation?.address,
                  phone: orderCreation.currentOrder.branchLocation?.phone,
                  code: orderCreation.currentOrder.branchLocation?.code,
                },
              }}
            />
          </Box>
        )}
      </Box>

      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É */}
      {orderCreation.hasOrder && orderCreation.currentOrder ? (
        // –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ - –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ Item Manager
        <StepNavigation
          onNext={() => {
            const result = wizard.navigateForward();
            if (result.success) {
              console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–π—à–ª–∏ –¥–æ Item Manager');
            } else {
              console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ Item Manager:', result.errors);
            }
          }}
          onBack={handleBack}
          nextLabel="–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –¥–æ Item Manager"
          backLabel="–ù–∞–∑–∞–¥ –¥–æ –∫–ª—ñ—î–Ω—Ç–∞"
          isNextDisabled={false}
          nextLoading={false}
        />
      ) : (
        // –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ - –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
        <StepNavigation
          onNext={canCreateOrder ? handleNext : undefined}
          onBack={handleBack}
          nextLabel={orderCreation.isCreating ? '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è...' : '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'}
          backLabel="–ù–∞–∑–∞–¥ –¥–æ –∫–ª—ñ—î–Ω—Ç–∞"
          isNextDisabled={!canCreateOrder}
          nextLoading={orderCreation.isCreating}
        />
      )}
    </StepContainer>
  );
};

export default BranchSelectionStep;
