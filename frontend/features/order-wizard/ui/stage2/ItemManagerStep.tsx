'use client';

import { Add as AddIcon } from '@mui/icons-material';
import { Box, Typography, Alert, Fab, Card, CardContent } from '@mui/material';
import React from 'react';

// –î–æ–º–µ–Ω–Ω–∞ –ª–æ–≥—ñ–∫–∞
import { useStage2ItemManager } from '@/domains/wizard/stage2/item-manager';

// –õ–æ–∫–∞–ª—å–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
import {
  ItemManagerHeader,
  ItemManagerSearchForm,
  ItemManagerTable,
  ItemManagerEmptyState,
  ItemManagerNavigation,
} from './components';

interface ItemManagerStepProps {
  sessionId: string;
  onCompleteStage: () => void;
  onAddItem?: () => void;
}

export const ItemManagerStep: React.FC<ItemManagerStepProps> = ({
  sessionId,
  onCompleteStage,
  onAddItem,
}) => {
  // ========== –î–û–ú–ï–ù–ù–ê –õ–û–ì–Ü–ö–ê ==========
  const { ui, data, loading, mutations, computed } = useStage2ItemManager();
  const { sessionId: currentSessionId, setSessionId } = ui;

  // ========== –°–ò–ù–•–†–û–ù–Ü–ó–ê–¶–Ü–Ø SESSION ID ==========
  React.useEffect(() => {
    if (sessionId && sessionId !== currentSessionId) {
      console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è sessionId –≤ Item Manager:', sessionId);
      setSessionId(sessionId);
    }
  }, [sessionId, currentSessionId, setSessionId]);

  // ========== –û–ë–†–û–ë–ù–ò–ö–ò ==========
  const handleAddItem = async () => {
    if (onAddItem) {
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–æ–≤–Ω—ñ—à–Ω—ñ–π –æ–±—Ä–æ–±–Ω–∏–∫ (–¥–ª—è –∑–∞–ø—É—Å–∫—É –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞)
      onAddItem();
    } else {
      // Fallback - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ª–æ–≥—ñ–∫–∞
      try {
        await mutations.startNewWizard.mutateAsync({ sessionId });
        console.log('‚úÖ –í—ñ–∑–∞—Ä–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–æ');
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –≤—ñ–∑–∞—Ä–¥–∞:', error);
      }
    }
  };

  const handleEditItem = async (itemId: string) => {
    try {
      await mutations.startEditWizard.mutateAsync({ sessionId, itemId });
      console.log('‚úÖ –í—ñ–∑–∞—Ä–¥ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –≤—ñ–∑–∞—Ä–¥–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è:', error);
    }
  };

  const handleDeleteItem = async (itemId: string) => {
    try {
      await mutations.deleteItem.mutateAsync({ sessionId, itemId });
      console.log('‚úÖ –ü—Ä–µ–¥–º–µ—Ç –≤–∏–¥–∞–ª–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
    }
  };

  const handleSearchChange = (value: string) => {
    ui.setSearchTerm(value);
  };

  const handleProceedToNext = () => {
    onCompleteStage();
  };

  // ========== COMPUTED VALUES ==========
  const items = data.currentManager?.addedItems || [];
  const totalAmount = data.currentManager?.totalAmount || 0;

  // ========== RENDER ==========
  return (
    <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Typography variant="h4" component="h1" gutterBottom align="center">
        –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
      </Typography>

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó */}
      {!computed.isReady && (
        <Alert severity="info" sx={{ mb: 2 }}>
          –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤...
        </Alert>
      )}

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞ –≥–æ–ª–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞ */}
      <ItemManagerHeader
        itemsCount={items.length}
        totalAmount={totalAmount}
        onAddItem={handleAddItem}
        loading={loading.isAnyLoading || !computed.isReady}
      />

      {/* –ü–æ—à—É–∫ (–ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –ø—Ä–µ–¥–º–µ—Ç–∏) */}
      {items.length > 0 && (
        <ItemManagerSearchForm searchTerm={ui.searchTerm} onSearchChange={handleSearchChange} />
      )}

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç: —Ç–∞–±–ª–∏—Ü—è –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å—Ç–∞–Ω */}
      {items.length === 0 ? (
        <ItemManagerEmptyState onAddItem={handleAddItem} />
      ) : (
        <Card>
          <CardContent>
            <Typography variant="h6" gutterBottom>
              –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ ({items.length})
            </Typography>
            <ItemManagerTable
              items={items}
              searchTerm={ui.searchTerm}
              onEditItem={handleEditItem}
              onDeleteItem={handleDeleteItem}
              loading={loading.isAnyLoading}
            />
          </CardContent>
        </Card>
      )}

      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ—è (–ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –ø—Ä–µ–¥–º–µ—Ç–∏) */}
      {items.length > 0 && (
        <ItemManagerNavigation
          itemsCount={items.length}
          onAddItem={handleAddItem}
          onProceedToNext={handleProceedToNext}
          loading={loading.isAnyLoading}
        />
      )}

      {/* Floating Action Button –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è */}
      <Fab
        color="primary"
        aria-label="add"
        sx={{ position: 'fixed', bottom: 16, right: 16 }}
        onClick={handleAddItem}
        disabled={loading.isAnyLoading || !computed.isReady}
      >
        <AddIcon />
      </Fab>
    </Box>
  );
};
