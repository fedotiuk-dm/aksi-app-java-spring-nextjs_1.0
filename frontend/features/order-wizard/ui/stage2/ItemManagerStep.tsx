'use client';

import { Add as AddIcon } from '@mui/icons-material';
import { Box, Typography, Alert, Fab, Card, CardContent } from '@mui/material';
import React, { useEffect, useRef, useCallback } from 'react';

// –î–æ–º–µ–Ω–Ω–∞ –ª–æ–≥—ñ–∫–∞
import { useStage2ItemManager } from '@/domains/wizard/stage2/item-manager';
import { ITEM_MANAGER_UI_STATES } from '@/domains/wizard/stage2/item-manager/constants';
import { useStage2Workflow } from '@/domains/wizard/stage2/workflow';
import { useMainWizard } from '@/domains/wizard/main';

// –õ–æ–∫–∞–ª—å–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
import {
  ItemManagerHeader,
  ItemManagerSearchForm,
  ItemManagerTable,
  ItemManagerEmptyState,
  ItemManagerNavigation,
} from './components';

// –ü—ñ–¥–≤—ñ–∑–∞—Ä–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
import { Substep1Container } from './substep1/Substep1Container';

// –ó–∞–≥–∞–ª—å–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ - —Å—Ç–≤–æ—Ä–∏–º–æ –ø—Ä–æ—Å—Ç–∏–π –¥—ñ–∞–ª–æ–≥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ
const SimpleConfirmationDialog: React.FC<{
  open: boolean;
  title: string;
  content: string;
  onConfirm: () => void;
  onCancel: () => void;
  loading?: boolean;
}> = ({ open, title, content, onConfirm, onCancel, loading = false }) => {
  if (!open) return null;

  return (
    <div
      style={{
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: 'rgba(0,0,0,0.5)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        zIndex: 1300,
      }}
    >
      <Card sx={{ maxWidth: 400, mx: 2 }}>
        <CardContent>
          <Typography variant="h6" gutterBottom>
            {title}
          </Typography>
          <Typography variant="body2" sx={{ mb: 3 }}>
            {content}
          </Typography>
          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'flex-end' }}>
            <button onClick={onCancel} disabled={loading}>
              –°–∫–∞—Å—É–≤–∞—Ç–∏
            </button>
            <button
              onClick={onConfirm}
              disabled={loading}
              style={{
                backgroundColor: '#f44336',
                color: 'white',
                border: 'none',
                padding: '8px 16px',
                borderRadius: '4px',
              }}
            >
              {loading ? '–í–∏–¥–∞–ª–µ–Ω–Ω—è...' : '–í–∏–¥–∞–ª–∏—Ç–∏'}
            </button>
          </Box>
        </CardContent>
      </Card>
    </div>
  );
};

interface ItemManagerStepProps {
  onCompleteStage: () => void;
}

export const ItemManagerStep: React.FC<ItemManagerStepProps> = ({ onCompleteStage }) => {
  // ========== –î–û–ú–ï–ù–ù–ê –õ–û–ì–Ü–ö–ê ==========
  const { ui, data, loading, mutations, computed, forms } = useStage2ItemManager();
  const stage2Workflow = useStage2Workflow();
  const mainWizard = useMainWizard();

  // Ref –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  const initializationAttempted = useRef(false);
  const lastMainSessionId = useRef<string | null>(null);

  // ========== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ==========
  const initializeStage2 = useCallback(async () => {
    const currentMainSessionId = mainWizard.ui.sessionId;
    const currentStage2SessionId = ui.sessionId;
    const isCurrentlyInitializing = loading.isInitializing;
    const isAlreadyInitialized = computed.isInitialized;

    console.log('üîç initializeStage2 –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
      mainWizardSessionId: currentMainSessionId,
      isInitialized: isAlreadyInitialized,
      isInitializing: isCurrentlyInitializing,
      currentUIState: ui.currentUIState,
      initializationAttempted: initializationAttempted.current,
      stage2SessionId: currentStage2SessionId,
    });

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    if (
      !currentMainSessionId ||
      isAlreadyInitialized ||
      isCurrentlyInitializing ||
      initializationAttempted.current
    ) {
      console.log('üö´ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ —á–µ—Ä–µ–∑ —É–º–æ–≤–∏:', {
        noSessionId: !currentMainSessionId,
        isInitialized: isAlreadyInitialized,
        isInitializing: isCurrentlyInitializing,
        initializationAttempted: initializationAttempted.current,
      });
      return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ Stage2 sessionId –≤–∂–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —ñ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ –≥–æ–ª–æ–≤–Ω–æ–≥–æ
    if (currentStage2SessionId && currentStage2SessionId !== currentMainSessionId) {
      console.log('‚úÖ Stage2 –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –∑ sessionId:', currentStage2SessionId);
      return;
    }

    // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —â–æ —Å–ø—Ä–æ–±–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ä–æ–∑–ø–æ—á–∞—Ç–∞
    initializationAttempted.current = true;

    try {
      console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Stage2 Item Manager –¥–ª—è orderId:', currentMainSessionId);

      ui.setCurrentUIState(ITEM_MANAGER_UI_STATES.INITIALIZING);

      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ sessionId —è–∫ orderId (–∑–≥—ñ–¥–Ω–æ –∑ –ª–æ–≥—ñ–∫–æ—é –±–µ–∫–µ–Ω–¥—É)
      const response = await mutations.initializeManager.mutateAsync({
        orderId: currentMainSessionId,
      });

      console.log('‚úÖ Stage2 Item Manager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ:', response);

      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ sessionId –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ API (Stage2 –º–∞—î –≤–ª–∞—Å–Ω–∏–π sessionId)
      if (response?.sessionId) {
        console.log('üîÑ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Stage2 sessionId:', response.sessionId);

        ui.setSessionId(response.sessionId);
        stage2Workflow.ui.setSessionId(response.sessionId);
      }

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ ready —Å—Ç–∞–Ω—É
      ui.setCurrentUIState(ITEM_MANAGER_UI_STATES.READY);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Stage2 Item Manager:', error);
      ui.setCurrentUIState(ITEM_MANAGER_UI_STATES.ERROR);
      // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ, —â–æ–± –º–æ–∂–Ω–∞ –±—É–ª–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
      initializationAttempted.current = false;
    }
  }, [
    mainWizard.ui.sessionId,
    ui,
    computed.isInitialized,
    loading.isInitializing,
    mutations.initializeManager,
    stage2Workflow.ui,
  ]);

  useEffect(() => {
    const currentMainSessionId = mainWizard.ui.sessionId;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–º—ñ–Ω–∏–≤—Å—è –≥–æ–ª–æ–≤–Ω–∏–π sessionId
    if (currentMainSessionId && currentMainSessionId !== lastMainSessionId.current) {
      console.log('üîÑ –ó–º—ñ–Ω–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ sessionId:', {
        old: lastMainSessionId.current,
        new: currentMainSessionId,
      });

      // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      initializationAttempted.current = false;
      lastMainSessionId.current = currentMainSessionId;

      // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω Stage2 —è–∫—â–æ –≤—ñ–Ω –±—É–≤ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –∑ —ñ–Ω—à–∏–º sessionId
      if (ui.sessionId !== null && ui.sessionId !== currentMainSessionId) {
        console.log('üîÑ –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É Stage2');
        ui.resetUIState();
      }

      // –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é
      initializeStage2();
    }
  }, [mainWizard.ui.sessionId, initializeStage2, ui]);

  // ========== –û–ë–†–û–ë–ù–ò–ö–ò –ü–û–î–Ü–ô ==========
  const handleAddItem = async () => {
    try {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –≤—ñ–∑–∞—Ä–¥–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤...');

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞–Ω —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
      if (!computed.isReady) {
        console.error('‚ùå Stage2 —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π –¥–ª—è —Ä–æ–±–æ—Ç–∏. –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω:', ui.currentUIState);
        return;
      }

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å sessionId
      if (!ui.sessionId) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π sessionId –¥–ª—è –∑–∞–ø—É—Å–∫—É –≤—ñ–∑–∞—Ä–¥–∞. UI —Å—Ç–∞–Ω:', {
          sessionId: ui.sessionId,
          currentUIState: ui.currentUIState,
          isReady: computed.isReady,
          mainWizardSessionId: mainWizard.ui.sessionId,
        });
        return;
      }

      // –ó–∞–ø—É—Å–∫–∞—î–º–æ –Ω–æ–≤–∏–π –≤—ñ–∑–∞—Ä–¥ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ —á–µ—Ä–µ–∑ API
      const response = await stage2Workflow.mutations.startNewWizard.mutateAsync({
        sessionId: ui.sessionId,
      });

      console.log('‚úÖ –í—ñ–∑–∞—Ä–¥ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ –∑–∞–ø—É—â–µ–Ω–æ:', response);

      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≤—ñ–∑–∞—Ä–¥–∞
      stage2Workflow.ui.setCurrentSubstep('substep1');
      stage2Workflow.ui.setCurrentUIState('item-wizard-active');
      stage2Workflow.ui.setCurrentOperation('start-new-item');
      stage2Workflow.ui.setIsWizardActive(true);
      stage2Workflow.ui.setShowItemWizard(true);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –≤—ñ–∑–∞—Ä–¥–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤:', error);
    }
  };

  const handleEditClick = async (itemId: string) => {
    try {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞:', itemId);

      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å sessionId
      if (!ui.sessionId) {
        console.error('‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π sessionId –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞');
        return;
      }

      // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞ —á–µ—Ä–µ–∑ API
      const response = await stage2Workflow.mutations.startEditWizard.mutateAsync({
        sessionId: ui.sessionId,
        itemId: itemId,
      });

      console.log('‚úÖ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–ø—É—â–µ–Ω–æ:', response);

      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –≤—ñ–∑–∞—Ä–¥–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
      stage2Workflow.ui.setActiveItemId(itemId);
      stage2Workflow.ui.setCurrentSubstep('substep1');
      stage2Workflow.ui.setCurrentUIState('item-wizard-active');
      stage2Workflow.ui.setCurrentOperation('start-edit-item');
      stage2Workflow.ui.setIsWizardActive(true);
      stage2Workflow.ui.setShowItemWizard(true);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
    }
  };

  const handleDeleteClick = (itemId: string) => {
    ui.setDeletingItemId(itemId);
    ui.setShowDeleteConfirmation(true);
  };

  const handleDeleteConfirm = async () => {
    if (ui.deletingItemId) {
      try {
        console.log('üîÑ –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞:', ui.deletingItemId);

        // TODO: –î–æ–¥–∞—Ç–∏ API –≤–∏–∫–ª–∏–∫ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞
        // –ü–æ–∫–∏ —â–æ —Ç—ñ–ª—å–∫–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è
        console.log('‚úÖ –ü—Ä–µ–¥–º–µ—Ç –≤–∏–¥–∞–ª–µ–Ω–æ (–∑–∞–≥–ª—É—à–∫–∞)');

        ui.setDeletingItemId(null);
        ui.setShowDeleteConfirmation(false);
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
      }
    }
  };

  const handleDeleteCancel = () => {
    ui.setDeletingItemId(null);
    ui.setShowDeleteConfirmation(false);
  };

  const handleSearchChange = (value: string) => {
    ui.setSearchTerm(value);
  };

  const handleProceedToNext = () => {
    // –í–∏–∫–ª–∏–∫–∞—î–º–æ –ø—Ä–æ–ø –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –µ—Ç–∞–ø—É
    onCompleteStage();
  };

  // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞
  const handleCloseWizard = async () => {
    try {
      console.log('üîÑ –ó–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∑–∞—Ä–¥–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤...');

      if (ui.sessionId) {
        await stage2Workflow.mutations.closeWizard.mutateAsync({
          sessionId: ui.sessionId,
        });
      }

      // –°–∫–∏–¥–∞—î–º–æ —Å—Ç–∞–Ω –≤—ñ–∑–∞—Ä–¥–∞
      stage2Workflow.ui.setIsWizardActive(false);
      stage2Workflow.ui.setShowItemWizard(false);
      stage2Workflow.ui.setActiveItemId(null);
      stage2Workflow.ui.setCurrentSubstep('substep1');

      console.log('‚úÖ –í—ñ–∑–∞—Ä–¥ –∑–∞–∫—Ä–∏—Ç–æ');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∑–∞—Ä–¥–∞:', error);
    }
  };

  const handleWizardCompleted = async () => {
    try {
      console.log('üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—ñ–∑–∞—Ä–¥–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤...');

      // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–∑–∞—Ä–¥
      await handleCloseWizard();

      // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      // TODO: –ú–æ–∂–ª–∏–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –¥–æ–¥–∞—Ç–∏ —Ä–µ—Ñ—Ä–µ—à –¥–∞–Ω–∏—Ö

      console.log('‚úÖ –í—ñ–∑–∞—Ä–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –ø—Ä–µ–¥–º–µ—Ç –¥–æ–¥–∞–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—ñ–∑–∞—Ä–¥–∞:', error);
    }
  };

  // ========== COMPUTED VALUES ==========
  const items = data.currentManager?.addedItems || [];
  const totalAmount = data.currentManager?.totalAmount || 0;

  // ========== RENDER ==========

  // –Ø–∫—â–æ –∞–∫—Ç–∏–≤–Ω–∏–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥, –ø–æ–∫–∞–∑—É—î–º–æ –π–æ–≥–æ –∑–∞–º—ñ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  if (stage2Workflow.ui.showItemWizard && stage2Workflow.ui.isWizardActive) {
    return (
      <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>
        <Substep1Container
          sessionId={ui.sessionId}
          onNext={() => {
            // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—ñ–¥–µ—Ç–∞–ø—É
            stage2Workflow.ui.goToNextSubstep();
          }}
          onPrevious={() => {
            // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø—ñ–¥–µ—Ç–∞–ø—É –∞–±–æ –∑–∞–∫—Ä–∏—Ç—Ç—è –≤—ñ–∑–∞—Ä–¥–∞
            if (stage2Workflow.ui.currentSubstep === 'substep1') {
              handleCloseWizard();
            } else {
              stage2Workflow.ui.goToPreviousSubstep();
            }
          }}
          onComplete={handleWizardCompleted}
        />
      </Box>
    );
  }

  return (
    <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Typography variant="h4" component="h1" gutterBottom align="center">
        –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
      </Typography>

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó */}
      {!computed.isReady && (
        <Alert severity="info" sx={{ mb: 2 }}>
          –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤... –ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω: {ui.currentUIState}
        </Alert>
      )}

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞ –≥–æ–ª–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞ */}
      <ItemManagerHeader
        itemsCount={items.length}
        totalAmount={totalAmount}
        onAddItem={handleAddItem}
        loading={loading.isAnyLoading || !computed.isReady}
      />

      {/* –ü–æ—à—É–∫ (–ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –ø—Ä–µ–¥–º–µ—Ç–∏) */}
      {items.length > 0 && (
        <ItemManagerSearchForm searchTerm={ui.searchTerm} onSearchChange={handleSearchChange} />
      )}

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç: —Ç–∞–±–ª–∏—Ü—è –∞–±–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å—Ç–∞–Ω */}
      {items.length === 0 ? (
        <ItemManagerEmptyState onAddItem={handleAddItem} />
      ) : (
        <Card>
          <CardContent>
            <Typography variant="h6" gutterBottom>
              –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤ ({items.length})
            </Typography>
            <ItemManagerTable
              items={items}
              searchTerm={ui.searchTerm}
              onEditItem={handleEditClick}
              onDeleteItem={handleDeleteClick}
              loading={loading.isAnyLoading}
            />
          </CardContent>
        </Card>
      )}

      {/* –ù–∞–≤—ñ–≥–∞—Ü—ñ—è (–ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î –ø—Ä–µ–¥–º–µ—Ç–∏) */}
      {items.length > 0 && (
        <ItemManagerNavigation
          itemsCount={items.length}
          onAddItem={handleAddItem}
          onProceedToNext={handleProceedToNext}
          loading={loading.isAnyLoading}
        />
      )}

      {/* Floating Action Button –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è */}
      <Fab
        color="primary"
        aria-label="add"
        sx={{ position: 'fixed', bottom: 16, right: 16 }}
        onClick={handleAddItem}
        disabled={loading.isAnyLoading || !computed.isReady}
      >
        <AddIcon />
      </Fab>

      {/* –î—ñ–∞–ª–æ–≥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è */}
      <SimpleConfirmationDialog
        open={ui.showDeleteConfirmation}
        title="–í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç?"
        content="–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –ø—Ä–µ–¥–º–µ—Ç –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è? –¶—é –¥—ñ—é –Ω–µ–º–æ–∂–ª–∏–≤–æ —Å–∫–∞—Å—É–≤–∞—Ç–∏."
        onConfirm={handleDeleteConfirm}
        onCancel={handleDeleteCancel}
        loading={loading.isDeletingItem}
      />
    </Box>
  );
};
