'use client';

import { Box, Typography, Alert } from '@mui/material';
import React, { useEffect } from 'react';

// –î–æ–º–µ–Ω–Ω–∞ –ª–æ–≥—ñ–∫–∞
import { useStage2Workflow } from '@/domains/wizard/stage2/workflow';
import { STAGE2_SUBSTEPS } from '@/domains/wizard/stage2/workflow/constants';

// –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
import { ItemManagerStep } from './ItemManagerStep';

// –ü—ñ–¥–≤—ñ–∑–∞—Ä–¥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
import { Substep1Container } from './substep1/Substep1Container';
import { Substep2Container } from './substep2/Substep2Container';

interface Stage2ContainerProps {
  sessionId: string;
  onStageCompleted: () => void;
  onGoBack: () => void;
}

export const Stage2Container: React.FC<Stage2ContainerProps> = ({
  sessionId,
  onStageCompleted,
  onGoBack,
}) => {
  // ========== –î–û–ú–ï–ù–ù–ê –õ–û–ì–Ü–ö–ê ==========
  const workflow = useStage2Workflow();

  // ========== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø ==========
  const initializeStage2 = React.useCallback(async () => {
    if (sessionId && !workflow.ui.sessionId) {
      console.log('üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Stage2 Workflow –∑ sessionId:', sessionId);
      workflow.ui.setSessionId(sessionId);

      try {
        await workflow.mutations.initializeManager.mutateAsync({ orderId: sessionId });
        console.log('‚úÖ Stage2 —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω - –ø–æ–∫–∞–∑—É—î–º–æ –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
        workflow.ui.setShowItemWizard(false);
        workflow.ui.setIsWizardActive(false);
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Stage2:', error);
      }
    }
  }, [sessionId, workflow.mutations.initializeManager, workflow.ui]);

  useEffect(() => {
    initializeStage2();
  }, [initializeStage2]);

  // ========== –û–ë–†–û–ë–ù–ò–ö–ò –ù–ê–í–Ü–ì–ê–¶–Ü–á ==========
  const handleStartItemWizard = () => {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞');
    workflow.ui.setShowItemWizard(true);
    workflow.ui.setIsWizardActive(true);
    workflow.ui.setCurrentSubstep(STAGE2_SUBSTEPS.SUBSTEP1);
  };

  const handleCloseItemWizard = () => {
    console.log('üîÑ –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞, –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤');
    workflow.ui.setShowItemWizard(false);
    workflow.ui.setIsWizardActive(false);
    // –°–∫–∏–¥–∞—î–º–æ –ø—ñ–¥–µ—Ç–∞–ø –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π
    workflow.ui.setCurrentSubstep(STAGE2_SUBSTEPS.SUBSTEP1);
  };

  const handleItemWizardCompleted = () => {
    console.log('‚úÖ –ü—ñ–¥–≤—ñ–∑–∞—Ä–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –ø—Ä–µ–¥–º–µ—Ç –¥–æ–¥–∞–Ω–æ, –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞');
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
    handleCloseItemWizard();
  };

  const handleSubstepCompleted = async (substep: string) => {
    console.log(`‚úÖ ${substep} –∑–∞–≤–µ—Ä—à–µ–Ω–æ`);

    if (workflow.computed.isLastSubstep) {
      // –û—Å—Ç–∞–Ω–Ω—ñ–π –ø—ñ–¥–µ—Ç–∞–ø - –∑–∞–≤–µ—Ä—à—É—î–º–æ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥
      handleItemWizardCompleted();
    } else {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—ñ–¥–µ—Ç–∞–ø—É
      workflow.ui.goToNextSubstep();
    }
  };

  const handleGoToPrevious = () => {
    if (workflow.computed.isFirstSubstep) {
      // –Ø–∫—â–æ —Ü–µ –ø–µ—Ä—à–∏–π –ø—ñ–¥–µ—Ç–∞–ø - –∑–∞–∫—Ä–∏–≤–∞—î–º–æ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥
      handleCloseItemWizard();
    } else {
      workflow.ui.goToPreviousSubstep();
    }
  };

  const handleCompleteStage = async () => {
    try {
      console.log('üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è Stage2...');
      await workflow.mutations.completeStage.mutateAsync({ sessionId });
      console.log('‚úÖ Stage2 –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      onStageCompleted();
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è Stage2:', error);
    }
  };

  // ========== –†–ï–ù–î–ï–† –ö–û–ù–¢–ï–ù–¢–£ ==========
  const renderContent = () => {
    // –Ø–∫—â–æ –∞–∫—Ç–∏–≤–Ω–∏–π –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ - –ø–æ–∫–∞–∑—É—î–º–æ –ø—ñ–¥–µ—Ç–∞–ø–∏
    if (workflow.ui.showItemWizard && workflow.ui.isWizardActive) {
      const currentSubstep = workflow.ui.currentSubstep;

      switch (currentSubstep) {
        case STAGE2_SUBSTEPS.SUBSTEP1:
          return (
            <Substep1Container
              sessionId={sessionId}
              onNext={() => workflow.ui.goToNextSubstep()}
              onPrevious={handleGoToPrevious}
              onComplete={() => handleSubstepCompleted('substep1')}
            />
          );

        case STAGE2_SUBSTEPS.SUBSTEP2:
          return (
            <Substep2Container
              sessionId={sessionId}
              onNext={() => workflow.ui.goToNextSubstep()}
              onPrevious={() => workflow.ui.goToPreviousSubstep()}
              onComplete={() => handleSubstepCompleted('substep2')}
            />
          );

        case STAGE2_SUBSTEPS.SUBSTEP3:
          return (
            <Box sx={{ p: 3, textAlign: 'center' }}>
              <Typography variant="h5">–ü—ñ–¥–µ—Ç–∞–ø 3 (–í —Ä–æ–∑—Ä–æ–±—Ü—ñ)</Typography>
              <Typography variant="body1" sx={{ mt: 2 }}>
                –ó–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è —Ç–∞ –¥–µ—Ñ–µ–∫—Ç–∏
              </Typography>
            </Box>
          );

        case STAGE2_SUBSTEPS.SUBSTEP4:
          return (
            <Box sx={{ p: 3, textAlign: 'center' }}>
              <Typography variant="h5">–ü—ñ–¥–µ—Ç–∞–ø 4 (–í —Ä–æ–∑—Ä–æ–±—Ü—ñ)</Typography>
              <Typography variant="body1" sx={{ mt: 2 }}>
                –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏
              </Typography>
            </Box>
          );

        case STAGE2_SUBSTEPS.SUBSTEP5:
          return (
            <Box sx={{ p: 3, textAlign: 'center' }}>
              <Typography variant="h5">–ü—ñ–¥–µ—Ç–∞–ø 5 (–í —Ä–æ–∑—Ä–æ–±—Ü—ñ)</Typography>
              <Typography variant="body1" sx={{ mt: 2 }}>
                –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
              </Typography>
            </Box>
          );

        default:
          return <Alert severity="error">–ù–µ–≤—ñ–¥–æ–º–∏–π –ø—ñ–¥–µ—Ç–∞–ø: {currentSubstep}</Alert>;
      }
    }

    // –Ü–Ω–∞–∫—à–µ –ø–æ–∫–∞–∑—É—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
    return (
      <ItemManagerStep
        sessionId={sessionId}
        onCompleteStage={handleCompleteStage}
        onAddItem={handleStartItemWizard}
      />
    );
  };

  // ========== RENDER ==========
  return (
    <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Typography variant="h4" component="h1" gutterBottom align="center">
        {workflow.ui.showItemWizard && workflow.ui.isWizardActive
          ? `–ï—Ç–∞–ø 2: –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞ - ${workflow.ui.currentSubstep}`
          : '–ï—Ç–∞–ø 2: –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏'}
      </Typography>

      {workflow.ui.showItemWizard && workflow.ui.isWizardActive && (
        <Typography variant="body1" color="text.secondary" align="center" sx={{ mb: 4 }}>
          –ü—ñ–¥–µ—Ç–∞–ø {workflow.ui.currentSubstep} ‚Ä¢ –ü—Ä–æ–≥—Ä–µ—Å:{' '}
          {workflow.computed.substepProgressPercentage}%
        </Typography>
      )}

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */}
      {workflow.loading.isAnyLoading && (
        <Alert severity="info" sx={{ mb: 2 }}>
          –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...
        </Alert>
      )}

      {/* –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      {renderContent()}
    </Box>
  );
};
