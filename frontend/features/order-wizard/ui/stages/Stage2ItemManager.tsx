'use client';

import { Box, Typography, Paper, Alert } from '@mui/material';
import React from 'react';

import { useStage2Manager, useItemWizard } from '@/domains/wizard';

import { ItemManagerScreen } from '../components/stage2/ItemManagerScreen';
import { ItemWizard } from '../components/stage2/ItemWizard';

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è Stage 2 - Item Manager
 *
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–º–∏–ª–æ–∫
 * - –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º—ñ–∂ –≥–æ–ª–æ–≤–Ω–∏–º –µ–∫—Ä–∞–Ω–æ–º —Ç–∞ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–æ–º
 * - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—è —Ä–æ–±–æ—Ç–∏ –¥–æ—á—ñ—Ä–Ω—ñ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
 */
interface Stage2ItemManagerProps {
  orderId: string;
  onComplete?: () => void;
  onBack?: () => void;
}

export const Stage2ItemManager: React.FC<Stage2ItemManagerProps> = ({
  orderId,
  onComplete,
  onBack,
}) => {
  // –î–æ–º–µ–Ω–Ω—ñ —Ö—É–∫–∏
  const {
    manager,
    currentState,
    isLoading,
    error,
    totalAmount,
    itemCount,
    canProceedToNextStage,
    addedItems,
    initializeManager,
    clearError,
  } = useStage2Manager();

  const { isWizardActive, wizardMode } = useItemWizard();

  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ
  React.useEffect(() => {
    console.log('üîç Stage2ItemManager useEffect:', { orderId, currentState });

    if (orderId && currentState === 'NOT_STARTED') {
      console.log('üöÄ Calling initializeManager with orderId:', orderId);
      initializeManager(orderId);
    } else {
      console.log('‚ö†Ô∏è Not calling initializeManager:', {
        hasOrderId: !!orderId,
        currentState,
        shouldInitialize: orderId && currentState === 'NOT_STARTED',
      });
    }
  }, [orderId, currentState, initializeManager]);

  // –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –µ—Ç–∞–ø—É
  const handleComplete = React.useCallback(() => {
    if (canProceedToNextStage && onComplete) {
      onComplete();
    }
  }, [canProceedToNextStage, onComplete]);

  // –†–µ–Ω–¥–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å—Ç–∞–Ω—É
  const renderContent = () => {
    // –ü–æ–∫–∞–∑—É—î–º–æ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥ —è–∫—â–æ –≤—ñ–Ω –∞–∫—Ç–∏–≤–Ω–∏–π
    if (isWizardActive) {
      return (
        <ItemWizard
          mode={wizardMode}
          onComplete={() => {
            // –ü—ñ–¥–≤—ñ–∑–∞—Ä–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–∫—Ä–∏—î—Ç—å—Å—è —á–µ—Ä–µ–∑ –¥–æ–º–µ–Ω–Ω–∏–π —Ö—É–∫
          }}
        />
      );
    }

    // –ü–æ–∫–∞–∑—É—î–º–æ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    return (
      <ItemManagerScreen
        items={addedItems}
        totalAmount={totalAmount}
        itemCount={itemCount}
        canProceedToNextStage={canProceedToNextStage}
        onComplete={handleComplete}
        onBack={onBack}
      />
    );
  };

  return (
    <Box sx={{ width: '100%', maxWidth: 1200, mx: 'auto', p: 3 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –µ—Ç–∞–ø—É */}
      <Box sx={{ mb: 3 }}>
        <Typography variant="h4" component="h1" gutterBottom>
          –ï—Ç–∞–ø 2: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
        </Typography>
        <Typography variant="subtitle1" color="text.secondary">
          –î–æ–¥–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ —ó—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
        </Typography>
      </Box>

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞–Ω—É */}
      <Box sx={{ mb: 3 }}>
        <Paper sx={{ p: 2, backgroundColor: 'background.default' }}>
          <Typography variant="body2" color="text.secondary">
            –°—Ç–∞–Ω: <strong>{getStateDisplayName(currentState)}</strong>
            {itemCount > 0 && (
              <>
                {' ‚Ä¢ '}
                –ü—Ä–µ–¥–º–µ—Ç—ñ–≤: <strong>{itemCount}</strong>
                {' ‚Ä¢ '}
                –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: <strong>{formatPrice(totalAmount)}</strong>
              </>
            )}
          </Typography>
        </Paper>
      </Box>

      {/* –ü–æ–º–∏–ª–∫–∏ */}
      {error && (
        <Alert severity="error" onClose={clearError} sx={{ mb: 3 }}>
          {error}
        </Alert>
      )}

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è */}
      {isLoading && currentState === 'INITIALIZING' && (
        <Alert severity="info" sx={{ mb: 3 }}>
          –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç—ñ–≤...
        </Alert>
      )}

      {/* –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      {renderContent()}
    </Box>
  );
};

// –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
function getStateDisplayName(state: string): string {
  const stateNames: Record<string, string> = {
    NOT_STARTED: '–ù–µ —Ä–æ–∑–ø–æ—á–∞—Ç–æ',
    INITIALIZING: '–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è',
    ITEMS_MANAGER_SCREEN: '–ï–∫—Ä–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
    ITEM_WIZARD_ACTIVE: '–ê–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–∑–∞—Ä–¥',
    READY_TO_PROCEED: '–ì–æ—Ç–æ–≤–æ –¥–æ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è',
    COMPLETED: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
    ERROR: '–ü–æ–º–∏–ª–∫–∞',
  };

  return stateNames[state] || state;
}

function formatPrice(price: number): string {
  return new Intl.NumberFormat('uk-UA', {
    style: 'currency',
    currency: 'UAH',
    minimumFractionDigits: 2,
  }).format(price);
}
