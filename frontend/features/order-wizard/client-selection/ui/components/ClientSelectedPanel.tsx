'use client';

import {
  CheckCircle,
  Edit,
  SwapHoriz,
  ArrowForward,
  Person,
  Phone,
  Email,
  LocationOn,
  NewReleases,
} from '@mui/icons-material';
import {
  Box,
  Typography,
  Button,
  Card,
  CardContent,
  Chip,
  Divider,
  Alert,
  Grid,
} from '@mui/material';
import React from 'react';

import type { ClientSearchResult } from '@/domain/wizard/services/stage-1-client-and-order-info';

const ICON_SIZE = 20;
const ICON_STYLE = { mr: 1, color: 'text.secondary', fontSize: ICON_SIZE } as const;

interface ClientSelectedPanelProps {
  client: ClientSearchResult;
  isNewClient: boolean;
  formatPhone: (phone: string) => string;
  createClientSummary: (client: ClientSearchResult) => string;
  onEdit: () => void;
  onChangeClient: () => void;
  onProceed: () => void;
}

/**
 * –ü–∞–Ω–µ–ª—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
 */
export const ClientSelectedPanel: React.FC<ClientSelectedPanelProps> = ({
  client,
  isNewClient,
  formatPhone,
  createClientSummary,
  onEdit,
  onChangeClient,
  onProceed,
}) => {
  const fullName = client.fullName || `${client.firstName} ${client.lastName}`;

  return (
    <Box>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>
        <CheckCircle sx={{ mr: 2, color: 'success.main' }} />
        <Typography variant="h6">
          {isNewClient ? '–ù–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ' : '–ö–ª—ñ—î–Ω—Ç –≤–∏–±—Ä–∞–Ω–æ'}
        </Typography>
      </Box>

      {/* –°—Ç–∞—Ç—É—Å –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ */}
      {isNewClient && (
        <Alert severity="success" sx={{ mb: 3 }} icon={<NewReleases />}>
          –ù–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–±—Ä–∞–Ω–∏–π –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        </Alert>
      )}

      {/* –ö–∞—Ä—Ç–∫–∞ –∫–ª—ñ—î–Ω—Ç–∞ */}
      <Card elevation={2} sx={{ mb: 3 }}>
        <CardContent>
          <Grid container spacing={3}>
            {/* –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
            <Grid size={{ xs: 12 }}>
              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                <Person sx={{ mr: 1, color: 'primary.main' }} />
                <Typography variant="h5" component="div">
                  {fullName}
                </Typography>
              </Box>
            </Grid>

            {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
            <Grid size={{ xs: 12, md: 6 }}>
              <Typography variant="h6" gutterBottom>
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
              </Typography>

              <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                <Phone sx={ICON_STYLE} />
                <Typography variant="body1">{formatPhone(client.phone)}</Typography>
              </Box>

              {client.email && (
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>
                  <Email sx={ICON_STYLE} />
                  <Typography variant="body1">{client.email}</Typography>
                </Box>
              )}

              {client.address && (
                <Box sx={{ display: 'flex', alignItems: 'flex-start', mb: 1 }}>
                  <LocationOn sx={{ ...ICON_STYLE, mt: 0.2 }} />
                  <Typography variant="body1">{client.address}</Typography>
                </Box>
              )}
            </Grid>

            {/* –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
            <Grid size={{ xs: 12, md: 6 }}>
              <Typography variant="h6" gutterBottom>
                –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
              </Typography>

              {client.orderCount !== undefined && (
                <Typography variant="body2" color="text.secondary" sx={{ mb: 1 }}>
                  –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å: {client.orderCount}
                </Typography>
              )}

              {isNewClient && (
                <Chip label="–ù–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç" color="primary" size="small" sx={{ mb: 1 }} />
              )}

              <Typography variant="body2" color="text.secondary">
                ID –∫–ª—ñ—î–Ω—Ç–∞: {client.id}
              </Typography>
            </Grid>
          </Grid>
        </CardContent>
      </Card>

      {/* –†–µ–∑—é–º–µ –∫–ª—ñ—î–Ω—Ç–∞ */}
      <Box sx={{ p: 2, bgcolor: 'grey.50', borderRadius: 1, mb: 3 }}>
        <Typography variant="subtitle2" gutterBottom>
          –†–µ–∑—é–º–µ –∫–ª—ñ—î–Ω—Ç–∞:
        </Typography>
        <Typography variant="body2" color="text.secondary">
          {createClientSummary(client)}
        </Typography>
      </Box>

      <Divider sx={{ my: 3 }} />

      {/* –î—ñ—ó */}
      <Box sx={{ display: 'flex', gap: 2, justifyContent: 'space-between', flexWrap: 'wrap' }}>
        {/* –ö–Ω–æ–ø–∫–∏ –∑–ª—ñ–≤–∞ */}
        <Box sx={{ display: 'flex', gap: 1 }}>
          <Button variant="outlined" startIcon={<Edit />} onClick={onEdit} size="small">
            –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
          </Button>
          <Button
            variant="outlined"
            startIcon={<SwapHoriz />}
            onClick={onChangeClient}
            size="small"
          >
            –ó–º—ñ–Ω–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
          </Button>
        </Box>

        {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å–ø—Ä–∞–≤–∞ */}
        <Button
          variant="contained"
          size="large"
          endIcon={<ArrowForward />}
          onClick={onProceed}
          sx={{ minWidth: 200 }}
        >
          –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –µ—Ç–∞–ø—É
        </Button>
      </Box>

      {/* –ü—ñ–¥–∫–∞–∑–∫–∞ */}
      <Box sx={{ mt: 3, p: 2, bgcolor: 'info.50', borderRadius: 1 }}>
        <Typography variant="caption" color="info.main">
          üí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è–º. –í–∏ –∑–º–æ–∂–µ—Ç–µ
          –∑–º—ñ–Ω–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞ –ø—ñ–∑–Ω—ñ—à–µ, –∞–ª–µ —Ü–µ –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ –¥–∞–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.
        </Typography>
      </Box>
    </Box>
  );
};
