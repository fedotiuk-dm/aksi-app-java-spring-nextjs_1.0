'use client';

import { Box, Typography, Button } from '@mui/material';
import React from 'react';

import { useItemWizard, useItemBasicInfo } from '@/domain/order';
import { useWizardDebug, useWizardOrderId } from '@/domain/wizard';
import { ItemBasicInfoForm, StepContainer, StepNavigation, OrderDebugInfo } from '@/shared/ui';

/**
 * –ü—ñ–¥–∫—Ä–æ–∫ 2.1: –û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç
 *
 * –ó–≥—ñ–¥–Ω–æ –∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—î—é Order Wizard:
 * - –ö–∞—Ç–µ–≥–æ—Ä—ñ—è –ø–æ—Å–ª—É–≥–∏ (–≤–∏–±—ñ—Ä –∑ —Ä–µ–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö API)
 * - –ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –≤–∏—Ä–æ–±—É (–¥–∏–Ω–∞–º—ñ—á–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ü—ñ–Ω –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∏–±—Ä–∞–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó)
 * - –û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É —ñ –∫—ñ–ª—å–∫—ñ—Å—Ç—å
 * - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ—ó —Ü—ñ–Ω–∏ –∑ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–∞
 */
export const ItemBasicInfoStep: React.FC = () => {
  // –û—Ç—Ä–∏–º—É—î–º–æ orderId –∑ wizard context
  const { orderId, hasOrderId } = useWizardOrderId();

  // –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å Item Wizard –∑ domain layer
  const { canProceed, wizard } = useItemWizard({ orderId });

  // –î–æ–¥–∞—î–º–æ –¥–µ–±–∞–≥—ñ–Ω–≥ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º
  useWizardDebug(true);

  // –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –æ—Å–Ω–æ–≤–Ω–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
  const { data, categories, itemNames, currentItem, isLoading, validation, handlers } =
    useItemBasicInfo();

  // Debug logging
  console.log('üîç ItemBasicInfoStep render:', {
    orderId,
    hasOrderId,
    canProceed,
    'data.category': data.category,
    'categories.length': categories.length,
  });

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—ñ–¥–∫—Ä–æ–∫—É
   */
  const handleNext = () => {
    if (canProceed) {
      const result = wizard.navigateForward();
      if (result.success) {
        console.log('–ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø—Ä–µ–¥–º–µ—Ç–∞');
      } else {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É:', result.errors);
      }
    }
  };

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É/–≤–∏—Ö–æ–¥—É –∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞
   */
  const handleBack = () => {
    // –î–ª—è –ø–µ—Ä—à–æ–≥–æ –∫—Ä–æ–∫—É Item Wizard –≤–∏—Ö–æ–¥–∏–º–æ –∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞
    const result = wizard.finishItemWizardFlow(false);
    if (result.success) {
      console.log('–í–∏—Ö—ñ–¥ –∑ Item Wizard –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è');
    } else {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏—Ö–æ–¥—É –∑ –ø—ñ–¥–≤—ñ–∑–∞—Ä–¥–∞:', result.error);
    }
  };

  // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫—â–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–µ
  if (!hasOrderId) {
    return (
      <StepContainer
        title="–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç"
        subtitle="–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞"
      >
        <Box sx={{ textAlign: 'center', py: 4 }}>
          <Typography variant="h6" color="warning.main" gutterBottom>
            –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–µ
          </Typography>
          <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
            –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É —Ç–∞ —Å—Ç–≤–æ—Ä—ñ—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
          </Typography>
          <Button variant="outlined" onClick={handleBack}>
            –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
          </Button>
        </Box>
      </StepContainer>
    );
  }

  return (
    <StepContainer
      title="–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –ø—Ä–µ–¥–º–µ—Ç"
      subtitle="–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø–æ—Å–ª—É–≥–∏ —Ç–∞ –≤–∫–∞–∂—ñ—Ç—å –±–∞–∑–æ–≤—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞"
    >
      {/* –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (—Ç—ñ–ª—å–∫–∏ –≤ dev —Ä–µ–∂–∏–º—ñ) */}
      <OrderDebugInfo title="–°—Ç–∞–Ω –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - Item Basic Info" />

      <Box sx={{ minHeight: '400px' }}>
        <ItemBasicInfoForm
          data={data}
          categories={categories}
          itemNames={itemNames}
          currentItem={currentItem}
          validation={validation}
          isLoadingItems={isLoading}
          onCategoryChange={handlers.onCategoryChange}
          onItemNameChange={handlers.onItemNameChange}
          onQuantityChange={handlers.onQuantityChange}
          onPriceChange={handlers.onPriceChange}
          onPriceTypeChange={handlers.onPriceTypeChange}
          onDescriptionChange={handlers.onDescriptionChange}
        />
      </Box>

      <StepNavigation
        onNext={canProceed ? handleNext : undefined}
        onBack={handleBack}
        nextLabel="–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –¥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫"
        backLabel="–ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
        isNextDisabled={!canProceed}
      />
    </StepContainer>
  );
};

export default ItemBasicInfoStep;
