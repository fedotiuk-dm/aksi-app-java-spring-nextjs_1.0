'use client';

import { Box, Paper } from '@mui/material';
import { SelectChangeEvent } from '@mui/material/Select';
import React, { useCallback } from 'react';

import { useItemWizard, useItemProperties, MaterialType } from '@/domain/order';
import { useWizardOrderId } from '@/domain/wizard';
import {
  MaterialSelector,
  ColorSelector,
  FillerSelector,
  WearLevelSelector,
  ItemPropertiesSummary,
  StatusMessage,
  StepContainer,
  StepNavigation,
  OrderDebugInfo,
} from '@/shared/ui';

/**
 * –ü—ñ–¥–∫—Ä–æ–∫ 2.2: –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
 *
 * FSD –ø—Ä–∏–Ω—Ü–∏–ø–∏:
 * - "–¢–æ–Ω–∫–∏–π" UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –±–µ–∑ –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∏
 * - –û—Ç—Ä–∏–º—É—î –≤—Å—é —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –∑ domain layer
 * - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î shared UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
 */
export const ItemPropertiesStep: React.FC = () => {
  // –û—Ç—Ä–∏–º—É—î–º–æ orderId –∑ wizard context
  const { orderId } = useWizardOrderId();

  // === DOMAIN HOOKS ===
  const { itemData, validation, canProceed, updateProperties, wizard } = useItemWizard({ orderId });
  const {
    baseColors,
    fillerOptions,
    wearLevelOptions,
    getMaterialOptions,
    needsFiller,
    getMaterialLabel,
    getFillerLabel,
  } = useItemProperties();

  // === COMPUTED VALUES ===
  const availableMaterials = getMaterialOptions(itemData.category);
  const showFiller = needsFiller(itemData.category);
  const selectedMaterialLabel = itemData.material ? getMaterialLabel(itemData.material) : '';
  const selectedFillerLabel = itemData.fillerType ? getFillerLabel(itemData.fillerType) : '';

  // Debug –ª–æ–≥—É–≤–∞–Ω–Ω—è
  console.log('üîç ItemPropertiesStep render:', {
    orderId,
    hasOrderId: !!orderId,
    canProceed,
    itemData,
    'validation.properties': validation.properties,
    'availableMaterials.length': availableMaterials.length,
    availableMaterials,
    showMaterialSelector: availableMaterials.length > 0,
  });

  // === EVENT HANDLERS ===

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
   */
  const handleMaterialChange = useCallback(
    (event: SelectChangeEvent<string>) => {
      updateProperties({ material: event.target.value as MaterialType });
    },
    [updateProperties]
  );

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –∫–æ–ª—å–æ—Ä—É —á–µ—Ä–µ–∑ –∞–≤—Ç–æ–∫–æ–º–ø–ª—ñ—Ç
   */
  const handleColorChange = useCallback(
    (event: React.SyntheticEvent, value: string | null) => {
      updateProperties({ color: value || '' });
    },
    [updateProperties]
  );

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ –∫–æ–ª—å–æ—Ä—É —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–ª–µ
   */
  const handleColorTextChange = useCallback(
    (event: React.ChangeEvent<HTMLInputElement>) => {
      updateProperties({ color: event.target.value });
    },
    [updateProperties]
  );

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Ç–∏–ø—É –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á–∞
   */
  const handleFillerTypeChange = useCallback(
    (event: SelectChangeEvent<string>) => {
      updateProperties({ fillerType: event.target.value });
    },
    [updateProperties]
  );

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É –Ω–∞–ø–æ–≤–Ω—é–≤–∞—á–∞
   */
  const handleFillerCompressedChange = useCallback(
    (event: React.ChangeEvent<HTMLInputElement>) => {
      updateProperties({ fillerCompressed: event.target.checked });
    },
    [updateProperties]
  );

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Å—Ç—É–ø–µ–Ω—è –∑–Ω–æ—Å—É
   */
  const handleWearDegreeChange = useCallback(
    (event: SelectChangeEvent<string>) => {
      updateProperties({ wearDegree: event.target.value });
    },
    [updateProperties]
  );

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –ø—ñ–¥–∫—Ä–æ–∫—É
   */
  const handleNext = useCallback(() => {
    if (canProceed) {
      const result = wizard.navigateForward();
      if (result.success) {
        console.log('–ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤ —Ç–∞ –ø–ª—è–º');
      } else {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É:', result.errors);
      }
    }
  }, [canProceed, wizard]);

  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø—ñ–¥–∫—Ä–æ–∫—É
   */
  const handleBack = useCallback(() => {
    const result = wizard.navigateBack();
    if (result.success) {
      console.log('–ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –æ—Å–Ω–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó');
    } else {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è:', result.errors);
    }
  }, [wizard]);

  return (
    <StepContainer
      title="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞"
      subtitle="–í–∫–∞–∂—ñ—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª, –∫–æ–ª—ñ—Ä —Ç–∞ —ñ–Ω—à—ñ –≤–∞–∂–ª–∏–≤—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞"
    >
      {/* –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (—Ç—ñ–ª—å–∫–∏ –≤ dev —Ä–µ–∂–∏–º—ñ) */}
      <OrderDebugInfo title="–°—Ç–∞–Ω –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - Item Properties" />

      <Box sx={{ minHeight: '400px' }}>
        {/* –ú–∞—Ç–µ—Ä—ñ–∞–ª */}
        {availableMaterials.length > 0 && (
          <Paper sx={{ p: 3, mb: 3 }}>
            <MaterialSelector
              materials={availableMaterials.map((m) => ({
                value: m.value.toString(),
                label: m.label,
              }))}
              selectedMaterial={itemData.material?.toString() || ''}
              onMaterialChange={handleMaterialChange}
              error={validation.properties.errors.material}
            />
          </Paper>
        )}

        {/* –ö–æ–ª—ñ—Ä */}
        <Paper sx={{ p: 3, mb: 3 }}>
          <ColorSelector
            color={itemData.color || ''}
            baseColors={baseColors}
            onColorChange={handleColorChange}
            onColorTextChange={handleColorTextChange}
            error={validation.properties.errors.color}
          />
        </Paper>

        {/* –ù–∞–ø–æ–≤–Ω—é–≤–∞—á (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω) */}
        {showFiller && (
          <Paper sx={{ p: 3, mb: 3 }}>
            <FillerSelector
              fillerTypes={fillerOptions}
              selectedFillerType={itemData.fillerType || ''}
              fillerCompressed={itemData.fillerCompressed || false}
              onFillerTypeChange={handleFillerTypeChange}
              onFillerCompressedChange={handleFillerCompressedChange}
            />
          </Paper>
        )}

        {/* –°—Ç—É–ø—ñ–Ω—å –∑–Ω–æ—Å—É */}
        <Paper sx={{ p: 3, mb: 3 }}>
          <WearLevelSelector
            wearLevels={wearLevelOptions}
            selectedWearLevel={itemData.wearDegree || ''}
            onWearLevelChange={handleWearDegreeChange}
          />
        </Paper>

        {/* –ü—ñ–¥—Å—É–º–æ–∫ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ */}
        <Box sx={{ mb: 3 }}>
          <ItemPropertiesSummary
            material={selectedMaterialLabel}
            color={itemData.color}
            fillerType={selectedFillerLabel}
            fillerCompressed={itemData.fillerCompressed}
            wearLevel={itemData.wearDegree ? `${itemData.wearDegree}%` : undefined}
          />
        </Box>

        {/* –°—Ç–∞—Ç—É—Å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è */}
        <StatusMessage
          message="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ. –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–∏ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É."
          severity="success"
          show={canProceed}
        />
      </Box>

      <StepNavigation
        onNext={canProceed ? handleNext : undefined}
        onBack={handleBack}
        nextLabel="–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤"
        backLabel="–ù–∞–∑–∞–¥ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó"
        isNextDisabled={!canProceed}
      />
    </StepContainer>
  );
};

export default ItemPropertiesStep;
