'use client';

import { useState, useRef } from 'react';
import {
  Stack,
  Button,
  Typography,
  Alert,
  Box,
  Paper,
  Grid,
  IconButton,
  ImageList,
  ImageListItem,
  ImageListItemBar,
} from '@mui/material';
import Image from 'next/image';
import { ArrowBack, PhotoCamera, Upload, Delete, CheckCircle } from '@mui/icons-material';
import { useOrderOnepageStore } from '../../store/order-onepage.store';
import {
  useSubstep5AddPhoto,
  useSubstep5RemovePhoto,
  useSubstep5CompletePhotoDocumentation,
} from '@/shared/api/generated/substep5';
import { useStage2AddItemToOrder } from '@/shared/api/generated/stage2';

interface ItemPhotoStepProps {
  data: any;
  onDataChange: (data: any) => void;
  onBack: () => void;
  onComplete: () => void;
  isEditing: boolean;
}

export const ItemPhotoStep = ({
  data,
  onDataChange,
  onBack,
  onComplete,
  isEditing,
}: ItemPhotoStepProps) => {
  const { sessionId, setStage2Ready } = useOrderOnepageStore();
  const [photos, setPhotos] = useState<File[]>(data.photos || []);
  const [photoUrls, setPhotoUrls] = useState<string[]>(data.photoUrls || []);
  const fileInputRef = useRef<HTMLInputElement>(null);
  const cameraInputRef = useRef<HTMLInputElement>(null);

  const addPhoto = useSubstep5AddPhoto();
  const removePhoto = useSubstep5RemovePhoto();
  const completeDocumentation = useSubstep5CompletePhotoDocumentation();
  const addItemToOrder = useStage2AddItemToOrder();

  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = Array.from(event.target.files || []);
    handleAddPhotos(files);
  };

  const handleAddPhotos = async (files: File[]) => {
    if (!sessionId) return;

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª—ñ–º—ñ—Ç—É (–º–∞–∫—Å–∏–º—É–º 5 —Ñ–æ—Ç–æ)
    if (photos.length + files.length > 5) {
      alert('–ú–∞–∫—Å–∏–º—É–º 5 —Ñ–æ—Ç–æ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç');
      return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—ñ–≤ (–º–∞–∫—Å–∏–º—É–º 5MB –∫–æ–∂–µ–Ω)
    const oversizedFiles = files.filter((file) => file.size > 5 * 1024 * 1024);
    if (oversizedFiles.length > 0) {
      alert('–†–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 5MB');
      return;
    }

    try {
      const newPhotos = [...photos];
      const newPhotoUrls = [...photoUrls];

      for (const file of files) {
        // –°—Ç–≤–æ—Ä—é—î–º–æ URL –¥–ª—è –ø—Ä–µ–≤—å—é
        const url = URL.createObjectURL(file);
        newPhotoUrls.push(url);
        newPhotos.push(file);

        // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        await addPhoto.mutateAsync({
          sessionId,
          data: { file },
        });
      }

      setPhotos(newPhotos);
      setPhotoUrls(newPhotoUrls);
      onDataChange({ photos: newPhotos, photoUrls: newPhotoUrls });
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ:', error);
    }
  };

  const handleRemovePhoto = async (index: number) => {
    if (!sessionId) return;

    try {
      await removePhoto.mutateAsync({
        sessionId,
        photoId: String(index),
      });

      // –í–∏–¥–∞–ª—è—î–º–æ URL –∑ –ø–∞–º'—è—Ç—ñ
      URL.revokeObjectURL(photoUrls[index]);

      const newPhotos = photos.filter((_, i) => i !== index);
      const newPhotoUrls = photoUrls.filter((_, i) => i !== index);

      setPhotos(newPhotos);
      setPhotoUrls(newPhotoUrls);
      onDataChange({ photos: newPhotos, photoUrls: newPhotoUrls });
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ:', error);
    }
  };

  const handleComplete = async () => {
    if (!sessionId) return;

    console.log('üéØ ItemPhotoStep: handleComplete –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑ sessionId:', sessionId);

    try {
      // –ó–∞–≤–µ—Ä—à—É—î–º–æ —Ñ–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é
      await completeDocumentation.mutateAsync({
        sessionId,
      });

      // –î–æ–¥–∞—î–º–æ –ø—Ä–µ–¥–º–µ—Ç –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      const itemData = {
        ...data,
        photos: photos.length,
        photoUrls: photoUrls.length,
      };

      if (isEditing) {
        // –õ–æ–≥—ñ–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
        // await updateItemInOrder.mutateAsync({ sessionId, itemId: data.itemId, data: itemData });
      } else {
        // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –ø—Ä–µ–¥–º–µ—Ç
        await addItemToOrder.mutateAsync({
          sessionId,
          data: itemData,
        });

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å Stage2 –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞
        console.log('üéØ –ü—Ä–µ–¥–º–µ—Ç –¥–æ–¥–∞–Ω–æ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ Stage2Ready');
        setStage2Ready(true);
        console.log('‚úÖ Stage2Ready –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ true');
      }

      onComplete();
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞:', error);
    }
  };

  const isLoading =
    addPhoto.isPending ||
    removePhoto.isPending ||
    completeDocumentation.isPending ||
    addItemToOrder.isPending;

  return (
    <Box>
      <Typography variant="h6" gutterBottom>
        –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
      </Typography>

      <Stack spacing={3}>
        {/* –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó */}
        <Alert severity="info">
          –î–æ–¥–∞–π—Ç–µ –¥–æ 5 —Ñ–æ—Ç–æ –ø—Ä–µ–¥–º–µ—Ç–∞. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä —Ñ–∞–π–ª—É: 5MB. –§–æ—Ç–æ –¥–æ–ø–æ–º–æ–∂—É—Ç—å –∫—Ä–∞—â–µ –æ—Ü—ñ–Ω–∏—Ç–∏
          —Å—Ç–∞–Ω –ø—Ä–µ–¥–º–µ—Ç–∞ —Ç–∞ —É–Ω–∏–∫–Ω—É—Ç–∏ –Ω–µ–ø–æ—Ä–æ–∑—É–º—ñ–Ω—å.
        </Alert>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ñ–æ—Ç–æ */}
        <Paper sx={{ p: 2 }}>
          <Typography variant="subtitle2" gutterBottom>
            –î–æ–¥–∞—Ç–∏ —Ñ–æ—Ç–æ ({photos.length}/5)
          </Typography>
          <Stack direction="row" spacing={2}>
            <Button
              variant="outlined"
              startIcon={<PhotoCamera />}
              onClick={() => cameraInputRef.current?.click()}
              disabled={photos.length >= 5 || isLoading}
            >
              –ó–Ω—è—Ç–∏ —Ñ–æ—Ç–æ
            </Button>
            <Button
              variant="outlined"
              startIcon={<Upload />}
              onClick={() => fileInputRef.current?.click()}
              disabled={photos.length >= 5 || isLoading}
            >
              –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª
            </Button>
          </Stack>

          {/* –ü—Ä–∏—Ö–æ–≤–∞–Ω—ñ input –µ–ª–µ–º–µ–Ω—Ç–∏ */}
          <input
            ref={fileInputRef}
            type="file"
            accept="image/*"
            multiple
            style={{ display: 'none' }}
            onChange={handleFileUpload}
          />
          <input
            ref={cameraInputRef}
            type="file"
            accept="image/*"
            capture="environment"
            style={{ display: 'none' }}
            onChange={handleFileUpload}
          />
        </Paper>

        {/* –ì–∞–ª–µ—Ä–µ—è —Ñ–æ—Ç–æ */}
        {photoUrls.length > 0 && (
          <Paper sx={{ p: 2 }}>
            <Typography variant="subtitle2" gutterBottom>
              –î–æ–¥–∞–Ω—ñ —Ñ–æ—Ç–æ
            </Typography>
            <ImageList cols={3} gap={8}>
              {photoUrls.map((url, index) => (
                <ImageListItem key={index}>
                  <Image
                    src={url}
                    alt={`–§–æ—Ç–æ ${index + 1}`}
                    width={120}
                    height={120}
                    style={{
                      width: '100%',
                      height: 120,
                      objectFit: 'cover',
                      borderRadius: 4,
                    }}
                  />
                  <ImageListItemBar
                    position="top"
                    actionIcon={
                      <IconButton
                        size="small"
                        onClick={() => handleRemovePhoto(index)}
                        disabled={isLoading}
                        sx={{ color: 'white', backgroundColor: 'rgba(0,0,0,0.5)' }}
                      >
                        <Delete fontSize="small" />
                      </IconButton>
                    }
                    actionPosition="right"
                  />
                </ImageListItem>
              ))}
            </ImageList>
          </Paper>
        )}

        {/* –ü—ñ–¥—Å—É–º–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–∞ */}
        <Paper sx={{ p: 2, backgroundColor: 'action.hover' }}>
          <Typography variant="subtitle2" gutterBottom>
            –ü—ñ–¥—Å—É–º–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–∞
          </Typography>
          <Grid container spacing={2}>
            <Grid size={{ xs: 6 }}>
              <Typography variant="body2">
                <strong>–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è:</strong> {data.itemName || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
              </Typography>
            </Grid>
            <Grid size={{ xs: 6 }}>
              <Typography variant="body2">
                <strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å:</strong> {data.quantity || 1} {data.unit || '—à—Ç'}
              </Typography>
            </Grid>
            <Grid size={{ xs: 6 }}>
              <Typography variant="body2">
                <strong>–ú–∞—Ç–µ—Ä—ñ–∞–ª:</strong> {data.material || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
              </Typography>
            </Grid>
            <Grid size={{ xs: 6 }}>
              <Typography variant="body2">
                <strong>–ö–æ–ª—ñ—Ä:</strong> {data.color || data.customColor || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}
              </Typography>
            </Grid>
            <Grid size={{ xs: 12 }}>
              <Typography variant="body2">
                <strong>–§—ñ–Ω–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</strong> {data.finalPrice?.toFixed(2) || '0.00'} ‚Ç¥
              </Typography>
            </Grid>
            {data.modifiers && data.modifiers.length > 0 && (
              <Grid size={{ xs: 12 }}>
                <Typography variant="body2">
                  <strong>–ú–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏:</strong> {data.modifiers.length} –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ
                </Typography>
              </Grid>
            )}
          </Grid>
        </Paper>

        {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó */}
        <Stack direction="row" spacing={2} sx={{ mt: 3 }}>
          <Button onClick={onBack} startIcon={<ArrowBack />} variant="outlined" sx={{ flex: 1 }}>
            –ù–∞–∑–∞–¥
          </Button>
          <Button
            onClick={() => {
              console.log('üîò –ö–Ω–æ–ø–∫–∞ "–î–æ–¥–∞—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç" –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞, sessionId:', sessionId);
              handleComplete();
            }}
            variant="contained"
            startIcon={<CheckCircle />}
            disabled={isLoading || !sessionId}
            sx={{ flex: 1 }}
          >
            {isLoading ? '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : isEditing ? '–û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç' : '–î–æ–¥–∞—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç'}
          </Button>
        </Stack>

        {/* –ü–æ–º–∏–ª–∫–∏ */}
        {(addPhoto.error ||
          removePhoto.error ||
          completeDocumentation.error ||
          addItemToOrder.error) && (
          <Alert severity="error">–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ñ–æ—Ç–æ –∞–±–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞</Alert>
        )}
      </Stack>
    </Box>
  );
};
