/**
 * @fileoverview Wizard Services - –ë—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∞ –¥–ª—è Order Wizard –¥–æ–º–µ–Ω—É
 * @module domain/wizard/services
 * @author AKSI Team
 * @since 1.0.0
 *
 * ================================================================================
 * üîß WIZARD SERVICES - –ë–Ü–ó–ù–ï–°-–õ–û–ì–Ü–ö–ê –¢–ê –í–ê–õ–Ü–î–ê–¶–Ü–Ø
 * ================================================================================
 *
 * ## üéØ –†–û–õ–¨ –°–ï–†–í–Ü–°–Ü–í –í –ê–†–•–Ü–¢–ï–ö–¢–£–†–Ü
 *
 * –°–µ—Ä–≤—ñ—Å–∏ –º—ñ—Å—Ç—è—Ç—å **–ß–ò–°–¢–£ –ë–Ü–ó–ù–ï–°-–õ–û–ì–Ü–ö–£** wizard –¥–æ–º–µ–Ω—É:
 * - –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö —á–µ—Ä–µ–∑ orval + Zod —Å—Ö–µ–º–∏
 * - –ë—ñ–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞ —Ç–∞ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
 * - –ê–¥–∞–ø—Ç–∞—Ü—ñ—è API –¥–∞–Ω–∏—Ö –¥–ª—è UI
 * - –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è —Ç–∞ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—è –¥–∞–Ω–∏—Ö
 *
 * ### –°–µ—Ä–≤—ñ—Å–∏ –ù–ï –º—ñ—Å—Ç—è—Ç—å:
 * - API –≤–∏–∫–ª–∏–∫–∏ (—Ä–æ–ª—å TanStack Query + orval)
 * - UI –ª–æ–≥—ñ–∫—É (—Ä–æ–ª—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤)
 * - –°—Ç–∞–Ω –¥–æ–¥–∞—Ç–∫–∞ (—Ä–æ–ª—å Zustand)
 * - –ù–∞–≤—ñ–≥–∞—Ü—ñ–π–Ω—É –ª–æ–≥—ñ–∫—É (—Ä–æ–ª—å XState)
 *
 * ### –°–µ—Ä–≤—ñ—Å–∏ –ú–Ü–°–¢–Ø–¢–¨:
 * - –í–∞–ª—ñ–¥–∞—Ü—ñ—é —á–µ—Ä–µ–∑ orval —Å—Ö–µ–º–∏
 * - –ë—ñ–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞ —Ç–∞ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
 * - –ê–¥–∞–ø—Ç–∞—Ü—ñ—é API –¥–∞–Ω–∏—Ö
 * - –û—á–∏—â–µ–Ω–Ω—è —Ç–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–∞–Ω–∏—Ö
 *
 * ## üèóÔ∏è –ê–†–•–Ü–¢–ï–ö–¢–£–†–ù–Ü –ü–†–ò–ù–¶–ò–ü–ò
 *
 * ### –ü—Ä–∏–Ω—Ü–∏–ø –º—ñ–Ω—ñ–º–∞–ª—ñ–∑–º—É:
 * - –†–æ–∑–º—ñ—Ä —Å–µ—Ä–≤—ñ—Å—É < 300 —Ä—è–¥–∫—ñ–≤
 * - –û–¥–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤—ñ—Å (SRP)
 * - –¢—ñ–ª—å–∫–∏ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—è —Ç–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è
 * - –ë–ï–ó –¥—É–±–ª—é–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ
 *
 * ### –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ orval:
 * ```typescript
 * import { safeValidate, validateOrThrow } from '@/shared/api/generated/zod';
 * import { clientDataSchema } from '@/shared/api/generated/client/zod';
 *
 * export class ClientValidationService extends BaseWizardService {
 *   validateClient(data: unknown) {
 *     return safeValidate(clientDataSchema, data);
 *   }
 * }
 * ```
 *
 * ### –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤:
 * ```typescript
 * import { BaseWizardService } from './base.service';
 *
 * export class MyService extends BaseWizardService {
 *   protected readonly serviceName = 'MyService';
 *
 *   // –º–µ—Ç–æ–¥–∏ —Å–µ—Ä–≤—ñ—Å—É
 * }
 * ```
 *
 * ## üìÅ –°–¢–†–£–ö–¢–£–†–ê –°–ï–†–í–Ü–°–Ü–í –ó–ê –ï–¢–ê–ü–ê–ú–ò
 *
 * ```
 * services/
 * ‚îú‚îÄ‚îÄ base.service.ts              # üèóÔ∏è –ë–∞–∑–æ–≤–∏–π —Å–µ—Ä–≤—ñ—Å
 * ‚îÇ
 * ‚îú‚îÄ‚îÄ stage-1-client-and-order/    # üßë –ï—Ç–∞–ø 1: –ö–ª—ñ—î–Ω—Ç —Ç–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * ‚îÇ   ‚îú‚îÄ‚îÄ client-search/           # –ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤
 * ‚îÇ   ‚îú‚îÄ‚îÄ client-selection/        # –í–∏–±—ñ—Ä –∫–ª—ñ—î–Ω—Ç–∞
 * ‚îÇ   ‚îî‚îÄ‚îÄ order-basic-info/        # –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
 * ‚îÇ
 * ‚îú‚îÄ‚îÄ stage-2-item-management/     # üì¶ –ï—Ç–∞–ø 2: –ü—Ä–µ–¥–º–µ—Ç–∏
 * ‚îÇ   ‚îú‚îÄ‚îÄ items-manager/           # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 * ‚îÇ   ‚îú‚îÄ‚îÄ item-characteristics/    # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
 * ‚îÇ   ‚îú‚îÄ‚îÄ item-defects/           # –î–µ—Ñ–µ–∫—Ç–∏ —Ç–∞ —Ä–∏–∑–∏–∫–∏
 * ‚îÇ   ‚îú‚îÄ‚îÄ price-calculator/       # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏
 * ‚îÇ   ‚îî‚îÄ‚îÄ photo-documentation/    # –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
 * ‚îÇ
 * ‚îú‚îÄ‚îÄ stage-3-order-params/        # ‚öôÔ∏è –ï—Ç–∞–ø 3: –ü–∞—Ä–∞–º–µ—Ç—Ä–∏
 * ‚îÇ   ‚îú‚îÄ‚îÄ execution-parameters/    # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
 * ‚îÇ   ‚îú‚îÄ‚îÄ global-discounts/       # –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–Ω–∏–∂–∫–∏
 * ‚îÇ   ‚îú‚îÄ‚îÄ payment/                # –û–ø–ª–∞—Ç–∞
 * ‚îÇ   ‚îî‚îÄ‚îÄ additional-info/        # –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
 * ‚îÇ
 * ‚îî‚îÄ‚îÄ stage-4-confirmation/        # ‚úÖ –ï—Ç–∞–ø 4: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
 *     ‚îú‚îÄ‚îÄ order-review/           # –ü–µ—Ä–µ–≥–ª—è–¥ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 *     ‚îú‚îÄ‚îÄ legal-aspects/          # –Æ—Ä–∏–¥–∏—á–Ω—ñ –∞—Å–ø–µ–∫—Ç–∏
 *     ‚îú‚îÄ‚îÄ receipt-generation/     # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 *     ‚îî‚îÄ‚îÄ process-completion/     # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—É
 * ```
 *
 * ## üîó –Ü–ù–¢–ï–ì–†–ê–¶–Ü–Ø –ó –Ü–ù–®–ò–ú–ò –®–ê–†–ê–ú–ò
 *
 * ### –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —Ö—É–∫–∞—Ö:
 * ```typescript
 * import { ClientSearchService } from '@/domain/wizard/services';
 *
 * export const useClientSearch = () => {
 *   const service = useMemo(() => new ClientSearchService(), []);
 *
 *   const validateSearchCriteria = useCallback((criteria: unknown) => {
 *     return service.validateSearchCriteria(criteria);
 *   }, [service]);
 *
 *   return { validateSearchCriteria };
 * };
 * ```
 *
 * ### –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∑ TanStack Query:
 * ```typescript
 * import { useMutation } from '@tanstack/react-query';
 * import { ClientValidationService } from '@/domain/wizard/services';
 *
 * export const useCreateClient = () => {
 *   const service = new ClientValidationService();
 *
 *   return useMutation({
 *     mutationFn: async (clientData: unknown) => {
 *       // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —á–µ—Ä–µ–∑ —Å–µ—Ä–≤—ñ—Å
 *       const validation = service.validateClient(clientData);
 *       if (!validation.success) {
 *         throw new Error(validation.errors.join(', '));
 *       }
 *
 *       // API –≤–∏–∫–ª–∏–∫ —á–µ—Ä–µ–∑ orval
 *       return await createClientApi(validation.data);
 *     },
 *   });
 * };
 * ```
 *
 * ## üìã –ü–†–ò–ö–õ–ê–î–ò –¢–ò–ü–û–í–ò–• –°–ï–†–í–Ü–°–Ü–í
 *
 * ### –°–µ—Ä–≤—ñ—Å –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó:
 * ```typescript
 * import { safeValidate } from '@/shared/api/generated/zod';
 * import { clientDataSchema } from '@/shared/api/generated/client/zod';
 * import { BaseWizardService } from '../base.service';
 *
 * export class ClientValidationService extends BaseWizardService {
 *   protected readonly serviceName = 'ClientValidationService';
 *
 *   validateClientData(data: unknown) {
 *     return safeValidate(clientDataSchema, data);
 *   }
 *
 *   validatePhoneNumber(phone: string): boolean {
 *     return /^[\d\s\+\-\(\)]+$/.test(phone) && phone.length >= 10;
 *   }
 * }
 * ```
 *
 * ### –°–µ—Ä–≤—ñ—Å –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∏:
 * ```typescript
 * export class PriceCalculatorService extends BaseWizardService {
 *   protected readonly serviceName = 'PriceCalculatorService';
 *
 *   calculateItemPrice(item: OrderItemData, modifiers: PriceModifier[]): PriceCalculation {
 *     let basePrice = item.basePrice;
 *     let totalModifications = 0;
 *
 *     for (const modifier of modifiers) {
 *       const modification = this.applyModifier(basePrice, modifier);
 *       totalModifications += modification;
 *     }
 *
 *     return {
 *       basePrice,
 *       modifications: totalModifications,
 *       finalPrice: basePrice + totalModifications,
 *       breakdown: this.generateBreakdown(basePrice, modifiers),
 *     };
 *   }
 * }
 * ```
 *
 * ### –°–µ—Ä–≤—ñ—Å –∞–¥–∞–ø—Ç–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö:
 * ```typescript
 * export class OrderSummaryService extends BaseWizardService {
 *   protected readonly serviceName = 'OrderSummaryService';
 *
 *   adaptOrderForReceipt(order: OrderData): ReceiptData {
 *     return {
 *       orderNumber: order.id,
 *       customerInfo: this.formatCustomerInfo(order.client),
 *       items: order.items.map(item => this.formatReceiptItem(item)),
 *       totals: this.calculateTotals(order),
 *       legalInfo: this.generateLegalInfo(),
 *     };
 *   }
 * }
 * ```
 *
 * ## ‚ö° –ü–ê–¢–¢–ï–†–ù–ò –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–á
 *
 * ### Lazy —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è:
 * ```typescript
 * export const useValidationServices = () => {
 *   const clientService = useMemo(() => new ClientValidationService(), []);
 *   const orderService = useMemo(() => new OrderValidationService(), []);
 *
 *   return { clientService, orderService };
 * };
 * ```
 *
 * ### –ö–µ—à—É–≤–∞–Ω–Ω—è –æ–±—á–∏—Å–ª–µ–Ω—å:
 * ```typescript
 * export class PriceCalculatorService extends BaseWizardService {
 *   private calculationCache = new Map<string, PriceCalculation>();
 *
 *   calculatePrice(item: OrderItemData): PriceCalculation {
 *     const cacheKey = this.generateCacheKey(item);
 *
 *     if (this.calculationCache.has(cacheKey)) {
 *       return this.calculationCache.get(cacheKey)!;
 *     }
 *
 *     const calculation = this.performCalculation(item);
 *     this.calculationCache.set(cacheKey, calculation);
 *
 *     return calculation;
 *   }
 * }
 * ```
 *
 * ## üß™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –°–ï–†–í–Ü–°–Ü–í
 *
 * ### –û–¥–∏–Ω–∏—á–Ω—ñ —Ç–µ—Å—Ç–∏:
 * ```typescript
 * describe('ClientValidationService', () => {
 *   let service: ClientValidationService;
 *
 *   beforeEach(() => {
 *     service = new ClientValidationService();
 *   });
 *
 *   it('should validate valid client data', () => {
 *     const validClient = {
 *       firstName: '–Ü–≤–∞–Ω',
 *       lastName: '–ü–µ—Ç—Ä–µ–Ω–∫–æ',
 *       phone: '+380123456789',
 *     };
 *
 *     const result = service.validateClientData(validClient);
 *     expect(result.success).toBe(true);
 *   });
 * });
 * ```
 *
 * ## ‚ö†Ô∏è –í–ê–ñ–õ–ò–í–Ü –ü–†–ò–ú–Ü–¢–ö–ò
 *
 * - **–ë–µ–∑ side effects**: —Å–µ—Ä–≤—ñ—Å–∏ –Ω–µ –º–∞—é—Ç—å –ø–æ–±—ñ—á–Ω–∏—Ö –µ—Ñ–µ–∫—Ç—ñ–≤
 * - **Immutable**: –Ω–µ –∑–º—ñ–Ω—é—é—Ç—å –≤—Ö—ñ–¥–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * - **Testable**: –ª–µ–≥–∫–æ —Ç–µ—Å—Ç—É—é—Ç—å—Å—è —á–µ—Ä–µ–∑ dependency injection
 * - **Orval first**: –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç orval —Å—Ö–µ–º –Ω–∞–¥ –≤–ª–∞—Å–Ω–∏–º–∏
 * - **Performance**: –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è expensive –æ–ø–µ—Ä–∞—Ü—ñ–π
 * - **Error handling**: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–æ–≤–∞–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ —á–µ—Ä–µ–∑ BaseService
 *
 * ================================================================================
 */

// ===== STAGE 1: CLIENT AND ORDER =====
// –°–µ—Ä–≤—ñ—Å–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏ —Ç–∞ –±–∞–∑–æ–≤–æ—é —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
export * from './stage-1-client-and-order/index';

// ===== STAGE 2: ITEM MANAGEMENT (–≤—Å—ñ –º—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç—Å—å–∫—ñ) =====
// –°–µ—Ä–≤—ñ—Å–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
export * from './stage-2-item-management/index';

// ===== STAGE 3: ORDER PARAMS (–≤—Å—ñ –∑ –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤) =====
// –°–µ—Ä–≤—ñ—Å–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, –∑–Ω–∏–∂–æ–∫ —Ç–∞ –æ–ø–ª–∞—Ç–∏
export * from './stage-3-order-params/index';

// ===== STAGE 4: CONFIRMATION (–≤—Å—ñ –∑ –∞–¥–∞–ø—Ç–µ—Ä—ñ–≤) =====
// –°–µ—Ä–≤—ñ—Å–∏ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
export * from './stage-4-confirmation/index';
