/**
 * Wizard Steps Types
 * –¢–∏–ø–∏ –ø–æ–≤'—è–∑–∞–Ω—ñ –∑ –∫—Ä–æ–∫–∞–º–∏ —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—î—é wizard
 *
 * SOLID –ø—Ä–∏–Ω—Ü–∏–ø–∏:
 * - Single Responsibility: —Ç—ñ–ª—å–∫–∏ —Ç–∏–ø–∏ –∫—Ä–æ–∫—ñ–≤ —Ç–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
 * - Interface Segregation: –º–∞–ª—ñ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏
 */

/**
 * –û—Å–Ω–æ–≤–Ω—ñ –µ—Ç–∞–ø–∏ Order Wizard –¥–ª—è –ø–æ—Å–ª—É–≥–∏ —Ö—ñ–º—á–∏—Å—Ç–∫–∏
 *
 * –ë—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∞:
 * 1. –ö–ª—ñ—î–Ω—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –¥–æ —Ö—ñ–º—á–∏—Å—Ç–∫–∏
 * 2. –í–∏–±–∏—Ä–∞—î —Ñ—ñ–ª—ñ—é –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è
 * 3. –î–æ–¥–∞—î —Ä–µ—á—ñ —á–µ—Ä–µ–∑ Item Wizard (—Ç–∞–±–ª–∏—Ü—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤)
 * 4. –ù–∞–ª–∞—à—Ç–æ–≤—É—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 * 5. –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
 */
export enum WizardStep {
  // üéØ 5 –æ—Å–Ω–æ–≤–Ω–∏—Ö –µ—Ç–∞–ø—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ö—ñ–º—á–∏—Å—Ç–∫–∏
  CLIENT_SELECTION = 'client-selection', // 1. –í–∏–±—ñ—Ä –∫–ª—ñ—î–Ω—Ç–∞
  BRANCH_SELECTION = 'branch-selection', // 2. –í–∏–±—ñ—Ä —Ñ—ñ–ª—ñ—ó
  ITEM_MANAGER = 'item-manager', // 3. –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (—Ç–∞–±–ª–∏—Ü—è)
  ORDER_PARAMETERS = 'order-parameters', // 4. –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  ORDER_CONFIRMATION = 'order-confirmation', // 5. –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è

  // üëï 5 –ø—ñ–¥–µ—Ç–∞–ø—ñ–≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫–æ–∂–Ω–æ—ó —Ä–µ—á—ñ (Item Wizard)
  // –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç—É –æ–∫—Ä–µ–º–æ, –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ ITEM_MANAGER
  ITEM_BASIC_INFO = 'item-basic-info', // 1. –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ä—ñ—á
  ITEM_PROPERTIES = 'item-properties', // 2. –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ —Ä–µ—á—ñ (—Ç–∏–ø —Ç–∫–∞–Ω–∏–Ω–∏, –∫–æ–ª—ñ—Ä)
  DEFECTS_STAINS = 'defects-stains', // 3. –î–µ—Ñ–µ–∫—Ç–∏ —Ç–∞ –ø–ª—è–º–∏
  PRICE_CALCULATOR = 'price-calculator', // 4. –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∞—Ä—Ç–æ—Å—Ç—ñ
  PHOTO_DOCUMENTATION = 'photo-documentation', // 5. –§–æ—Ç–æ–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è
}

/**
 * –ù–∞–ø—Ä—è–º–∫–∏ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (Domain Value Objects)
 */
export enum NavigationDirection {
  FORWARD = 'forward', // –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É
  BACKWARD = 'backward', // –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∫—Ä–æ–∫—É
  JUMP = 'jump', // –ü—Ä—è–º–∏–π –ø–µ—Ä–µ—Ö—ñ–¥ –¥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫—Ä–æ–∫—É
}

/**
 * –ó–∞–ø–∏—Å –≤ —ñ—Å—Ç–æ—Ä—ñ—ó –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤ (Domain Value Object)
 */
export interface StepHistoryEntry {
  readonly step: WizardStep;
  readonly timestamp: number;
  readonly direction: NavigationDirection;
  readonly metadata?: Record<string, unknown>;
}

/**
 * –î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å –∫—Ä–æ–∫—ñ–≤ wizard (Domain Value Object)
 * Mutable –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –¥–æ–º–µ–Ω–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
 */
export type StepAvailability = {
  [key in WizardStep]: boolean;
};

/**
 * –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∫—Ä–æ–∫—É wizard (Domain Entity)
 */
export interface WizardStepConfig {
  readonly id: WizardStep;
  readonly title: string;
  readonly description?: string;
  readonly icon?: string;
  readonly order: number;
  readonly isSubstep?: boolean;
  readonly parentStep?: WizardStep;
  readonly isRequired: boolean;
  readonly validationRules?: string[];
}

/**
 * –ú–∞–ø–ø—ñ–Ω–≥ –∫—Ä–æ–∫—ñ–≤ –¥–æ —ó—Ö –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π
 */
export type WizardStepConfigMap = {
  readonly [key in WizardStep]: WizardStepConfig;
};

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó (Domain Value Object)
 */
export interface NavigationResult {
  readonly success: boolean;
  readonly fromStep: WizardStep;
  readonly toStep: WizardStep;
  readonly direction: NavigationDirection;
  readonly errors?: string[];
  readonly timestamp: number;
}
