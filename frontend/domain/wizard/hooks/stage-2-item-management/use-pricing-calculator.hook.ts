/**
 * @fileoverview –•—É–∫ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —Ü—ñ–Ω –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 * @module domain/wizard/hooks/stage-2
 */

import { useQuery, useMutation } from '@tanstack/react-query';
import { useCallback, useMemo } from 'react';

import { PricingCalculationService } from '../../services/stage-2-item-management';
import { useWizardStore } from '../../store';

import type { WizardOrderItem } from '../../adapters/order';
import type { WizardPriceCalculationResponse } from '../../adapters/shared';

/**
 * –î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏
 */
interface PriceCalculationDetails {
  basePrice: number;
  modifiers: Array<{
    name: string;
    type: 'percentage' | 'fixed';
    value: number;
    amount: number;
  }>;
  subtotal: number;
  discounts: Array<{
    name: string;
    type: 'percentage' | 'fixed';
    value: number;
    amount: number;
  }>;
  finalPrice: number;
}

/**
 * –•—É–∫ –¥–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
 * üßÆ –ö–æ–º–ø–æ–∑–∏—Ü—è: TanStack Query + Zustand + PricingCalculationService
 */
export const usePricingCalculator = () => {
  // üè™ Zustand - –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
  const { addError, addWarning } = useWizardStore();

  // ‚öôÔ∏è –°–µ—Ä–≤—ñ—Å
  const pricingService = useMemo(() => new PricingCalculationService(), []);

  // üßÆ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
  const calculatePriceMutation = useMutation({
    mutationFn: (itemData: Partial<WizardOrderItem>) => {
      // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ itemData —É request —Ñ–æ—Ä–º–∞—Ç
      const request = pricingService.createCalculationRequest(
        itemData.categoryName || '',
        itemData.itemName || '',
        itemData.quantity || 1
      );
      return pricingService.calculatePrice(request);
    },
    onError: (error) => {
      addError(`–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω–∏: ${error.message}`);
    },
  });

  // üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö —Ü—ñ–Ω –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
  const {
    data: basePrices = [],
    isLoading: isLoadingBasePrices,
    error: basePricesError,
  } = useQuery({
    queryKey: ['base-prices'],
    queryFn: async () => {
      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤ –¥–ª—è –ø–æ—á–∞—Ç–∫—É
      return [];
    },
    staleTime: 3600000, // 1 –≥–æ–¥–∏–Ω–∞ –∫–µ—à
    gcTime: 7200000, // 2 –≥–æ–¥–∏–Ω–∏ –≤ –∫–µ—à—ñ
  });

  // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–Ω
  useMemo(() => {
    if (basePricesError) {
      addError(`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–Ω: ${basePricesError.message}`);
    }
  }, [basePricesError, addError]);

  // üßÆ –ú–µ—Ç–æ–¥–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
  const calculatePrice = useCallback(
    async (itemData: Partial<WizardOrderItem>): Promise<PriceCalculationDetails | null> => {
      try {
        const result = await calculatePriceMutation.mutateAsync(itemData);

        if (!result) return null;

        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É PriceCalculationDetails –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ä–µ–∞–ª—å–Ω–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
        return {
          basePrice: result.baseUnitPrice || result.baseTotalPrice || 0,
          modifiers:
            result.calculation?.appliedModifiers?.map((mod) => ({
              name: mod.name || '',
              type: mod.type === 'PERCENTAGE' ? 'percentage' : 'fixed',
              value: mod.value || 0,
              amount: mod.appliedAmount || 0,
            })) || [],
          subtotal: result.calculation?.subtotal || result.baseTotalPrice || 0,
          discounts: [], // –†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –∑–Ω–∏–∂–æ–∫ –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –ø—ñ–∑–Ω—ñ—à–µ
          finalPrice: result.finalTotalPrice || result.finalUnitPrice || 0,
        };
      } catch (error) {
        addError(
          `–ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ü—ñ–Ω—É: ${error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'}`
        );
        return null;
      }
    },
    [calculatePriceMutation, addError]
  );

  const calculateQuickPrice = useCallback((itemData: Partial<WizardOrderItem>): number => {
    // –®–≤–∏–¥–∫–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É
    return itemData.basePrice || 0;
  }, []);

  const validatePricing = useCallback(
    (itemData: Partial<WizardOrderItem>) => {
      const request = pricingService.createCalculationRequest(
        itemData.categoryName || '',
        itemData.itemName || '',
        itemData.quantity || 1
      );
      return pricingService.validateCalculationRequest(request);
    },
    [pricingService]
  );

  // üîç –£—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
  const getAvailableModifiers = useCallback(
    (categoryId: string, itemData: Partial<WizardOrderItem>) => {
      // –ë–∞–∑–æ–≤–∏–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤ (–±—É–¥–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–æ)
      return [];
    },
    []
  );

  const getModifierImpact = useCallback(
    (modifierId: string, basePrice: number) => {
      return pricingService.calculatePercentage(basePrice, basePrice);
    },
    [pricingService]
  );

  // üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è
  const pricingInfo = useMemo(
    () => ({
      hasBasePrices: Array.isArray(basePrices) && basePrices.length > 0,
      isCalculating: calculatePriceMutation.isPending,
      hasCalculationError: !!calculatePriceMutation.error,
      canCalculate: Array.isArray(basePrices) && !isLoadingBasePrices,
    }),
    [
      basePrices,
      calculatePriceMutation.isPending,
      calculatePriceMutation.error,
      isLoadingBasePrices,
    ]
  );

  // üîß –î–æ–¥–∞—Ç–∫–æ–≤—ñ —É—Ç–∏–ª—ñ—Ç–∏
  const formatPrice = useCallback(
    (price: number): string => {
      return pricingService.formatPrice(price);
    },
    [pricingService]
  );

  const formatPriceModifier = useCallback(
    (modifier: { type: 'percentage' | 'fixed'; value: number }): string => {
      if (modifier.type === 'percentage') {
        return `${modifier.value > 0 ? '+' : ''}${modifier.value}%`;
      }
      return formatPrice(modifier.value);
    },
    [formatPrice]
  );

  return {
    // üìã –°—Ç–∞–Ω –¥–∞–Ω–∏—Ö
    basePrices,
    isLoadingBasePrices,
    basePricesError,

    // üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    pricingInfo,

    // üßÆ –ú–µ—Ç–æ–¥–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É
    calculatePrice,
    calculateQuickPrice,
    validatePricing,

    // üîç –£—Ç–∏–ª—ñ—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä—ñ–≤
    getAvailableModifiers,
    getModifierImpact,

    // üîß –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
    formatPrice,
    formatPriceModifier,
  };
};
