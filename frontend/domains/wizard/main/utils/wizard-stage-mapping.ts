// üéØ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —Ç–∞ –º–∞–ø–ø—ñ–Ω–≥ –¥–ª—è –µ—Ç–∞–ø—ñ–≤ Order Wizard
// –í–∏–Ω–µ—Å–µ–Ω–æ –∑ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è

import { OrderWizardResponseDTOCurrentState } from '@/shared/api/generated/main';

// üìã –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –µ—Ç–∞–ø—ñ–≤ UI
export const WIZARD_STAGES = {
  CLIENT_SELECTION: 1,
  ITEMS_MANAGEMENT: 2,
  ORDER_PARAMETERS: 3,
  FINALIZATION: 4,
} as const;

export const WIZARD_STAGE_NAMES = {
  1: '–ö–ª—ñ—î–Ω—Ç —Ç–∞ –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è',
  2: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤',
  3: '–ó–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏',
  4: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è',
} as const;

export type WizardStage = 1 | 2 | 3 | 4;

// üîÑ –ú–∞–ø–ø—ñ–Ω–≥ —Å—Ç–∞–Ω—É API –¥–æ –Ω–æ–º–µ—Ä–∞ –µ—Ç–∞–ø—É UI
export const mapApiStateToStage = (apiState?: OrderWizardResponseDTOCurrentState): WizardStage => {
  if (!apiState) return 1;

  switch (apiState) {
    // –ï—Ç–∞–ø 1: –ö–ª—ñ—î–Ω—Ç —Ç–∞ –±–∞–∑–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    case 'INITIAL':
    case 'CLIENT_SELECTION':
    case 'ORDER_INITIALIZATION':
      return 1;

    // –ï—Ç–∞–ø 2: –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥–º–µ—Ç—ñ–≤
    case 'ITEM_MANAGEMENT':
    case 'ITEM_WIZARD_ACTIVE':
      return 2;

    // –ï—Ç–∞–ø 3: –ó–∞–≥–∞–ª—å–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    case 'EXECUTION_PARAMS':
    case 'GLOBAL_DISCOUNTS':
    case 'PAYMENT_PROCESSING':
    case 'ADDITIONAL_INFO':
      return 3;

    // –ï—Ç–∞–ø 4: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    case 'ORDER_CONFIRMATION':
    case 'ORDER_REVIEW':
    case 'LEGAL_ASPECTS':
    case 'RECEIPT_GENERATION':
    case 'COMPLETED':
      return 4;

    // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    default:
      return 1;
  }
};

// üé® –î–æ–ø–æ–º—ñ–∂–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è UI
export const getStageProgress = (currentStage: WizardStage): number => {
  return ((currentStage - 1) / (Object.keys(WIZARD_STAGE_NAMES).length - 1)) * 100;
};

export const isStageCompleted = (stage: WizardStage, currentStage: WizardStage): boolean => {
  return stage < currentStage;
};

export const isStageActive = (stage: WizardStage, currentStage: WizardStage): boolean => {
  return stage === currentStage;
};

export const canNavigateToStage = (
  targetStage: WizardStage,
  currentStage: WizardStage
): boolean => {
  // –ú–æ–∂–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –µ—Ç–∞–ø–∏ –∞–±–æ –ø–æ—Ç–æ—á–Ω–∏–π
  return targetStage <= currentStage;
};
