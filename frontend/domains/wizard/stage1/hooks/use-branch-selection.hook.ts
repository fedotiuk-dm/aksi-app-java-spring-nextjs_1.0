// üéØ –•–£–ö –¥–ª—è –≤–∏–±–æ—Ä—É —Ñ—ñ–ª—ñ—ó —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä–∞
// –°–ø—Ä–æ—â–µ–Ω–∞ –ª–æ–≥—ñ–∫–∞ –±–µ–∑ –æ–∫—Ä–µ–º–æ–≥–æ –µ—Ç–∞–ø—É –±–∞–∑–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó

import { useCallback, useMemo, useEffect } from 'react';

import { useBasicOrderInfo } from './use-basic-order-info.hook';

/**
 * üéØ –•—É–∫ –¥–ª—è –≤–∏–±–æ—Ä—É —Ñ—ñ–ª—ñ—ó —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä–∞
 *
 * –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –í–∏–±—ñ—Ä —Ñ—ñ–ª—ñ—ó
 * - –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–º–µ—Ä–∞ –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
 * - –í–≤–µ–¥–µ–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ—ó –º—ñ—Ç–∫–∏
 * - –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä–∞
 */
export const useBranchSelection = () => {
  // 1. –ë–∞–∑–æ–≤–∏–π —Ö—É–∫ (–ø–µ—Ä–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ—Å–Ω—É—é—á—É –ª–æ–≥—ñ–∫—É)
  const basicOrderInfo = useBasicOrderInfo();

  // 2. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–º–µ—Ä—É –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó
  useEffect(() => {
    const hasUniqueTag = !!basicOrderInfo.computed.hasUniqueTag;
    const hasReceiptNumber = !!basicOrderInfo.computed.hasReceiptNumber;
    const selectedBranch = basicOrderInfo.computed.selectedBranch;
    const isGenerating = basicOrderInfo.loading.isGeneratingReceiptNumber;

    // –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–º–µ—Ä –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—ñ—Å–ª—è –≤–≤–µ–¥–µ–Ω–Ω—è —É–Ω—ñ–∫–∞–ª—å–Ω–æ—ó –º—ñ—Ç–∫–∏
    if (hasUniqueTag && selectedBranch && !hasReceiptNumber && !isGenerating) {
      console.log('üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –Ω–æ–º–µ—Ä—É –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó:', {
        hasUniqueTag,
        selectedBranch: selectedBranch.name,
        hasReceiptNumber,
        isGenerating,
      });

      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ–¥ —Ñ—ñ–ª—ñ—ó –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–æ–º–µ—Ä—É
      const branchCode = selectedBranch.code || 'DEFAULT';
      basicOrderInfo.actions.generateReceiptNumber(branchCode);
    }
  }, [
    basicOrderInfo.computed.hasUniqueTag,
    basicOrderInfo.computed.hasReceiptNumber,
    basicOrderInfo.computed.selectedBranch,
    basicOrderInfo.loading.isGeneratingReceiptNumber,
    basicOrderInfo.actions,
  ]);

  // 3. –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥—ñ–π
  const handleBranchSelected = useCallback(
    (branchId: string) => {
      basicOrderInfo.actions.selectBranch(branchId);
    },
    [basicOrderInfo.actions]
  );

  const handleUniqueTagEntered = useCallback(
    (tag: string) => {
      basicOrderInfo.actions.setUniqueTag(tag);
    },
    [basicOrderInfo.actions]
  );

  const handleCreateOrder = useCallback(() => {
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä–∞ –∑ –æ–±—Ä–∞–Ω–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    basicOrderInfo.actions.completeBasicOrder();
  }, [basicOrderInfo.actions]);

  // 4. Computed –∑–Ω–∞—á–µ–Ω–Ω—è
  const computed = useMemo(() => {
    return {
      // –°—Ç–∞–Ω –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ
      hasBranchSelected: !!basicOrderInfo.computed.selectedBranch,
      hasUniqueTag: !!basicOrderInfo.computed.hasUniqueTag,
      hasReceiptNumber: !!basicOrderInfo.computed.hasReceiptNumber,

      // –ì–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–¥–µ—Ä–∞
      canCreateOrder:
        !!basicOrderInfo.computed.selectedBranch &&
        !!basicOrderInfo.computed.hasUniqueTag &&
        !!basicOrderInfo.computed.hasReceiptNumber,

      // –û–±—Ä–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
      selectedBranch: basicOrderInfo.computed.selectedBranch,
      uniqueTag: basicOrderInfo.computed.basicOrderData?.uniqueTag,
      receiptNumber: basicOrderInfo.computed.basicOrderData?.receiptNumber,

      // –°—Ç–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
      isBranchSelectionCompleted:
        !!basicOrderInfo.computed.selectedBranch &&
        !!basicOrderInfo.computed.hasUniqueTag &&
        !!basicOrderInfo.computed.hasReceiptNumber,
    };
  }, [
    basicOrderInfo.computed.selectedBranch,
    basicOrderInfo.computed.hasUniqueTag,
    basicOrderInfo.computed.hasReceiptNumber,
    basicOrderInfo.computed.basicOrderData?.uniqueTag,
    basicOrderInfo.computed.basicOrderData?.receiptNumber,
  ]);

  // 5. –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
  return {
    // –î–∞–Ω—ñ
    data: {
      branches: basicOrderInfo.data.branches,
      selectedBranch: computed.selectedBranch,
      uniqueTag: computed.uniqueTag,
      receiptNumber: computed.receiptNumber,
    },

    // –°—Ç–∞–Ω–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    loading: {
      isLoadingBranches: basicOrderInfo.loading.isLoadingBranches,
      isCreatingOrder: basicOrderInfo.loading.isCompleting,
      isGeneratingReceiptNumber: basicOrderInfo.loading.isGeneratingReceiptNumber,
      isSettingUniqueTag: basicOrderInfo.loading.isSettingUniqueTag,
      isSelectingBranch: basicOrderInfo.loading.isSelectingBranch,
      isAnyLoading:
        basicOrderInfo.loading.isLoadingBranches ||
        basicOrderInfo.loading.isCompleting ||
        basicOrderInfo.loading.isGeneratingReceiptNumber ||
        basicOrderInfo.loading.isSettingUniqueTag ||
        basicOrderInfo.loading.isSelectingBranch,
    },

    // –î—ñ—ó
    actions: {
      selectBranch: handleBranchSelected,
      setUniqueTag: handleUniqueTagEntered,
      createOrder: handleCreateOrder,
      // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥—ñ—ó –∑ –±–∞–∑–æ–≤–æ–≥–æ —Ö—É–∫–∞
      generateReceiptNumber: basicOrderInfo.actions.generateReceiptNumber,
    },

    // –§–æ—Ä–º–∏
    form: basicOrderInfo.form,

    // Computed –∑–Ω–∞—á–µ–Ω–Ω—è
    computed,

    // –ë–∞–∑–æ–≤–∏–π —Ö—É–∫ (–¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π)
    basicOrderInfo,
  };
};

export type UseBranchSelectionReturn = ReturnType<typeof useBranchSelection>;
