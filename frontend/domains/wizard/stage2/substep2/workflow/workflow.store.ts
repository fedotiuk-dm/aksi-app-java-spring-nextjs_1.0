// üìã SUBSTEP2 WORKFLOW: Zustand —Å—Ç–æ—Ä –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø—Ä–µ–¥–º–µ—Ç–∞
// –¢—ñ–ª—å–∫–∏ UI —Å—Ç–∞–Ω –¥–ª—è workflow –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó

import { create } from 'zustand';
import { subscribeWithSelector } from 'zustand/middleware';

// –õ–æ–∫–∞–ª—å–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏
import {
  SUBSTEP2_UI_STEPS,
  SUBSTEP2_STEP_ORDER,
  SUBSTEP2_VALIDATION_RULES,
  SUBSTEP2_LIMITS,
  calculateSubstep2Progress,
  getNextSubstep2Step,
  getPreviousSubstep2Step,
  isFirstSubstep2Step,
  isLastSubstep2Step,
  type Substep2UIStep,
} from './workflow.constants';

// =================== –¢–ò–ü–ò ===================
export interface Substep2WorkflowUIState {
  // –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è
  sessionId: string | null;
  orderId: string | null;
  itemId: string | null;

  // UI workflow —Å—Ç–∞–Ω
  currentStep: Substep2UIStep;

  // –í–∏–±–æ—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ IDs)
  selectedMaterialId: string | null;
  selectedColorId: string | null;
  selectedFillerId: string | null;
  selectedWearLevelId: string | null;

  // UI –ø—Ä–∞–ø–æ—Ä—Ü—ñ
  isWorkflowStarted: boolean;
  canProceedToNext: boolean;
  hasUnsavedChanges: boolean;
}

export interface Substep2WorkflowUIActions {
  // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
  initializeWorkflow: (sessionId: string, orderId?: string, itemId?: string) => void;
  resetWorkflow: () => void;

  // –ö—Ä–æ–∫–∏ workflow
  setCurrentStep: (step: Substep2UIStep) => void;
  goToNextStep: () => void;
  goToPreviousStep: () => void;

  // –í–∏–±–æ—Ä–∏
  setSelectedMaterial: (materialId: string | null) => void;
  setSelectedColor: (colorId: string | null) => void;
  setSelectedFiller: (fillerId: string | null) => void;
  setSelectedWearLevel: (wearLevelId: string | null) => void;

  // UI —Å—Ç–∞–Ω
  setCanProceedToNext: (canProceed: boolean) => void;
  markHasUnsavedChanges: () => void;
  markChangesSaved: () => void;
}

export type Substep2WorkflowStore = Substep2WorkflowUIState & Substep2WorkflowUIActions;

// =================== –ü–û–ß–ê–¢–ö–û–í–ò–ô –°–¢–ê–ù ===================
const initialState: Substep2WorkflowUIState = {
  sessionId: null,
  orderId: null,
  itemId: null,
  currentStep: SUBSTEP2_UI_STEPS.MATERIAL_SELECTION,
  selectedMaterialId: null,
  selectedColorId: null,
  selectedFillerId: null,
  selectedWearLevelId: null,
  isWorkflowStarted: false,
  canProceedToNext: false,
  hasUnsavedChanges: false,
};

// =================== –°–¢–û–† ===================
export const useSubstep2WorkflowStore = create<Substep2WorkflowStore>()(
  subscribeWithSelector((set, get) => ({
    ...initialState,

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    initializeWorkflow: (sessionId: string, orderId?: string, itemId?: string) => {
      set({
        sessionId,
        orderId: orderId || null,
        itemId: itemId || null,
        isWorkflowStarted: true,
        currentStep: SUBSTEP2_UI_STEPS.MATERIAL_SELECTION,
        hasUnsavedChanges: false,
      });
    },

    resetWorkflow: () => {
      set(initialState);
    },

    // –ö—Ä–æ–∫–∏ workflow
    setCurrentStep: (step) => {
      set({ currentStep: step });
    },

    goToNextStep: () => {
      const { currentStep } = get();
      const nextStep = getNextSubstep2Step(currentStep);
      if (nextStep) {
        set({ currentStep: nextStep });
      }
    },

    goToPreviousStep: () => {
      const { currentStep } = get();
      const previousStep = getPreviousSubstep2Step(currentStep);
      if (previousStep) {
        set({ currentStep: previousStep });
      }
    },

    // –í–∏–±–æ—Ä–∏
    setSelectedMaterial: (materialId) => {
      set({
        selectedMaterialId: materialId,
        selectedColorId: null, // Reset –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –≤–∏–±–æ–∫—ñ–≤
        selectedFillerId: null,
        selectedWearLevelId: null,
        hasUnsavedChanges: true,
      });
    },

    setSelectedColor: (colorId) => {
      set({
        selectedColorId: colorId,
        selectedFillerId: null, // Reset –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –≤–∏–±–æ–∫—ñ–≤
        selectedWearLevelId: null,
        hasUnsavedChanges: true,
      });
    },

    setSelectedFiller: (fillerId) => {
      set({
        selectedFillerId: fillerId,
        selectedWearLevelId: null, // Reset –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –≤–∏–±–æ–∫—ñ–≤
        hasUnsavedChanges: true,
      });
    },

    setSelectedWearLevel: (wearLevelId) => {
      set({
        selectedWearLevelId: wearLevelId,
        hasUnsavedChanges: true,
      });
    },

    // UI —Å—Ç–∞–Ω
    setCanProceedToNext: (canProceed) => set({ canProceedToNext: canProceed }),
    markHasUnsavedChanges: () => set({ hasUnsavedChanges: true }),
    markChangesSaved: () => set({ hasUnsavedChanges: false }),
  }))
);

// =================== –°–ï–õ–ï–ö–¢–û–†–ò –ó –ö–û–ù–°–¢–ê–ù–¢–ê–ú–ò ===================
export const useSubstep2WorkflowSelectors = () => {
  const store = useSubstep2WorkflowStore();

  return {
    // –û—Å–Ω–æ–≤–Ω—ñ —Å–µ–ª–µ–∫—Ç–æ—Ä–∏
    isInitialized: store.sessionId !== null,
    isCompleted: store.currentStep === SUBSTEP2_UI_STEPS.COMPLETED,
    isFirstStep: isFirstSubstep2Step(store.currentStep),
    isLastStep: isLastSubstep2Step(store.currentStep),
    progressPercentage: calculateSubstep2Progress(store.currentStep),

    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –ø–µ—Ä–µ—Ö–æ–¥—ñ–≤ –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
    canGoToColorSelection: SUBSTEP2_VALIDATION_RULES.canGoToColorSelection(
      store.selectedMaterialId
    ),
    canGoToFillerSelection: SUBSTEP2_VALIDATION_RULES.canGoToFillerSelection(
      store.selectedMaterialId,
      store.selectedColorId
    ),
    canGoToWearLevelSelection: SUBSTEP2_VALIDATION_RULES.canGoToWearLevelSelection(
      store.selectedMaterialId,
      store.selectedColorId,
      store.selectedFillerId
    ),
    canValidate: SUBSTEP2_VALIDATION_RULES.canValidate(
      store.selectedMaterialId,
      store.selectedColorId,
      store.selectedFillerId,
      store.selectedWearLevelId
    ),
    canComplete: SUBSTEP2_VALIDATION_RULES.canComplete(
      store.selectedMaterialId,
      store.selectedColorId,
      store.selectedFillerId,
      store.selectedWearLevelId
    ),

    // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
    nextStep: getNextSubstep2Step(store.currentStep),
    previousStep: getPreviousSubstep2Step(store.currentStep),
    canGoNext: getNextSubstep2Step(store.currentStep) !== null,
    canGoBack: getPreviousSubstep2Step(store.currentStep) !== null,

    // –°—Ç–∞–Ω workflow
    ...store,
  };
};
