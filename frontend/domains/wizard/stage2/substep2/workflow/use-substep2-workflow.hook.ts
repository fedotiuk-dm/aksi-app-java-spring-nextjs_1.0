// üìã SUBSTEP2 WORKFLOW: –¢–æ–Ω–∫–∞ –æ–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü—ñ—ó —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø—Ä–µ–¥–º–µ—Ç–∞
// –ú–Ü–ù–Ü–ú–ê–õ–¨–ù–ê –ª–æ–≥—ñ–∫–∞, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–∏—Ö Orval –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π

import { useMemo } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';

// Orval —Ö—É–∫–∏ (–≥–æ—Ç–æ–≤—ñ –∑ –±–µ–∫–µ–Ω–¥—É)
import {
  useSubstep2InitializeSubstep,
  useSubstep2CompleteSubstep,
  useSubstep2GetCurrentCharacteristics,
} from '@/shared/api/generated/substep2';

// –õ–æ–∫–∞–ª—å–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏
import { useSubstep2WorkflowStore, useSubstep2WorkflowSelectors } from './workflow.store';
import {
  SUBSTEP2_UI_STEPS,
  SUBSTEP2_STEP_ORDER,
  SUBSTEP2_VALIDATION_RULES,
  SUBSTEP2_LIMITS,
  calculateSubstep2Progress,
  getNextSubstep2Step,
  getPreviousSubstep2Step,
  isFirstSubstep2Step,
  isLastSubstep2Step,
  type Substep2UIStep,
} from './workflow.constants';
import {
  initializationFormSchema,
  navigationFormSchema,
  completionFormSchema,
  type InitializationFormData,
  type NavigationFormData,
  type CompletionFormData,
} from './schemas';

// =================== –¢–û–ù–ö–ê –û–ë–ì–û–†–¢–ö–ê ===================
export const useSubstep2Workflow = () => {
  // UI —Å—Ç–∞–Ω –∑ Zustand
  const store = useSubstep2WorkflowStore();
  const selectors = useSubstep2WorkflowSelectors();

  // =================== ORVAL API –•–£–ö–ò ===================
  // –ú—É—Ç–∞—Ü—ñ—ó
  const initializeMutation = useSubstep2InitializeSubstep();
  const completeMutation = useSubstep2CompleteSubstep();

  // –ó–∞–ø–∏—Ç–∏
  const currentCharacteristicsQuery = useSubstep2GetCurrentCharacteristics(store.sessionId || '', {
    query: { enabled: !!store.sessionId },
  });

  // =================== –§–û–†–ú–ò (–ú–Ü–ù–Ü–ú–ê–õ–¨–ù–Ü) ===================
  const initializationForm = useForm<InitializationFormData>({
    resolver: zodResolver(initializationFormSchema),
    defaultValues: {
      sessionId: store.sessionId || '',
      orderId: store.orderId || undefined,
      itemId: store.itemId || undefined,
    },
  });

  const navigationForm = useForm({
    resolver: zodResolver(navigationFormSchema),
    defaultValues: {
      skipValidation: false,
    },
  });

  const completionForm = useForm({
    resolver: zodResolver(completionFormSchema),
    defaultValues: {
      saveProgress: true,
      proceedToNext: true,
    },
  });

  // =================== –°–¢–ê–ù –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø ===================
  const loading = useMemo(
    () => ({
      isInitializing: initializeMutation.isPending,
      isCompleting: completeMutation.isPending,
      isLoadingCharacteristics: currentCharacteristicsQuery.isLoading,
      isAnyLoading:
        initializeMutation.isPending ||
        completeMutation.isPending ||
        currentCharacteristicsQuery.isLoading,
    }),
    [
      initializeMutation.isPending,
      completeMutation.isPending,
      currentCharacteristicsQuery.isLoading,
    ]
  );

  // =================== –û–ë–ß–ò–°–õ–ï–ù–Ü –ó–ù–ê–ß–ï–ù–ù–Ø –ó –ö–û–ù–°–¢–ê–ù–¢–ê–ú–ò ===================
  const computed = useMemo(
    () => ({
      // –ü—Ä–æ–≥—Ä–µ—Å –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
      progressPercentage: calculateSubstep2Progress(store.currentStep),

      // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
      nextStep: getNextSubstep2Step(store.currentStep),
      previousStep: getPreviousSubstep2Step(store.currentStep),
      isFirstStep: isFirstSubstep2Step(store.currentStep),
      isLastStep: isLastSubstep2Step(store.currentStep),

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
      canGoToColorSelection: SUBSTEP2_VALIDATION_RULES.canGoToColorSelection(
        store.selectedMaterialId
      ),
      canGoToFillerSelection: SUBSTEP2_VALIDATION_RULES.canGoToFillerSelection(
        store.selectedMaterialId,
        store.selectedColorId
      ),
      canGoToWearLevelSelection: SUBSTEP2_VALIDATION_RULES.canGoToWearLevelSelection(
        store.selectedMaterialId,
        store.selectedColorId,
        store.selectedFillerId
      ),
      canValidate: SUBSTEP2_VALIDATION_RULES.canValidate(
        store.selectedMaterialId,
        store.selectedColorId,
        store.selectedFillerId,
        store.selectedWearLevelId
      ),
      canComplete: SUBSTEP2_VALIDATION_RULES.canComplete(
        store.selectedMaterialId,
        store.selectedColorId,
        store.selectedFillerId,
        store.selectedWearLevelId
      ),

      // –õ—ñ–º—ñ—Ç–∏ –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
      minSearchLength: SUBSTEP2_LIMITS.MIN_SEARCH_LENGTH,
      maxSearchLength: SUBSTEP2_LIMITS.MAX_SEARCH_LENGTH,
      debounceDelay: SUBSTEP2_LIMITS.DEBOUNCE_DELAY,
    }),
    [
      store.currentStep,
      store.selectedMaterialId,
      store.selectedColorId,
      store.selectedFillerId,
      store.selectedWearLevelId,
    ]
  );

  // =================== –ü–û–í–ï–†–ù–ï–ù–ù–Ø (–ì–†–£–ü–£–í–ê–ù–ù–Ø) ===================
  return {
    // UI —Å—Ç–∞–Ω (–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏ —Ç–∞ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º–∏)
    ui: {
      ...store,
      ...selectors,
    },

    // API –¥–∞–Ω—ñ (–ø—Ä—è–º–æ –∑ Orval)
    data: {
      currentCharacteristics: currentCharacteristicsQuery.data,
    },

    // –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    loading,

    // API –º—É—Ç–∞—Ü—ñ—ó (–ø—Ä—è–º–æ –∑ Orval)
    mutations: {
      initialize: initializeMutation,
      complete: completeMutation,
    },

    // –ó–∞–ø–∏—Ç–∏ (–ø—Ä—è–º–æ –∑ Orval)
    queries: {
      currentCharacteristics: currentCharacteristicsQuery,
    },

    // –§–æ—Ä–º–∏ (React Hook Form + Zod)
    forms: {
      initialization: initializationForm,
      navigation: navigationForm,
      completion: completionForm,
    },

    // –û–±—á–∏—Å–ª–µ–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
    computed,

    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏ (–¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –≤ UI)
    constants: {
      UI_STEPS: SUBSTEP2_UI_STEPS,
      STEP_ORDER: SUBSTEP2_STEP_ORDER,
      VALIDATION_RULES: SUBSTEP2_VALIDATION_RULES,
      LIMITS: SUBSTEP2_LIMITS,
    },
  };
};

// =================== –¢–ò–ü–ò ===================
export type UseSubstep2WorkflowReturn = ReturnType<typeof useSubstep2Workflow>;
