// üìã –ü–Ü–î–ï–¢–ê–ü 2.3: –°—Ö–µ–º–∏ –¥–ª—è –∑–∞–±—Ä—É–¥–Ω–µ–Ω—å —Ç–∞ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
// –†–µ–µ–∫—Å–ø–æ—Ä—Ç Orval —Å—Ö–µ–º + –ª–æ–∫–∞–ª—å–Ω—ñ UI —Ñ–æ—Ä–º–∏

import { z } from 'zod';

// =================== ORVAL –°–•–ï–ú–ò ===================

// –†–µ–µ–∫—Å–ø–æ—Ä—Ç TypeScript —Ç–∏–ø—ñ–≤ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º–∏ –Ω–∞–∑–≤–∞–º–∏
export type {
  StainTypeDTO as Substep3StainTypeDTO,
  DefectTypeDTO as Substep3DefectTypeDTO,
  StainsDefectsDTO as Substep3StainsDefectsDTO,
  SubstepResultDTO as Substep3SubstepResultDTO,
  OrderItemAddRequest as Substep3OrderItemAddRequest,
  StainsDefectsContext as Substep3StainsDefectsContext,
  StainsDefectsContextCurrentState as Substep3StainsDefectsContextCurrentState,
} from '@api/substep3';

// –†–µ–µ–∫—Å–ø–æ—Ä—Ç Zod —Å—Ö–µ–º –¥–ª—è –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó
export {
  // Body —Å—Ö–µ–º–∏
  substep3InitializeSubstepBody as Substep3InitializeSubstepBodySchema,

  // Params —Å—Ö–µ–º–∏
  substep3InitializeSubstepParams as Substep3InitializeSubstepParamsSchema,
  substep3ProcessStainSelectionParams as Substep3ProcessStainSelectionParamsSchema,
  substep3ProcessStainSelectionQueryParams as Substep3ProcessStainSelectionQueryParamsSchema,
  substep3ProcessDefectSelectionParams as Substep3ProcessDefectSelectionParamsSchema,
  substep3ProcessDefectSelectionQueryParams as Substep3ProcessDefectSelectionQueryParamsSchema,
  substep3ProcessDefectNotesParams as Substep3ProcessDefectNotesParamsSchema,
  substep3ProcessDefectNotesQueryParams as Substep3ProcessDefectNotesQueryParamsSchema,
  substep3CompleteSubstepParams as Substep3CompleteSubstepParamsSchema,
  substep3GoBackParams as Substep3GoBackParamsSchema,
  substep3GoBackQueryParams as Substep3GoBackQueryParamsSchema,
  substep3GetContextParams as Substep3GetContextParamsSchema,

  // Response —Å—Ö–µ–º–∏
  substep3InitializeSubstep200Response as Substep3InitializeSubstepResponseSchema,
  substep3ProcessStainSelection200Response as Substep3ProcessStainSelectionResponseSchema,
  substep3ProcessDefectSelection200Response as Substep3ProcessDefectSelectionResponseSchema,
  substep3ProcessDefectNotes200Response as Substep3ProcessDefectNotesResponseSchema,
  substep3CompleteSubstep200Response as Substep3CompleteSubstepResponseSchema,
  substep3GoBack200Response as Substep3GoBackResponseSchema,
  substep3GetAvailableStainTypes200Response as Substep3GetAvailableStainTypesResponseSchema,
  substep3GetAvailableDefectTypes200Response as Substep3GetAvailableDefectTypesResponseSchema,
  substep3GetContext200Response as Substep3GetContextResponseSchema,
} from '@api/substep3';

// =================== –õ–û–ö–ê–õ–¨–ù–Ü UI –§–û–†–ú–ò ===================
// –ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ —Å—Ö–µ–º–∏ –¥–ª—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ (–ù–ï –¥—É–±–ª—é—î–º–æ API)

// –§–æ—Ä–º–∞ –≤–∏–±–æ—Ä—É –∑–∞–±—Ä—É–¥–Ω–µ–Ω—å
export const substep3StainSelectionFormSchema = z.object({
  selectedStains: z.array(z.string()).min(1, '–û–±–µ—Ä—ñ—Ç—å –ø—Ä–∏–Ω–∞–π–º–Ω—ñ –æ–¥–Ω–µ –∑–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è'),
  otherStains: z.string().optional(),
});

export type Substep3StainSelectionFormData = z.infer<typeof substep3StainSelectionFormSchema>;

// –§–æ—Ä–º–∞ –≤–∏–±–æ—Ä—É –¥–µ—Ñ–µ–∫—Ç—ñ–≤
export const substep3DefectSelectionFormSchema = z
  .object({
    selectedDefects: z.array(z.string()),
    noGuaranteeReason: z.string().optional(),
  })
  .refine((data) => data.selectedDefects.length > 0 || !!data.noGuaranteeReason, {
    message: '–û–±–µ—Ä—ñ—Ç—å –¥–µ—Ñ–µ–∫—Ç–∏ –∞–±–æ –≤–∫–∞–∂—ñ—Ç—å –ø—Ä–∏—á–∏–Ω—É –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ –≥–∞—Ä–∞–Ω—Ç—ñ—ó',
    path: ['selectedDefects'],
  });

export type Substep3DefectSelectionFormData = z.infer<typeof substep3DefectSelectionFormSchema>;

// –§–æ—Ä–º–∞ –ø—Ä–∏–º—ñ—Ç–æ–∫ –¥–æ –¥–µ—Ñ–µ–∫—Ç—ñ–≤
export const substep3DefectNotesFormSchema = z.object({
  defectNotes: z
    .string()
    .min(10, '–ü—Ä–∏–º—ñ—Ç–∫–∏ –ø–æ–≤–∏–Ω–Ω—ñ –º—ñ—Å—Ç–∏—Ç–∏ –º—ñ–Ω—ñ–º—É–º 10 —Å–∏–º–≤–æ–ª—ñ–≤')
    .max(1000, '–ü—Ä–∏–º—ñ—Ç–∫–∏ –Ω–µ –º–æ–∂—É—Ç—å –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 1000 —Å–∏–º–≤–æ–ª—ñ–≤'),
});

export type Substep3DefectNotesFormData = z.infer<typeof substep3DefectNotesFormSchema>;

// –§–æ—Ä–º–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
export const substep3DisplaySettingsFormSchema = z.object({
  showRiskLevels: z.boolean(),
  groupByCategory: z.boolean(),
  showDescriptions: z.boolean(),
});

export type Substep3DisplaySettingsFormData = z.infer<typeof substep3DisplaySettingsFormSchema>;
